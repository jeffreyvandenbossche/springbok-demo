{"version":3,"names":["breadcrumbCss","BsBreadcrumb","this","action","wrapper","onBsButtonClick","e","detail","name","displayedItems","parsedData","parseIfString","data","componentWillLoad","length","splice","render","schema","itemListElement","map","item","index","breadcrumb","position","url","pageTitle","h","Host","class","breadcrumbItem","isFirstItem","isLastItem","tagClass","href","IconName","BMark","CaretForward","onBsClickAction","type","JSON","stringify","__decorate","Memoize"],"sources":["./src/components/molecules/breadcrumb/breadcrumb.scss?tag=bs-breadcrumb&encapsulation=shadow","./src/components/molecules/breadcrumb/breadcrumb.tsx"],"sourcesContent":[":host .breadcrumb {\n  display: flex;\n  flex-flow: wrap;\n  gap: rem(12);\n  width: fit-content;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n\n:host .breadcrumb-item {\n  @include font(cta-label-secondary);\n  display: flex;\n  gap: rem(12);\n  align-items: center;\n  padding: 0;\n  overflow: hidden;\n  line-height: 1;\n  white-space: nowrap;\n\n  bs-icon {\n    font-size: rem(24);\n  }\n}\n\n.is-active {\n  --button--font-weight: #{font-weight('bold')};\n}\n\n:host .breadcrumb-item.is-b-mark {\n  bs-icon {\n    padding: rem(3);\n    font-size: rem(18);\n  }\n}\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BreadcrumbData } from './breadcrumb.types';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { BsClickActionCustomEvent } from '../../../components';\nimport { BsClickAction } from '../../atoms/click-action/click-action';\n\n/**\n * The breadcrumb component.\n */\n\n@Component({\n  tag: 'bs-breadcrumb',\n  styleUrl: 'breadcrumb.scss',\n  shadow: true,\n})\nexport class BsBreadcrumb {\n  private action = 'unwrap';\n\n  private wrapper = 'wrapper';\n\n  /** States */\n  @State() wrapped: boolean = true;\n\n  @State() displayedItems: Array<BreadcrumbData | string> = [];\n\n  /** Props */\n  /**\n   * Breadcrumb items data.\n   */\n  @Prop() data: BreadcrumbData[] | string;\n\n  @Memoize('data')\n  get parsedData(): BreadcrumbData[] {\n    return parseIfString(this.data);\n  }\n\n  /** Methods */\n  private onBsButtonClick = (e: BsClickActionCustomEvent<BsClickAction>) => {\n    if (e.detail.name === this.action) {\n      this.displayedItems = [...this.parsedData];\n    }\n  };\n\n  componentWillLoad() {\n    this.displayedItems = [...this.parsedData];\n\n    if (this.parsedData.length > 4) {\n      this.displayedItems.splice(2, this.parsedData.length - 4, this.wrapper);\n    }\n  }\n\n  render() {\n    const schema = {\n      '@context': 'https://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        this.parsedData.map((item, index) => {\n          const breadcrumb = {\n            '@type': 'ListItem',\n            position: index + 1,\n            item: {\n              '@id': item.url,\n              name: item.pageTitle,\n            },\n          };\n\n          return breadcrumb;\n        }),\n      ],\n    };\n\n    return (\n      <Host>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            {this.displayedItems.map((breadcrumbItem, index) => {\n              const isFirstItem = index === 0;\n              const isLastItem = index === this.displayedItems.length - 1;\n\n              return typeof breadcrumbItem !== 'string' ? (\n                <li>\n                  <bs-click-action\n                    tagClass={`breadcrumb-item ${isLastItem ? 'is-active' : ''} ${\n                      isFirstItem ? 'is-b-mark' : ''\n                    }`}\n                    href={breadcrumbItem.url}\n                    aria-current={isLastItem ? 'page' : ''}\n                  >\n                    <bs-icon name={isFirstItem ? IconName.BMark : IconName.CaretForward} />\n                    {!isFirstItem && <span>{breadcrumbItem.pageTitle}</span>}\n                  </bs-click-action>\n                </li>\n              ) : (\n                <li>\n                  <bs-click-action\n                    tagClass={'breadcrumb-item'}\n                    name={this.action}\n                    onBsClickAction={this.onBsButtonClick}\n                  >\n                    <bs-icon name={IconName.CaretForward} />\n                    <span>...</span>\n                  </bs-click-action>\n                </li>\n              );\n            })}\n          </ol>\n          <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n        </nav>\n      </Host>\n    );\n  }\n}\n"],"mappings":"8JAAA,MAAMA,EAAgB,w+N,iXCgBTC,EAAY,M,yBACfC,KAAAC,OAAS,SAETD,KAAAE,QAAU,UAmBVF,KAAAG,gBAAmBC,IACzB,GAAIA,EAAEC,OAAOC,OAASN,KAAKC,OAAQ,CACjCD,KAAKO,eAAiB,IAAIP,KAAKQ,W,gBAlBP,K,oBAE8B,G,oBAStDA,iBACF,OAAOC,EAAcT,KAAKU,K,CAU5BC,oBACEX,KAAKO,eAAiB,IAAIP,KAAKQ,YAE/B,GAAIR,KAAKQ,WAAWI,OAAS,EAAG,CAC9BZ,KAAKO,eAAeM,OAAO,EAAGb,KAAKQ,WAAWI,OAAS,EAAGZ,KAAKE,Q,EAInEY,SACE,MAAMC,EAAS,CACb,WAAY,qBACZ,QAAS,iBACTC,gBAAiB,CACfhB,KAAKQ,WAAWS,KAAI,CAACC,EAAMC,KACzB,MAAMC,EAAa,CACjB,QAAS,WACTC,SAAUF,EAAQ,EAClBD,KAAM,CACJ,MAAOA,EAAKI,IACZhB,KAAMY,EAAKK,YAIf,OAAOH,CAAU,MAKvB,OACEI,EAACC,EAAI,KACHD,EAAA,oBAAgB,cACdA,EAAA,MAAIE,MAAM,cACP1B,KAAKO,eAAeU,KAAI,CAACU,EAAgBR,KACxC,MAAMS,EAAcT,IAAU,EAC9B,MAAMU,EAAaV,IAAUnB,KAAKO,eAAeK,OAAS,EAE1D,cAAce,IAAmB,SAC/BH,EAAA,UACEA,EAAA,mBACEM,SAAU,mBAAmBD,EAAa,YAAc,MACtDD,EAAc,YAAc,KAE9BG,KAAMJ,EAAeL,IAAG,eACVO,EAAa,OAAS,IAEpCL,EAAA,WAASlB,KAAMsB,EAAcI,EAASC,MAAQD,EAASE,gBACrDN,GAAeJ,EAAA,YAAOG,EAAeJ,aAI3CC,EAAA,UACEA,EAAA,mBACEM,SAAU,kBACVxB,KAAMN,KAAKC,OACXkC,gBAAiBnC,KAAKG,iBAEtBqB,EAAA,WAASlB,KAAM0B,EAASE,eACxBV,EAAA,oBAGL,KAGLA,EAAA,UAAQY,KAAK,uBAAuBC,KAAKC,UAAUvB,K,GA1E3DwB,EAAA,CADCC,EAAQ,S"}