{"version":3,"names":["tooltipCss","BsTooltip","this","handleKeydownFunction","handleKeydown","bind","handleDocumentClickFunction","handleDocumentClick","onResize","windowWidth","window","innerWidth","windowVerticalPadding","windowHorizontalPadding","windowContentWrapperTopBorder","windowContentWrapperLeftBorder","windowContentWrapperRightBorder","tooltipTopBorder","tooltipPanelRef","getBoundingClientRect","top","tooltipLeftBorder","left","tooltipRightBorder","right","isContentVisible","bottomPosition","tooltipContentRef","style","transform","overflowAmount","Math","abs","throttleMethod","throttle","setTooltipPosition","openTooltip","isTransitioning","addEventListener","document","tooltipWrapperRef","once","closeTooltip","removeEventListener","e","key","clickTarget","composedPath","tooltipRef","contains","toggleTooltipOpening","stopPropagation","render","h","Host","class","onClick","onMouseEnter","onMouseLeave","ref","el","name","IconName","Help","innerHTML","titleText","contentText"],"sources":["./src/components/molecules/tooltip/tooltip.scss?tag=bs-tooltip&encapsulation=shadow","./src/components/molecules/tooltip/tooltip.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n  display: inline;\n}\n\n:host .tooltip-button {\n  @include reset-text;\n\n  display: inline-flex;\n  align-items: center;\n  padding: 0.2em 0.5em;\n\n  font: inherit;\n\n  cursor: help;\n  background: $gray-900;\n  border: 0;\n  border-radius: rem(4);\n}\n\n:host .highlighted-term {\n  margin-right: 0.25em;\n  font-weight: font-weight('bold');\n}\n\n:host .tooltip {\n  position: relative;\n  display: inline-flex;\n}\n\n:host .icon-wrapper {\n  font-size: 1.2em;\n  line-height: 0;\n  color: inherit;\n  cursor: help;\n\n  background: transparent;\n  border: 0;\n\n  &.is-disabled {\n    pointer-events: none;\n  }\n}\n\n:host .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n\n  transition: $transition-smooth;\n  transition-property: visibility, opacity, transform;\n\n  transform: translateY(5px);\n\n  &.is-visible {\n    visibility: visible;\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n:host .content-panel {\n  $dropdown-triangle-height: rem(9);\n\n  @include z-index('tooltip');\n\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n\n  padding-bottom: $dropdown-triangle-height;\n  margin-bottom: 0.35em;\n\n  transform: translateX(-50%);\n\n  &:before {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n\n    width: rem(19);\n    height: calc(#{$dropdown-triangle-height} + 1px);\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n\n    content: '';\n\n    background: $gray-900;\n    border-radius: 0.25em 0 0;\n    transform: translateX(-50%) rotate(180deg);\n  }\n\n  &.is-below-icon {\n    top: 100%;\n    bottom: unset;\n\n    padding-top: $dropdown-triangle-height;\n    padding-bottom: unset;\n    margin-top: 0.35em;\n    margin-bottom: unset;\n\n    &:before {\n      top: 0;\n      bottom: unset;\n\n      transform: translateX(-50%);\n    }\n  }\n}\n\n:host .content {\n  position: relative;\n\n  width: max-content;\n  max-width: rem(360);\n  max-height: rem(200);\n  padding: 20px 24px;\n  overflow-y: auto;\n\n  font-size: font-size('small');\n  text-align: left;\n\n  pointer-events: visible;\n  background: $gray-900;\n\n  border-radius: rem(16);\n\n  @include mq('max', 'md') {\n    max-width: rem(300);\n  }\n}\n\n:host .title {\n  display: block;\n  margin-bottom: rem(5);\n  font-size: font-size('x-large');\n  font-weight: font-weight('bold');\n}\n","import { Component, Host, h, Prop, State, Element, Listen } from '@stencil/core';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { throttle } from '../../../utils/throttle';\n\n/**\n * Tooltip component.\n */\n@Component({\n  tag: 'bs-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true,\n})\nexport class BsTooltip {\n  /**\n   * Refs\n   */\n\n  private tooltipRef: HTMLElement;\n\n  private tooltipWrapperRef: HTMLElement;\n\n  private tooltipPanelRef: HTMLElement;\n\n  private tooltipContentRef: HTMLElement;\n\n  /**\n   * Properties\n   */\n\n  private handleKeydownFunction = this.handleKeydown.bind(this); // to be able to remove event with \".bind()\" function\n\n  private handleDocumentClickFunction = this.handleDocumentClick.bind(this); // to be able to remove event with \".bind()\" function\n\n  @Element() host: HTMLBsTooltipElement;\n\n  /**\n   * State\n   */\n\n  @State() bottomPosition: boolean = false;\n\n  @State() isContentVisible: boolean = false;\n\n  @State() isTransitioning: boolean = false;\n\n  /**\n   * Tooltip's title\n   */\n  @Prop() titleText: string;\n\n  /**\n   * Tooltip's text content\n   */\n  @Prop() contentText: string;\n\n  /**\n   * Events\n   */\n\n  // check tooltip position to avoid it overflowing the page\n  @Listen('resize', { target: 'window' })\n  setTooltipPosition() {\n    this.throttleMethod();\n  }\n\n  /**\n   * Methods\n   */\n\n  private onResize = () => {\n    const windowWidth = window.innerWidth;\n    const windowVerticalPadding = 10;\n    const windowHorizontalPadding = 10;\n\n    const windowContentWrapperTopBorder = windowVerticalPadding;\n    const windowContentWrapperLeftBorder = windowHorizontalPadding;\n    const windowContentWrapperRightBorder = windowWidth - windowHorizontalPadding;\n\n    const tooltipTopBorder = this.tooltipPanelRef.getBoundingClientRect().top;\n    const tooltipLeftBorder = this.tooltipPanelRef.getBoundingClientRect().left;\n    const tooltipRightBorder = this.tooltipPanelRef.getBoundingClientRect().right;\n\n    // if tooltip is not open\n    if (!this.isContentVisible) return;\n\n    // if tooltip overflows on top of window\n    if (!this.bottomPosition && tooltipTopBorder < windowContentWrapperTopBorder)\n      this.bottomPosition = true;\n\n    // if tooltip don't overflow on left and right of content width\n    if (\n      tooltipLeftBorder >= windowContentWrapperLeftBorder &&\n      tooltipRightBorder <= windowContentWrapperRightBorder\n    ) {\n      this.tooltipContentRef.style.transform = 'translateX(0px)';\n\n      return;\n    }\n\n    // if tooltip's right border overflows\n    if (tooltipRightBorder > windowContentWrapperRightBorder) {\n      const overflowAmount = windowContentWrapperRightBorder - tooltipRightBorder;\n\n      this.tooltipContentRef.style.transform = `translateX(${overflowAmount}px)`;\n\n      return;\n    }\n\n    // if tooltip's right border overflows\n    if (tooltipLeftBorder < windowContentWrapperLeftBorder) {\n      const overflowAmount =\n        tooltipLeftBorder >= 0\n          ? windowContentWrapperLeftBorder - tooltipLeftBorder\n          : windowContentWrapperLeftBorder + Math.abs(tooltipLeftBorder);\n\n      this.tooltipContentRef.style.transform = `translateX(${overflowAmount}px)`;\n    }\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  private openTooltip() {\n    this.isTransitioning = true;\n    this.isContentVisible = true;\n\n    this.setTooltipPosition();\n\n    window.addEventListener('keydown', this.handleKeydownFunction);\n    document.addEventListener('click', this.handleDocumentClickFunction);\n\n    // prevent click on tooltip trigger button when tooltip is transitioning\n    this.tooltipWrapperRef.addEventListener(\n      'transitionend',\n      () => {\n        this.isTransitioning = false;\n      },\n      { once: true }\n    );\n  }\n\n  private closeTooltip() {\n    this.isTransitioning = true;\n    this.isContentVisible = false;\n\n    window.removeEventListener('keydown', this.handleKeydownFunction);\n    document.removeEventListener('click', this.handleDocumentClickFunction);\n\n    // reset tooltip vertical position when closed\n    // because we only check \"top\" overflowing in setTooltipPosition()\n    this.tooltipWrapperRef.addEventListener(\n      'transitionend',\n      () => {\n        if (this.isContentVisible) return;\n\n        this.bottomPosition = false;\n        this.isTransitioning = false;\n      },\n      { once: true }\n    );\n  }\n\n  private handleKeydown(e: KeyboardEvent) {\n    if (e.key === 'Escape') this.closeTooltip();\n  }\n\n  private handleDocumentClick(e: MouseEvent) {\n    // need to use composedPath, because by default \"e.target\" will always be the Shadow DOM host\n    const clickTarget = e.composedPath()[0] as Node;\n\n    if (!this.isContentVisible) return;\n\n    // if click outside of tooltip\n    if (!this.tooltipRef.contains(clickTarget)) {\n      // close tooltip\n      this.closeTooltip();\n    }\n  }\n\n  private toggleTooltipOpening(e: MouseEvent) {\n    e.stopPropagation(); // to avoid issues with \"handleDocumentClick\" function\n\n    if (this.isTransitioning) return;\n\n    if (this.isContentVisible) {\n      this.closeTooltip();\n    } else {\n      this.openTooltip();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class=\"tooltip-button\"\n          onClick={this.toggleTooltipOpening.bind(this)}\n          onMouseEnter={this.openTooltip.bind(this)}\n          onMouseLeave={this.closeTooltip.bind(this)}\n        >\n          {/* Text slot */}\n          <span class=\"highlighted-term\">\n            <slot />\n          </span>\n\n          {/* Icon */}\n          <div\n            ref={(el) => {\n              this.tooltipRef = el;\n            }}\n            class=\"tooltip\"\n          >\n            {/* Icon */}\n            <div class={`icon-wrapper ${this.isTransitioning ? 'is-disabled' : ''}`}>\n              <bs-icon name={IconName.Help} />\n            </div>\n\n            {/* Content */}\n            <div\n              ref={(el) => {\n                this.tooltipWrapperRef = el;\n              }}\n              class={`content-wrapper ${this.isContentVisible ? 'is-visible' : ''}`}\n            >\n              <div\n                ref={(el) => {\n                  this.tooltipPanelRef = el;\n                }}\n                class={`content-panel ${this.bottomPosition ? 'is-below-icon' : ''}`}\n              >\n                <div\n                  ref={(el) => {\n                    this.tooltipContentRef = el;\n                  }}\n                  class=\"content\"\n                >\n                  <span class=\"title\" innerHTML={this.titleText}></span>\n                  <p innerHTML={this.contentText}></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </button>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}