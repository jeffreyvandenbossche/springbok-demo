{"version":3,"names":["playerApi","youtubeVideoCss","BsYoutubeVideo","this","onPlayerReady","e","updateYoutubeController","onPlayerStateChange","playerState","target","getPlayerState","PlayerState","PLAYING","progressBarInterval","setInterval","calculateTime","UNSTARTED","player","playVideo","ENDED","_a","overlayRef","closeOverlay","clearInterval","currentTime","getCurrentTime","getDuration","mute","bsYoutubeControllerUpdate","emit","id","videoId","isIosOrSafari","userAgent","navigator","chromeAgent","indexOf","safariAgent","match","isEmpty","createPlayer","YT","Player","videoElementRef","width","height","host","playerVars","playsinline","controls","rel","autoplay","events","onReady","onStateChange","handleMute","unMute","bsYoutubeControllerClickHandler","detail","action","value","pauseVideo","getIframe","requestFullscreen","seekTo","bsYoutubeAPIReadyHandler","componentDidLoad","tag","document","createElement","scripts","getElementsByTagName","src","i","length","parentNode","insertBefore","disconnectedCallback","destroy","render","inline","h","slot","class","ref","el","tabIndex","Host"],"sources":["./src/components/organisms/youtube-video/youtube-video.data.ts","./src/components/organisms/youtube-video/youtube-video.scss?tag=bs-youtube-video&encapsulation=shadow","./src/components/organisms/youtube-video/youtube-video.tsx"],"sourcesContent":["export const playerApi = 'https://www.youtube.com/player_api';\n",".media {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  @include z-index('modal');\n}\n\n.youtube-video {\n  position: relative;\n  max-width: 100%;\n  height: 100%;\n  aspect-ratio: 16/9;\n  margin: 0 auto;\n  overflow: hidden;\n  writing-mode: vertical-lr;\n}\n\n.youtube-embed {\n  width: 100%;\n  height: 200%;\n  margin-top: -50%;\n}\n\n.youtube-thumbnail {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.youtube-thumbnail-button {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 1rem;\n  font-size: 2rem;\n  color: $white;\n  pointer-events: all;\n  border: 4px solid $white;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.is-disabled {\n  pointer-events: none;\n}\n\n.is-hidden {\n  display: none;\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { isEmpty } from '@springbokagency/stencil-base';\nimport { playerApi } from './youtube-video.data';\nimport { PlayerState, YoutubeControlUpdateEvent } from './youtube-video.types';\nimport { YoutubeControlClickEvent } from '../../molecules/youtube-control/youtube-control.types';\n\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady: () => void;\n    onYouTubePlayerAPIReady: () => void;\n  }\n}\n\n/**\n * The youtube video component.\n */\n@Component({\n  tag: 'bs-youtube-video',\n  styleUrl: 'youtube-video.scss',\n  shadow: true,\n})\nexport class BsYoutubeVideo {\n  private player: YT.Player;\n\n  private progressBarInterval: NodeJS.Timeout;\n\n  private videoElementRef: HTMLDivElement | HTMLIFrameElement;\n\n  private overlayRef: HTMLBsDarkOverlayElement;\n\n  /** States */\n  @State() playerState: PlayerState = null;\n\n  @State() currentTime: number;\n\n  /** Props */\n\n  /**\n   * Should the player be loaded inline?\n   */\n  @Prop() inline?: boolean = false;\n\n  /**\n   * The youtube video ID.\n   */\n  @Prop() videoId!: string;\n\n  /**\n   * Should the video be muted initially?\n   */\n  @Prop() mute?: boolean = false;\n\n  @Watch('mute')\n  handleMute(mute: boolean) {\n    if (mute) {\n      this.player.mute();\n    } else {\n      this.player.unMute();\n    }\n  }\n\n  /** Events */\n  /** Event for all user actions on the controller. */\n  @Event() bsYoutubeControllerUpdate: EventEmitter<YoutubeControlUpdateEvent>;\n\n  /** Listeners */\n  @Listen('bsYoutubeControllerClick', { target: 'window' })\n  bsYoutubeControllerClickHandler(e: CustomEvent<YoutubeControlClickEvent>) {\n    if (this.videoId === e.detail.id) {\n      switch (e.detail.action) {\n        case 'play':\n          if (e.detail.value === 1) {\n            this.player.playVideo();\n          } else {\n            this.player.pauseVideo();\n          }\n\n          break;\n        case 'mute':\n          this.mute = !this.mute;\n          break;\n\n        case 'fullscreen': {\n          this.player.getIframe().requestFullscreen();\n          break;\n        }\n\n        case 'progress-bar-input':\n          this.player.seekTo((e.detail.value / 100) * this.player.getDuration(), true);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  @Listen('bsYoutubeAPIReady', { target: 'window' })\n  bsYoutubeAPIReadyHandler() {\n    this.createPlayer();\n  }\n\n  /** methods */\n\n  private onPlayerReady = (e: any) => {\n    this.updateYoutubeController();\n    this.onPlayerStateChange(e);\n  };\n\n  private onPlayerStateChange = (e: YT.OnStateChangeEvent) => {\n    this.playerState = e.target.getPlayerState();\n\n    if (this.playerState === PlayerState.PLAYING) {\n      this.progressBarInterval = setInterval(this.calculateTime, 100);\n    } else if (this.playerState === PlayerState.UNSTARTED) {\n      this.player.playVideo();\n    } else if (this.playerState === PlayerState.ENDED) {\n      this.updateYoutubeController();\n      this.overlayRef?.closeOverlay();\n    } else {\n      this.calculateTime();\n      clearInterval(this.progressBarInterval);\n    }\n\n    this.updateYoutubeController();\n  };\n\n  private calculateTime = () => {\n    this.currentTime = (this.player.getCurrentTime() / this.player.getDuration()) * 100;\n    this.updateYoutubeController();\n  };\n\n  private updateYoutubeController = () => {\n    const { mute, playerState, currentTime } = this;\n\n    this.bsYoutubeControllerUpdate.emit({ id: this.videoId, mute, playerState, currentTime });\n  };\n\n  private isIosOrSafari = (): boolean => {\n    const { userAgent } = navigator;\n    const chromeAgent = userAgent.indexOf('Chrome') > -1;\n    let safariAgent = userAgent.indexOf('Safari') > -1;\n\n    if (chromeAgent && safariAgent) safariAgent = false;\n    // chrome on mac has match for both Chrome and Safari.\n\n    const match = !isEmpty(userAgent.match(/(iPad|iPhone|iPod)/g)) || safariAgent;\n\n    this.mute = match ? true : this.mute;\n\n    return match;\n  };\n\n  private createPlayer = () => {\n    this.player = new YT.Player(this.videoElementRef, {\n      width: '640',\n      height: '360',\n      videoId: this.videoId,\n      host: 'https://www.youtube.com',\n      playerVars: {\n        playsinline: 1,\n        controls: 0,\n        rel: 0,\n        mute: this.isIosOrSafari() ? 1 : +this.mute,\n        // mute by default on IOS devices or safari for otherwise the autoplay will not work.\n        autoplay: 1,\n      },\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange,\n      },\n    });\n  };\n\n  /** lifecycle hooks */\n  componentDidLoad() {\n    const tag = document.createElement('script');\n    const scripts = document.getElementsByTagName('script') as HTMLCollectionOf<HTMLScriptElement>;\n\n    tag.src = playerApi;\n\n    for (let i = 0; i < scripts.length; i += 1) {\n      if (scripts[i].src === playerApi) {\n        this.createPlayer();\n\n        return;\n      }\n    }\n\n    scripts[0].parentNode.insertBefore(tag, scripts[0]);\n\n    this.mute = this.isIosOrSafari() ? true : this.mute;\n  }\n\n  disconnectedCallback() {\n    this.player.destroy();\n  }\n\n  render() {\n    if (this.inline) {\n      return (\n        <div slot=\"media\" class=\"youtube-video\">\n          <div\n            ref={(el) => {\n              this.videoElementRef = el;\n            }}\n            class=\"youtube-embed\"\n            tabIndex={-1}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Host>\n        <bs-dark-overlay\n          class=\"media\"\n          ref={(el) => {\n            this.overlayRef = el;\n          }}\n        >\n          <div slot=\"media\" class=\"youtube-video\">\n            <div\n              ref={(el) => {\n                this.videoElementRef = el;\n              }}\n              class=\"youtube-embed\"\n              tabIndex={-1}\n            ></div>\n          </div>\n          <div slot=\"controller\" class=\"media-control\">\n            <bs-youtube-control mute={this.mute} videoId={this.videoId} />\n          </div>\n        </bs-dark-overlay>\n      </Host>\n    );\n  }\n}\n"],"mappings":"iIAAO,MAAMA,EAAY,qCCAzB,MAAMC,EAAkB,sgO,MCqBXC,EAAc,M,8FAkFjBC,KAAAC,cAAiBC,IACvBF,KAAKG,0BACLH,KAAKI,oBAAoBF,EAAE,EAGrBF,KAAAI,oBAAuBF,I,MAC7BF,KAAKK,YAAcH,EAAEI,OAAOC,iBAE5B,GAAIP,KAAKK,cAAgBG,EAAYC,QAAS,CAC5CT,KAAKU,oBAAsBC,YAAYX,KAAKY,cAAe,I,MACtD,GAAIZ,KAAKK,cAAgBG,EAAYK,UAAW,CACrDb,KAAKc,OAAOC,W,MACP,GAAIf,KAAKK,cAAgBG,EAAYQ,MAAO,CACjDhB,KAAKG,2BACLc,EAAAjB,KAAKkB,cAAU,MAAAD,SAAA,SAAAA,EAAEE,c,KACZ,CACLnB,KAAKY,gBACLQ,cAAcpB,KAAKU,oB,CAGrBV,KAAKG,yBAAyB,EAGxBH,KAAAY,cAAgB,KACtBZ,KAAKqB,YAAerB,KAAKc,OAAOQ,iBAAmBtB,KAAKc,OAAOS,cAAiB,IAChFvB,KAAKG,yBAAyB,EAGxBH,KAAAG,wBAA0B,KAChC,MAAMqB,KAAEA,EAAInB,YAAEA,EAAWgB,YAAEA,GAAgBrB,KAE3CA,KAAKyB,0BAA0BC,KAAK,CAAEC,GAAI3B,KAAK4B,QAASJ,OAAMnB,cAAagB,eAAc,EAGnFrB,KAAA6B,cAAgB,KACtB,MAAMC,UAAEA,GAAcC,UACtB,MAAMC,EAAcF,EAAUG,QAAQ,WAAa,EACnD,IAAIC,EAAcJ,EAAUG,QAAQ,WAAa,EAEjD,GAAID,GAAeE,EAAaA,EAAc,MAG9C,MAAMC,GAASC,EAAQN,EAAUK,MAAM,yBAA2BD,EAElElC,KAAKwB,KAAOW,EAAQ,KAAOnC,KAAKwB,KAEhC,OAAOW,CAAK,EAGNnC,KAAAqC,aAAe,KACrBrC,KAAKc,OAAS,IAAIwB,GAAGC,OAAOvC,KAAKwC,gBAAiB,CAChDC,MAAO,MACPC,OAAQ,MACRd,QAAS5B,KAAK4B,QACde,KAAM,0BACNC,WAAY,CACVC,YAAa,EACbC,SAAU,EACVC,IAAK,EACLvB,KAAMxB,KAAK6B,gBAAkB,GAAK7B,KAAKwB,KAEvCwB,SAAU,GAEZC,OAAQ,CACNC,QAASlD,KAAKC,cACdkD,cAAenD,KAAKI,sBAEtB,E,iBA3IgC,K,uCAST,M,iCAUF,K,CAGzBgD,WAAW5B,GACT,GAAIA,EAAM,CACRxB,KAAKc,OAAOU,M,KACP,CACLxB,KAAKc,OAAOuC,Q,EAUhBC,gCAAgCpD,GAC9B,GAAIF,KAAK4B,UAAY1B,EAAEqD,OAAO5B,GAAI,CAChC,OAAQzB,EAAEqD,OAAOC,QACf,IAAK,OACH,GAAItD,EAAEqD,OAAOE,QAAU,EAAG,CACxBzD,KAAKc,OAAOC,W,KACP,CACLf,KAAKc,OAAO4C,Y,CAGd,MACF,IAAK,OACH1D,KAAKwB,MAAQxB,KAAKwB,KAClB,MAEF,IAAK,aAAc,CACjBxB,KAAKc,OAAO6C,YAAYC,oBACxB,K,CAGF,IAAK,qBACH5D,KAAKc,OAAO+C,OAAQ3D,EAAEqD,OAAOE,MAAQ,IAAOzD,KAAKc,OAAOS,cAAe,MACvE,M,EAQRuC,2BACE9D,KAAKqC,c,CA4EP0B,mBACE,MAAMC,EAAMC,SAASC,cAAc,UACnC,MAAMC,EAAUF,SAASG,qBAAqB,UAE9CJ,EAAIK,IAAMxE,EAEV,IAAK,IAAIyE,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,GAAK,EAAG,CAC1C,GAAIH,EAAQG,GAAGD,MAAQxE,EAAW,CAChCG,KAAKqC,eAEL,M,EAIJ8B,EAAQ,GAAGK,WAAWC,aAAaT,EAAKG,EAAQ,IAEhDnE,KAAKwB,KAAOxB,KAAK6B,gBAAkB,KAAO7B,KAAKwB,I,CAGjDkD,uBACE1E,KAAKc,OAAO6D,S,CAGdC,SACE,GAAI5E,KAAK6E,OAAQ,CACf,OACEC,EAAA,OAAKC,KAAK,QAAQC,MAAM,iBACtBF,EAAA,OACEG,IAAMC,IACJlF,KAAKwC,gBAAkB0C,CAAE,EAE3BF,MAAM,gBACNG,UAAW,I,CAMnB,OACEL,EAACM,EAAI,KACHN,EAAA,mBACEE,MAAM,QACNC,IAAMC,IACJlF,KAAKkB,WAAagE,CAAE,GAGtBJ,EAAA,OAAKC,KAAK,QAAQC,MAAM,iBACtBF,EAAA,OACEG,IAAMC,IACJlF,KAAKwC,gBAAkB0C,CAAE,EAE3BF,MAAM,gBACNG,UAAW,KAGfL,EAAA,OAAKC,KAAK,aAAaC,MAAM,iBAC3BF,EAAA,sBAAoBtD,KAAMxB,KAAKwB,KAAMI,QAAS5B,KAAK4B,Y"}