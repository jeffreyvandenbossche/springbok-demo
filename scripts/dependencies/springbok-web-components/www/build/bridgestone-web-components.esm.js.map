{"version":3,"names":["patchBrowser","importMeta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","mode","color","ios","md","flipRtl","name","src","icon","size","lazy","sanitize","svgContent","isVisible","value","type","target","tagClass","disabled","ariaLabelText","theme","overlayMenuIsOpen","overlayMenuData","youtubeModalIsOpen","youtubeModalData","carouselModalIsOpen","carouselModalData","experienceZoneModalIsOpen","experienceZoneModalData","testBadgeModalIsOpen","testBadgeModalData","handleTouch","image","logo","label","headerTitle","subtitle","button","variant","video","isMobile","testBadgeCollection","experienceZoneData","teaserTitle","slides","activeIndex","articlesData","relatedArticlesTitle","headerNavigation","stickyMenuIsVisible","imageCollection","autoplay","slow","carouselTitle","cta","slim","bannerTitle","filled","sectionTitle","socialLinks","currentUrl","authorImage","authorName","authorPosition","aboutTitle","description","head","data","wrapped","displayedItems","flag","countryTitle","brands","focused","invalid","required","invalidMessage","requiredMessage","border","validator","validate","min","max","rows","resizeable","activeOption","text","source","titleText","contentText","bottomPosition","isContentVisible","isTransitioning","variation","pong","date","languageIsoCode","isWhite","isDateValid","isLanguageCodeValid","items","index","progress","action","recaptchaSiteKey","invalidFormMessage","submitErrorMessage","successRedirect","formHasErrors","isFormSending","submitHasFailed","modalId","transitionType","modalCanBeClosed","close","nextSlide","previousSlide","handleFocus","mobileFullWidth","contained","textColor","srcset","width","height","imageSizes","altText","itemprop","caption","captionCover","cover","videoId","playerState","mute","currentTime","videoActive","mainTitle","screens","closeOverlay","focusTrap","inline","active","articleImage","articleTitle","articleCta","articleHref","singular","cardTitle","cardImage","tag","cardText","badgeTitle","badgeText","badgeCta","badgeImages","hideNavigation","storyData","layout","disclaimer","components","identifier","accordionItemTitle","expandable","ghost","iconLeft","iconRight","isFullWidth","isDisabled","isClosing","desktop"],"sources":["./node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"sourcesContent":["/*\n Stencil Client Patch Browser v3.4.2 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n// TODO(STENCIL-661): Remove code related to the dynamic import shim\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = \n    // TODO(STENCIL-661): Remove code related to the dynamic import shim\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? (scriptElm || {})['data-opts'] || {} : {};\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\n// TODO(STENCIL-661): Remove code related to the dynamic import shim\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            var _a;\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                // Apply CSP nonce to the script tag if it exists\n                const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                if (nonce != null) {\n                    script.setAttribute('nonce', nonce);\n                }\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"],"mappings":"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"}