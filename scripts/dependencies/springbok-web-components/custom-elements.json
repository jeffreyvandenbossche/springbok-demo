{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/button/button.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Description of the component.",
          "name": "BsButton",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "Button's text"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Links's href"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "ButtonTarget | undefined"
              },
              "description": "Link's target"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "description": "The value for the bsClickEvent."
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ButtonType | undefined"
              },
              "description": "Button's type"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "string | undefined"
              },
              "description": "Define what kind of action the button will be used for (i.e. \"open-video-modal\")"
            },
            {
              "kind": "field",
              "name": "tagClass",
              "type": {
                "text": "string | undefined"
              },
              "description": "The class of the button or link."
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "ButtonVariant | undefined"
              },
              "description": "Button's style variant"
            },
            {
              "kind": "field",
              "name": "ghost",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Button's style variant"
            },
            {
              "kind": "field",
              "name": "iconLeft",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "Button's icon"
            },
            {
              "kind": "field",
              "name": "iconRight",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "Second button's icon"
            },
            {
              "kind": "field",
              "name": "isFullWidth",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Make the button take the full-width"
            },
            {
              "kind": "field",
              "name": "isDisabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Disable button interactions"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "fieldName": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "href",
              "fieldName": "href",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "target",
              "fieldName": "target",
              "type": {
                "text": "ButtonTarget"
              }
            },
            {
              "name": "value",
              "fieldName": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "type",
              "fieldName": "type",
              "type": {
                "text": "ButtonType"
              }
            },
            {
              "name": "action",
              "fieldName": "action",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "tag-class",
              "fieldName": "tagClass",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "variant",
              "fieldName": "variant",
              "type": {
                "text": "ButtonVariant"
              }
            },
            {
              "name": "ghost",
              "fieldName": "ghost",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "icon-left",
              "fieldName": "iconLeft",
              "type": {
                "text": "IconName"
              }
            },
            {
              "name": "icon-right",
              "fieldName": "iconRight",
              "type": {
                "text": "IconName"
              }
            },
            {
              "name": "is-full-width",
              "fieldName": "isFullWidth",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "is-disabled",
              "fieldName": "isDisabled",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-button",
          "events": [
            {
              "name": "bsButtonClick",
              "type": {
                "text": "EventEmitter<ButtonClickEvent>"
              },
              "description": "Button's custom click event"
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsButton",
          "declaration": {
            "name": "BsButton",
            "module": "src/components/atoms/button/button.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-button",
          "declaration": {
            "name": "BsButton",
            "module": "src/components/atoms/button/button.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/click-action/click-action.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The click action component.",
          "name": "BsClickAction",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "The name for the bsClickAction event."
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any | undefined"
              },
              "description": "The value for the bsClickAction event."
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ClickActionType | undefined"
              },
              "description": "The type of button for the bsClickAction component."
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "The href of bsClickAction component, will convert the button into a link."
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "ClickActionTarget | undefined"
              },
              "description": "The target of the provided href."
            },
            {
              "kind": "field",
              "name": "tagClass",
              "type": {
                "text": "string | undefined"
              },
              "description": "The class of the button or link."
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Disabled state of inner tag."
            },
            {
              "kind": "field",
              "name": "ariaLabelText",
              "type": {
                "text": "string | undefined"
              },
              "description": "Use aria-label attribute when link/button doesn't have any text"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "fieldName": "value",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "type",
              "fieldName": "type",
              "type": {
                "text": "ClickActionType"
              }
            },
            {
              "name": "href",
              "fieldName": "href",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "target",
              "fieldName": "target",
              "type": {
                "text": "ClickActionTarget"
              }
            },
            {
              "name": "tag-class",
              "fieldName": "tagClass",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "disabled",
              "fieldName": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "aria-label-text",
              "fieldName": "ariaLabelText",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-click-action",
          "events": [
            {
              "name": "bsClickAction",
              "type": {
                "text": "EventEmitter<ClickActionEvent>"
              },
              "description": "Emitted when the component is clicked."
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsClickAction",
          "declaration": {
            "name": "BsClickAction",
            "module": "src/components/atoms/click-action/click-action.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-click-action",
          "declaration": {
            "name": "BsClickAction",
            "module": "src/components/atoms/click-action/click-action.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/date/date.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Date component.",
          "name": "BsDate",
          "members": [
            {
              "kind": "field",
              "name": "isDateValid",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "isLanguageCodeValid",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "string"
              },
              "description": "Raw date string in yyyy-mm-dd format"
            },
            {
              "kind": "field",
              "name": "languageIsoCode",
              "type": {
                "text": "string"
              },
              "description": "Language's iso code"
            },
            {
              "kind": "field",
              "name": "isWhite",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Has white text?"
            },
            {
              "kind": "method",
              "name": "checkDateFormat",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "checkLanguageCodeFormat",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "date",
              "fieldName": "date",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "language-iso-code",
              "fieldName": "languageIsoCode",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "is-white",
              "fieldName": "isWhite",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-date",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsDate",
          "declaration": {
            "name": "BsDate",
            "module": "src/components/atoms/date/date.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-date",
          "declaration": {
            "name": "BsDate",
            "module": "src/components/atoms/date/date.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/dot-navigation/dot-navigation.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The dot navigation component used to indicate the current index in a list of views.",
          "name": "BsDotNavigation",
          "members": [
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "NodeJS.Timeout"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "interval",
              "type": {
                "text": "NodeJS.Timeout"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "progress",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "number"
              },
              "description": "The amount of dots in the navigation."
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "description": "The active dot index."
            },
            {
              "kind": "method",
              "name": "handleIndexChange"
            },
            {
              "kind": "field",
              "name": "slow",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Should the auto navigation be slow?"
            },
            {
              "kind": "field",
              "name": "startProgress",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "items",
              "fieldName": "items",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "index",
              "fieldName": "index",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "slow",
              "fieldName": "slow",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-dot-navigation",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsDotNavigation",
          "declaration": {
            "name": "BsDotNavigation",
            "module": "src/components/atoms/dot-navigation/dot-navigation.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-dot-navigation",
          "declaration": {
            "name": "BsDotNavigation",
            "module": "src/components/atoms/dot-navigation/dot-navigation.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/icon/icon.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The icon component.",
          "name": "BsIcon",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "IconName"
              },
              "description": "Icon's name"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "IconName"
              }
            }
          ],
          "tagName": "bs-icon",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsIcon",
          "declaration": {
            "name": "BsIcon",
            "module": "src/components/atoms/icon/icon.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-icon",
          "declaration": {
            "name": "BsIcon",
            "module": "src/components/atoms/icon/icon.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/image/image.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Description of the component.",
          "name": "BsImage",
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string"
              },
              "description": "Image's src"
            },
            {
              "kind": "field",
              "name": "srcset",
              "type": {
                "text": "string | undefined"
              },
              "description": "Image's srcset"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string | number"
              },
              "description": "Image's width"
            },
            {
              "kind": "field",
              "name": "height",
              "type": {
                "text": "string | number"
              },
              "description": "Image's height"
            },
            {
              "kind": "field",
              "name": "imageSizes",
              "type": {
                "text": "string | undefined"
              },
              "default": "`\n    (max-width: ${Breakpoint.xs}px) ${Breakpoint.xs}px,\n    (max-width: ${Breakpoint.md}px) ${Breakpoint.md}px,\n    (max-width: ${Breakpoint.xl}px) ${Breakpoint.xl}px,\n    1920px`",
              "description": "Image's sizes"
            },
            {
              "kind": "field",
              "name": "altText",
              "type": {
                "text": "string | undefined"
              },
              "description": "Image's alternative text"
            },
            {
              "kind": "field",
              "name": "itemprop",
              "type": {
                "text": "string | undefined"
              },
              "default": "'contentUrl'",
              "description": "\"itemprop\" attribute"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string | undefined"
              },
              "description": "Image's caption"
            },
            {
              "kind": "field",
              "name": "captionCover",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Determine if text under or on image"
            },
            {
              "kind": "field",
              "name": "cover",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Determine if image is stretching to fill its container's size"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "string | undefined"
              },
              "description": "Source image"
            },
            {
              "kind": "field",
              "name": "lazy",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "description": "Enable lazy loading?"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "src",
              "fieldName": "src",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "srcset",
              "fieldName": "srcset",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "width",
              "fieldName": "width",
              "type": {
                "text": "string | number"
              }
            },
            {
              "name": "height",
              "fieldName": "height",
              "type": {
                "text": "string | number"
              }
            },
            {
              "name": "image-sizes",
              "fieldName": "imageSizes",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "alt-text",
              "fieldName": "altText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "itemprop",
              "fieldName": "itemprop",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "caption",
              "fieldName": "caption",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "caption-cover",
              "fieldName": "captionCover",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "cover",
              "fieldName": "cover",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "source",
              "fieldName": "source",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "lazy",
              "fieldName": "lazy",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-image",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsImage",
          "declaration": {
            "name": "BsImage",
            "module": "src/components/atoms/image/image.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-image",
          "declaration": {
            "name": "BsImage",
            "module": "src/components/atoms/image/image.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/quote/quote.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The Quote component is used for indicating that a particular section of text is being taken from another website or other source.",
          "name": "BsQuote",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "The quote text copied from an external source."
            },
            {
              "kind": "field",
              "name": "authorName",
              "type": {
                "text": "string"
              },
              "description": "Author's name"
            },
            {
              "kind": "field",
              "name": "authorPosition",
              "type": {
                "text": "string"
              },
              "description": "Author's job position"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "string | undefined"
              },
              "description": "A URL that designates a source document or message for the information quoted. Used for SEO purposes."
            },
            {
              "kind": "field",
              "name": "authorImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "Prop for adding an image"
            },
            {
              "kind": "field",
              "name": "parsedAuthorImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "fieldName": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-name",
              "fieldName": "authorName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-position",
              "fieldName": "authorPosition",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "source",
              "fieldName": "source",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-image",
              "fieldName": "authorImage",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-quote",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsQuote",
          "declaration": {
            "name": "BsQuote",
            "module": "src/components/atoms/quote/quote.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-quote",
          "declaration": {
            "name": "BsQuote",
            "module": "src/components/atoms/quote/quote.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/story-quote/story-quote.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The Quote component is used for indicating that a particular section of text is being taken from another website or other source.",
          "name": "BsStoryQuote",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "The quote text copied from an external source."
            },
            {
              "kind": "field",
              "name": "authorName",
              "type": {
                "text": "string"
              },
              "description": "Author's name"
            },
            {
              "kind": "field",
              "name": "authorPosition",
              "type": {
                "text": "string"
              },
              "description": "Author's job position"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "string | undefined"
              },
              "description": "A URL that designates a source document or message for the information quoted. Used for SEO purposes."
            },
            {
              "kind": "field",
              "name": "authorImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "Prop for adding an image"
            },
            {
              "kind": "field",
              "name": "parsedAuthorImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "fieldName": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-name",
              "fieldName": "authorName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-position",
              "fieldName": "authorPosition",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "source",
              "fieldName": "source",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-image",
              "fieldName": "authorImage",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-story-quote",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsStoryQuote",
          "declaration": {
            "name": "BsStoryQuote",
            "module": "src/components/atoms/story-quote/story-quote.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-story-quote",
          "declaration": {
            "name": "BsStoryQuote",
            "module": "src/components/atoms/story-quote/story-quote.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/text/text.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The text component.",
          "name": "Paragraph",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "To customize the text"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "TextSize | undefined"
              },
              "description": "To set the title size"
            },
            {
              "kind": "field",
              "name": "textColor",
              "type": {
                "text": "TextColor | undefined"
              },
              "description": "To set the color"
            },
            {
              "kind": "method",
              "name": "handleUrlHash",
              "privacy": "private",
              "parameters": [
                {
                  "name": "hash",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "fieldName": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "size",
              "fieldName": "size",
              "type": {
                "text": "TextSize"
              }
            },
            {
              "name": "text-color",
              "fieldName": "textColor",
              "type": {
                "text": "TextColor"
              }
            }
          ],
          "tagName": "bs-text",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Paragraph",
          "declaration": {
            "name": "Paragraph",
            "module": "src/components/atoms/text/text.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-text",
          "declaration": {
            "name": "Paragraph",
            "module": "src/components/atoms/text/text.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/atoms/title/title.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The title component.",
          "name": "BsTitle",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "To customize the text"
            },
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "TitleTag"
              },
              "description": "To set the title tag"
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "TitleColor"
              },
              "description": "To set the color"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "TitleVariant"
              },
              "description": "To set the title variant"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "TitleSize | undefined"
              },
              "description": "To set the title size"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "fieldName": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "tag",
              "fieldName": "tag",
              "type": {
                "text": "TitleTag"
              }
            },
            {
              "name": "color",
              "fieldName": "color",
              "type": {
                "text": "TitleColor"
              }
            },
            {
              "name": "variant",
              "fieldName": "variant",
              "type": {
                "text": "TitleVariant"
              }
            },
            {
              "name": "size",
              "fieldName": "size",
              "type": {
                "text": "TitleSize"
              }
            }
          ],
          "tagName": "bs-title",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsTitle",
          "declaration": {
            "name": "BsTitle",
            "module": "src/components/atoms/title/title.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-title",
          "declaration": {
            "name": "BsTitle",
            "module": "src/components/atoms/title/title.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/layouts/default-layout/default-layout.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Default layout component.",
          "name": "BsDefaultLayout",
          "members": [
            {
              "kind": "field",
              "name": "touchStartX",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "touchEndX",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "touchThreshold",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "150"
            },
            {
              "kind": "field",
              "name": "overlayMenuIsOpen",
              "type": {
                "text": "boolean"
              },
              "description": "States"
            },
            {
              "kind": "field",
              "name": "overlayMenuData",
              "type": {
                "text": "HeaderNavigation"
              }
            },
            {
              "kind": "field",
              "name": "youtubeModalIsOpen",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "youtubeModalData",
              "type": {
                "text": "{ videoId: string; mute: boolean }"
              }
            },
            {
              "kind": "field",
              "name": "carouselModalIsOpen",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "carouselModalData",
              "type": {
                "text": "BsImageCarousel"
              }
            },
            {
              "kind": "field",
              "name": "experienceZoneModalIsOpen",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "experienceZoneModalData",
              "type": {
                "text": "BsExperienceZoneModal"
              }
            },
            {
              "kind": "field",
              "name": "testBadgeModalIsOpen",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "testBadgeModalData",
              "type": {
                "text": "BsTestBadgeModal"
              }
            },
            {
              "kind": "field",
              "name": "theme",
              "type": {
                "text": "ColorTheme"
              },
              "description": "Color theme"
            },
            {
              "kind": "method",
              "name": "bsClickActionHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "bsModalIsClosedHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouch",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "theme",
              "fieldName": "theme",
              "type": {
                "text": "ColorTheme"
              }
            }
          ],
          "tagName": "bs-default-layout",
          "events": [
            {
              "name": "bsSwipeAction",
              "type": {
                "text": "EventEmitter<{ direction: TouchDirections }>"
              },
              "description": "Emitted when a swipe action is detected."
            },
            {
              "name": "bsYoutubeAPIReady",
              "type": {
                "text": "EventEmitter"
              },
              "description": "Emitted when the youtube API script triggers the window.onYouTubeIframeAPIReady method."
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsDefaultLayout",
          "declaration": {
            "name": "BsDefaultLayout",
            "module": "src/components/layouts/default-layout/default-layout.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-default-layout",
          "declaration": {
            "name": "BsDefaultLayout",
            "module": "src/components/layouts/default-layout/default-layout.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/accordion-item/accordion-item.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BsAccordionItem",
          "members": [
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "description": "Accordion's unique identifier used for accessibility."
            },
            {
              "kind": "method",
              "name": "validateIdentifier",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "accordionItemTitle",
              "type": {
                "text": "string"
              },
              "description": "Accordion's title."
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Accordion's active state"
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "description": "Is the accordion expandable?"
            },
            {
              "kind": "method",
              "name": "bsAccordionStateActionHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "fieldName": "identifier",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "accordion-item-title",
              "fieldName": "accordionItemTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "active",
              "fieldName": "active",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "expandable",
              "fieldName": "expandable",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-accordion-item",
          "events": [
            {
              "name": "bsAccordionStateAction",
              "type": {
                "text": "EventEmitter<Boolean>"
              },
              "description": "Accordion's event emitter"
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsAccordionItem",
          "declaration": {
            "name": "BsAccordionItem",
            "module": "src/components/molecules/accordion-item/accordion-item.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-accordion-item",
          "declaration": {
            "name": "BsAccordionItem",
            "module": "src/components/molecules/accordion-item/accordion-item.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/article-card/article-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Article teaser card component.",
          "name": "BsArticleCard",
          "members": [
            {
              "kind": "field",
              "name": "articleImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The article related image."
            },
            {
              "kind": "field",
              "name": "parsedArticleImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "articleTitle",
              "type": {
                "text": "string"
              },
              "description": "The article title."
            },
            {
              "kind": "field",
              "name": "articleCta",
              "type": {
                "text": "string"
              },
              "description": "The cta label."
            },
            {
              "kind": "field",
              "name": "articleHref",
              "type": {
                "text": "string"
              },
              "description": "The article href."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "article-image",
              "fieldName": "articleImage",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "article-title",
              "fieldName": "articleTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "article-cta",
              "fieldName": "articleCta",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "article-href",
              "fieldName": "articleHref",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-article-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsArticleCard",
          "declaration": {
            "name": "BsArticleCard",
            "module": "src/components/molecules/article-card/article-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-article-card",
          "declaration": {
            "name": "BsArticleCard",
            "module": "src/components/molecules/article-card/article-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/author/author.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Author component.",
          "name": "BsAuthor",
          "members": [
            {
              "kind": "field",
              "name": "authorImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "Description."
            },
            {
              "kind": "field",
              "name": "parsedAuthorImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "authorName",
              "type": {
                "text": "string"
              },
              "description": "Author's name"
            },
            {
              "kind": "field",
              "name": "authorPosition",
              "type": {
                "text": "string"
              },
              "description": "Author's job position"
            },
            {
              "kind": "field",
              "name": "aboutTitle",
              "type": {
                "text": "string"
              },
              "description": "Main about title"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "description": "Description text"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "author-image",
              "fieldName": "authorImage",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "author-name",
              "fieldName": "authorName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "author-position",
              "fieldName": "authorPosition",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "about-title",
              "fieldName": "aboutTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "description",
              "fieldName": "description",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-author",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsAuthor",
          "declaration": {
            "name": "BsAuthor",
            "module": "src/components/molecules/author/author.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-author",
          "declaration": {
            "name": "BsAuthor",
            "module": "src/components/molecules/author/author.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/breadcrumb/breadcrumb.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The breadcrumb component.",
          "name": "BsBreadcrumb",
          "members": [
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'unwrap'"
            },
            {
              "kind": "field",
              "name": "wrapper",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'wrapper'"
            },
            {
              "kind": "field",
              "name": "wrapped",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "States"
            },
            {
              "kind": "field",
              "name": "displayedItems",
              "type": {
                "text": "Array<BreadcrumbData | string>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "BreadcrumbData[] | string"
              },
              "description": "Breadcrumb items data."
            },
            {
              "kind": "field",
              "name": "parsedData",
              "type": {
                "text": "BreadcrumbData[]"
              }
            },
            {
              "kind": "field",
              "name": "onBsButtonClick",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "data",
              "fieldName": "data",
              "type": {
                "text": "BreadcrumbData[] | string"
              }
            }
          ],
          "tagName": "bs-breadcrumb",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsBreadcrumb",
          "declaration": {
            "name": "BsBreadcrumb",
            "module": "src/components/molecules/breadcrumb/breadcrumb.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-breadcrumb",
          "declaration": {
            "name": "BsBreadcrumb",
            "module": "src/components/molecules/breadcrumb/breadcrumb.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/callout-box/callout-box.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Callout box component.",
          "name": "BsCalloutBox",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "\nCallout box content text"
            },
            {
              "kind": "field",
              "name": "variation",
              "type": {
                "text": "string"
              },
              "description": "\nCallout box variation"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "fieldName": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "variation",
              "fieldName": "variation",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-callout-box",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsCalloutBox",
          "declaration": {
            "name": "BsCalloutBox",
            "module": "src/components/molecules/callout-box/callout-box.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-callout-box",
          "declaration": {
            "name": "BsCalloutBox",
            "module": "src/components/molecules/callout-box/callout-box.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/carousel-card/carousel-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Carousel card component.",
          "name": "BsCarouselCard",
          "members": [
            {
              "kind": "field",
              "name": "imageCollection",
              "type": {
                "text": "BsImage[] | string"
              },
              "description": "The list of images to be shown in the carousel."
            },
            {
              "kind": "field",
              "name": "parsedImageCollection",
              "type": {
                "text": "BsImage[]"
              }
            },
            {
              "kind": "field",
              "name": "autoplay",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should autoplay be enabled?"
            },
            {
              "kind": "field",
              "name": "slow",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the autoplay be slow?"
            },
            {
              "kind": "field",
              "name": "carouselTitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "The title of the carousel displayed in the footer."
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "BsImage | string | undefined"
              },
              "description": "The logo to be displayed in the footer."
            },
            {
              "kind": "field",
              "name": "cta",
              "type": {
                "text": "string"
              },
              "description": "The cta label."
            },
            {
              "kind": "field",
              "name": "slim",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the carousel be displayed in slim variation."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "image-collection",
              "fieldName": "imageCollection",
              "type": {
                "text": "BsImage[] | string"
              }
            },
            {
              "name": "autoplay",
              "fieldName": "autoplay",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "slow",
              "fieldName": "slow",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "carousel-title",
              "fieldName": "carouselTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "logo",
              "fieldName": "logo",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "cta",
              "fieldName": "cta",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "slim",
              "fieldName": "slim",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-carousel-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsCarouselCard",
          "declaration": {
            "name": "BsCarouselCard",
            "module": "src/components/molecules/carousel-card/carousel-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-carousel-card",
          "declaration": {
            "name": "BsCarouselCard",
            "module": "src/components/molecules/carousel-card/carousel-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/container/container.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The container component.",
          "name": "BsContainer",
          "members": [
            {
              "kind": "field",
              "name": "mobileFullWidth",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the content be centered with a max width on mobile?"
            },
            {
              "kind": "field",
              "name": "contained",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the content be centered with a max width on desktop?"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "mobile-full-width",
              "fieldName": "mobileFullWidth",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "contained",
              "fieldName": "contained",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-container",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsContainer",
          "declaration": {
            "name": "BsContainer",
            "module": "src/components/molecules/container/container.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-container",
          "declaration": {
            "name": "BsContainer",
            "module": "src/components/molecules/container/container.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/country-link/country-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Country link card component.",
          "name": "BsCountryCard",
          "members": [
            {
              "kind": "field",
              "name": "flag",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The flag image."
            },
            {
              "kind": "field",
              "name": "parsedFlag",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "countryTitle",
              "type": {
                "text": "BsTitle | string"
              },
              "description": "The country name."
            },
            {
              "kind": "field",
              "name": "parsedTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "field",
              "name": "brands",
              "type": {
                "text": "{ label: string; href: string }[] | string"
              },
              "description": "The list of links to be rendered."
            },
            {
              "kind": "field",
              "name": "parsedBrands",
              "type": {
                "text": "{ label: string; href: string }[]"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "flag",
              "fieldName": "flag",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "country-title",
              "fieldName": "countryTitle",
              "type": {
                "text": "BsTitle | string"
              }
            },
            {
              "name": "brands",
              "fieldName": "brands",
              "type": {
                "text": "{ label: string; href: string }[] | string"
              }
            }
          ],
          "tagName": "bs-country-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsCountryCard",
          "declaration": {
            "name": "BsCountryCard",
            "module": "src/components/molecules/country-link/country-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-country-card",
          "declaration": {
            "name": "BsCountryCard",
            "module": "src/components/molecules/country-link/country-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/cta-banner/cta-banner.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "CTA Banner component.",
          "name": "BsCTABanner",
          "members": [
            {
              "kind": "field",
              "name": "bannerTitle",
              "type": {
                "text": "BsTitle | string"
              },
              "description": "The (json)object containing the bs-title element properties"
            },
            {
              "kind": "field",
              "name": "parsedBannerTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "The banner subtitle"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "BsButton | string"
              },
              "description": "The (json)object containing the bs-button element properties."
            },
            {
              "kind": "field",
              "name": "parsedButton",
              "type": {
                "text": "BsButton"
              }
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "ButtonVariant | undefined"
              },
              "description": "The banner variant."
            },
            {
              "kind": "field",
              "name": "filled",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the background be filled up?"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "banner-title",
              "fieldName": "bannerTitle",
              "type": {
                "text": "BsTitle | string"
              }
            },
            {
              "name": "subtitle",
              "fieldName": "subtitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "button",
              "fieldName": "button",
              "type": {
                "text": "BsButton | string"
              }
            },
            {
              "name": "variant",
              "fieldName": "variant",
              "type": {
                "text": "ButtonVariant"
              }
            },
            {
              "name": "filled",
              "fieldName": "filled",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-cta-banner",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsCTABanner",
          "declaration": {
            "name": "BsCTABanner",
            "module": "src/components/molecules/cta-banner/cta-banner.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-cta-banner",
          "declaration": {
            "name": "BsCTABanner",
            "module": "src/components/molecules/cta-banner/cta-banner.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/experience-zone/experience-zone.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Experience Zone teaser component.",
          "name": "BsExperienceZoneTeaser",
          "members": [
            {
              "kind": "field",
              "name": "teaserSliderRef",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "slides",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "States"
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "experienceZoneData",
              "type": {
                "text": "ExperienceZone | string"
              },
              "description": "The Experience Zone contract."
            },
            {
              "kind": "field",
              "name": "parsedExperienceZoneData",
              "type": {
                "text": "ExperienceZone"
              }
            },
            {
              "kind": "field",
              "name": "teaserTitle",
              "type": {
                "text": "BsTitle | string"
              },
              "description": "The Experience Zone Teaser title."
            },
            {
              "kind": "field",
              "name": "parsedTeaserTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "method",
              "name": "handleScreenResized",
              "description": "listeners"
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "throttleMethod",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onPreviousSlide",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onNextSlide",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scrollSlider",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "experience-zone-data",
              "fieldName": "experienceZoneData",
              "type": {
                "text": "ExperienceZone | string"
              }
            },
            {
              "name": "teaser-title",
              "fieldName": "teaserTitle",
              "type": {
                "text": "BsTitle | string"
              }
            }
          ],
          "tagName": "bs-experience-zone",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsExperienceZoneTeaser",
          "declaration": {
            "name": "BsExperienceZoneTeaser",
            "module": "src/components/molecules/experience-zone/experience-zone.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-experience-zone",
          "declaration": {
            "name": "BsExperienceZoneTeaser",
            "module": "src/components/molecules/experience-zone/experience-zone.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/experience-zone-card/experience-zone-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Experience Zone card component.",
          "name": "BsExperienceZoneCard",
          "members": [
            {
              "kind": "field",
              "name": "singular",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the layout for singular items be applied?"
            },
            {
              "kind": "field",
              "name": "cardTitle",
              "type": {
                "text": "string"
              },
              "description": "The Experience Zone card title."
            },
            {
              "kind": "field",
              "name": "cardImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The Experience Zone card image."
            },
            {
              "kind": "field",
              "name": "parsedCardImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "video",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the image have a play icon?"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "singular",
              "fieldName": "singular",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "card-title",
              "fieldName": "cardTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "card-image",
              "fieldName": "cardImage",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "video",
              "fieldName": "video",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-experience-zone-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsExperienceZoneCard",
          "declaration": {
            "name": "BsExperienceZoneCard",
            "module": "src/components/molecules/experience-zone-card/experience-zone-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-experience-zone-card",
          "declaration": {
            "name": "BsExperienceZoneCard",
            "module": "src/components/molecules/experience-zone-card/experience-zone-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/experience-zone-modal/experience-zone-modal.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Experience Zone modal component.",
          "name": "BsExperienceZoneModal",
          "members": [
            {
              "kind": "field",
              "name": "experienceZoneModalRef",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "State"
            },
            {
              "kind": "field",
              "name": "experienceZoneData",
              "type": {
                "text": "ExperienceZone | string"
              },
              "description": "The Experience Zone story data."
            },
            {
              "kind": "field",
              "name": "parsedExperienceZoneData",
              "type": {
                "text": "ExperienceZone"
              }
            },
            {
              "kind": "method",
              "name": "bsNextSlideActionHandler",
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "bsPreviousSlideActionHandler"
            },
            {
              "kind": "field",
              "name": "updateIndex",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "active-index",
              "fieldName": "activeIndex"
            },
            {
              "name": "experience-zone-data",
              "fieldName": "experienceZoneData",
              "type": {
                "text": "ExperienceZone | string"
              }
            }
          ],
          "tagName": "bs-experience-zone-modal",
          "events": [
            {
              "name": "bsPauseYoutubeAction",
              "type": {
                "text": "EventEmitter<YoutubeControlClickEvent>"
              },
              "description": "Events"
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsExperienceZoneModal",
          "declaration": {
            "name": "BsExperienceZoneModal",
            "module": "src/components/molecules/experience-zone-modal/experience-zone-modal.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-experience-zone-modal",
          "declaration": {
            "name": "BsExperienceZoneModal",
            "module": "src/components/molecules/experience-zone-modal/experience-zone-modal.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/experience-zone-screen/experience-zone-screen.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Experience Zone screen component.",
          "name": "BsExperienceZoneScreen",
          "members": [
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Is this screen currently active?"
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "ExperienceZoneLayout"
              },
              "description": "The Experience Zone screen layout name."
            },
            {
              "kind": "field",
              "name": "disclaimer",
              "type": {
                "text": "string | undefined"
              },
              "description": "The Experience Zone screen disclaimer."
            },
            {
              "kind": "field",
              "name": "components",
              "type": {
                "text": "ExperienceZoneComponent[] | string | undefined"
              },
              "description": "The Experience Zone card image."
            },
            {
              "kind": "field",
              "name": "parsedComponents",
              "type": {
                "text": "ExperienceZoneComponent[]"
              }
            },
            {
              "kind": "method",
              "name": "handleActiveChange",
              "parameters": [
                {
                  "name": "isActive",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Watchers"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "fieldName": "active",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "layout",
              "fieldName": "layout",
              "type": {
                "text": "ExperienceZoneLayout"
              }
            },
            {
              "name": "disclaimer",
              "fieldName": "disclaimer",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "components",
              "fieldName": "components",
              "type": {
                "text": "ExperienceZoneComponent[] | string"
              }
            }
          ],
          "tagName": "bs-experience-zone-screen",
          "events": [
            {
              "name": "bsYoutubeControllerClick",
              "type": {
                "text": "EventEmitter<YoutubeControlClickEvent>"
              },
              "description": "Emits youtube control event action: 'play'"
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsExperienceZoneScreen",
          "declaration": {
            "name": "BsExperienceZoneScreen",
            "module": "src/components/molecules/experience-zone-screen/experience-zone-screen.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-experience-zone-screen",
          "declaration": {
            "name": "BsExperienceZoneScreen",
            "module": "src/components/molecules/experience-zone-screen/experience-zone-screen.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/experience-zone-story/experience-zone-story.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Experience Zone story component.",
          "name": "BsExperienceZoneScreen",
          "members": [
            {
              "kind": "field",
              "name": "experienceZoneScreenRef",
              "type": {
                "text": "HTMLBsExperienceZoneScreenElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "overlayRef",
              "type": {
                "text": "HTMLBsDarkOverlayElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Is this story currently active?"
            },
            {
              "kind": "field",
              "name": "hideNavigation",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should navigation arrows be hidden?"
            },
            {
              "kind": "field",
              "name": "storyData",
              "type": {
                "text": "ExperienceZoneStory | string"
              },
              "description": "The Experience Zone story data."
            },
            {
              "kind": "field",
              "name": "parsedStoryData",
              "type": {
                "text": "ExperienceZoneStory"
              }
            },
            {
              "kind": "method",
              "name": "handleActiveChange",
              "parameters": [
                {
                  "name": "isActive",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Watchers"
            },
            {
              "kind": "method",
              "name": "handleBsSwipeAction",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Listeners"
            },
            {
              "kind": "field",
              "name": "handleNextMedia",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "updateIndex",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "fieldName": "active",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "hide-navigation",
              "fieldName": "hideNavigation",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "story-data",
              "fieldName": "storyData",
              "type": {
                "text": "ExperienceZoneStory | string"
              }
            }
          ],
          "tagName": "bs-experience-zone-story",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsExperienceZoneScreen",
          "declaration": {
            "name": "BsExperienceZoneScreen",
            "module": "src/components/molecules/experience-zone-story/experience-zone-story.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-experience-zone-story",
          "declaration": {
            "name": "BsExperienceZoneScreen",
            "module": "src/components/molecules/experience-zone-story/experience-zone-story.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/follow-us-banner/follow-us-banner.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Follow us banner component.",
          "name": "BsFollowUsBanner",
          "members": [
            {
              "kind": "field",
              "name": "sectionTitle",
              "type": {
                "text": "string"
              },
              "description": "Section's title"
            },
            {
              "kind": "field",
              "name": "socialLinks",
              "type": {
                "text": "SocialLinks[] | string"
              },
              "description": "The social media links."
            },
            {
              "kind": "field",
              "name": "parsedSocialLinks",
              "type": {
                "text": "SocialLinks[]"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "section-title",
              "fieldName": "sectionTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "social-links",
              "fieldName": "socialLinks",
              "type": {
                "text": "SocialLinks[] | string"
              }
            }
          ],
          "tagName": "bs-follow-us-banner",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFollowUsBanner",
          "declaration": {
            "name": "BsFollowUsBanner",
            "module": "src/components/molecules/follow-us-banner/follow-us-banner.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-follow-us-banner",
          "declaration": {
            "name": "BsFollowUsBanner",
            "module": "src/components/molecules/follow-us-banner/follow-us-banner.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/form-checkbox/form-checkbox.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The form checkbox component.",
          "name": "BsFormCheckbox",
          "members": [
            {
              "kind": "field",
              "name": "formFieldRef",
              "type": {
                "text": "HTMLBsFormFieldElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "State"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The unique name to identify the form element"
            },
            {
              "kind": "field",
              "name": "requiredMessage",
              "type": {
                "text": "string"
              },
              "description": "The error message to be displayed when the required field remains empty"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "description": "Wether or not the checkbox is required"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "default": "''",
              "description": "The label displayed after the checkbox"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "CheckboxItem[] | string"
              },
              "description": "Description."
            },
            {
              "kind": "field",
              "name": "parsedOptions",
              "type": {
                "text": "CheckboxItem[]"
              }
            },
            {
              "kind": "field",
              "name": "handleOnChange",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required-message",
              "fieldName": "requiredMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required",
              "fieldName": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "fieldName": "options",
              "type": {
                "text": "CheckboxItem[] | string"
              }
            }
          ],
          "tagName": "bs-form-checkbox",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFormCheckbox",
          "declaration": {
            "name": "BsFormCheckbox",
            "module": "src/components/molecules/form-checkbox/form-checkbox.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-form-checkbox",
          "declaration": {
            "name": "BsFormCheckbox",
            "module": "src/components/molecules/form-checkbox/form-checkbox.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/form-field/form-field.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The form field component.",
          "name": "BsFormField",
          "members": [
            {
              "kind": "field",
              "name": "validatorFunc",
              "type": {
                "text": "Validator<string>"
              },
              "privacy": "private",
              "default": "defaultValidator"
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The value of the form field"
            },
            {
              "kind": "method",
              "name": "valueDidChange"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the form field"
            },
            {
              "kind": "field",
              "name": "filled",
              "type": {
                "text": "boolean"
              },
              "description": "Wether or not the form field is filled"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "description": "Wether or not the form field is focussed"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "description": "Wether or not the form field is invalid"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "description": "Wether or not the form field is required"
            },
            {
              "kind": "field",
              "name": "invalidMessage",
              "type": {
                "text": "string"
              },
              "description": "The error message to be displayed on the form field in case of invalidity"
            },
            {
              "kind": "field",
              "name": "requiredMessage",
              "type": {
                "text": "string"
              },
              "description": "The error message to be displayed on the form field when the required field is not populated"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "The icon to be displayed on the right hand side of the form field"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The label describing the form field"
            },
            {
              "kind": "field",
              "name": "border",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "description": "A border styling for text input and select fields"
            },
            {
              "kind": "field",
              "name": "validator",
              "type": {
                "text": "string | ValidatorEntry | undefined"
              },
              "description": "The validator function name used to validate the form field"
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "value",
                  "default": "this.value",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "A method to run the validation on the form input value"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "fieldName": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "filled",
              "fieldName": "filled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "focused",
              "fieldName": "focused",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "invalid",
              "fieldName": "invalid",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "required",
              "fieldName": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "invalid-message",
              "fieldName": "invalidMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required-message",
              "fieldName": "requiredMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "IconName"
              }
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "border",
              "fieldName": "border",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "validator",
              "fieldName": "validator",
              "type": {
                "text": "string | ValidatorEntry"
              }
            }
          ],
          "tagName": "bs-form-field",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFormField",
          "declaration": {
            "name": "BsFormField",
            "module": "src/components/molecules/form-field/form-field.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-form-field",
          "declaration": {
            "name": "BsFormField",
            "module": "src/components/molecules/form-field/form-field.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/form-input/form-input.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The form input component.",
          "name": "BsFormInput",
          "members": [
            {
              "kind": "field",
              "name": "formFieldRef",
              "type": {
                "text": "HTMLBsFormFieldElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "filled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wether or not the input field is filled"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wether or not the input field is focused"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wether or not the input field is invalid"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The unique name to identify the form element"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "InputType"
              },
              "description": "The unique name to identify the form element"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The label describing the form field"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "default": "''",
              "description": "The value of the form field"
            },
            {
              "kind": "method",
              "name": "validateValue",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Wether or not the input field is required"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "string | undefined"
              },
              "description": "Wether or not the input field is required"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "string | undefined"
              },
              "description": "Wether or not the input field is required"
            },
            {
              "kind": "field",
              "name": "requiredMessage",
              "type": {
                "text": "string"
              },
              "description": "The error message to be displayed when the required field remains empty"
            },
            {
              "kind": "field",
              "name": "invalidMessage",
              "type": {
                "text": "string | undefined"
              },
              "description": "The error message to be displayed when the field has an invalid input"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "The icon to be displayed on the right hand side of the form field"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number | undefined"
              },
              "description": "The default amount of rows the textarea has"
            },
            {
              "kind": "field",
              "name": "resizeable",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Wether or not the textarea is resizeable by the user"
            },
            {
              "kind": "field",
              "name": "inputEl",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focusout",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "getValidator",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "charInputTypes",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "[\n    InputType.Text,\n    InputType.Email,\n    InputType.Password,\n    InputType.Tel,\n    InputType.Textarea,\n  ]"
            },
            {
              "kind": "field",
              "name": "placeholderInputTypes",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "[InputType.Date, InputType.DateTime, InputType.Time]"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "type",
              "fieldName": "type",
              "type": {
                "text": "InputType"
              }
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "fieldName": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required",
              "fieldName": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "min",
              "fieldName": "min",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "max",
              "fieldName": "max",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required-message",
              "fieldName": "requiredMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "invalid-message",
              "fieldName": "invalidMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "IconName"
              }
            },
            {
              "name": "rows",
              "fieldName": "rows",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "resizeable",
              "fieldName": "resizeable",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-form-input",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFormInput",
          "declaration": {
            "name": "BsFormInput",
            "module": "src/components/molecules/form-input/form-input.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-form-input",
          "declaration": {
            "name": "BsFormInput",
            "module": "src/components/molecules/form-input/form-input.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/form-radio-button/form-radio-button.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The form radio component.",
          "name": "BsFormRadioButton",
          "members": [
            {
              "kind": "field",
              "name": "formFieldRef",
              "type": {
                "text": "HTMLBsFormFieldElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "State"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The unique name to identify the form element"
            },
            {
              "kind": "field",
              "name": "requiredMessage",
              "type": {
                "text": "string"
              },
              "description": "The error message to be displayed when the required field remains empty"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "description": "Wether or not the checkbox is required"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "default": "''",
              "description": "The label displayed after the checkbox"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "RadioButtonItem[] | string"
              },
              "description": "A list of values for each radio button"
            },
            {
              "kind": "field",
              "name": "parsedOptions",
              "type": {
                "text": "RadioButtonItem[]"
              }
            },
            {
              "kind": "field",
              "name": "handleOnChange",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required-message",
              "fieldName": "requiredMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "required",
              "fieldName": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "fieldName": "options",
              "type": {
                "text": "RadioButtonItem[] | string"
              }
            }
          ],
          "tagName": "bs-form-radio-button",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFormRadioButton",
          "declaration": {
            "name": "BsFormRadioButton",
            "module": "src/components/molecules/form-radio-button/form-radio-button.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-form-radio-button",
          "declaration": {
            "name": "BsFormRadioButton",
            "module": "src/components/molecules/form-radio-button/form-radio-button.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/form-select/form-select.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The form select component.",
          "name": "BsFormSelect",
          "members": [
            {
              "kind": "field",
              "name": "hostElement",
              "type": {
                "text": "HTMLBsFormSelectElement"
              }
            },
            {
              "kind": "field",
              "name": "formFieldRef",
              "type": {
                "text": "HTMLBsFormFieldElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectElRef",
              "type": {
                "text": "HTMLSelectElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selectWrap",
              "type": {
                "text": "HTMLButtonElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "customOptions",
              "type": {
                "text": "HTMLLIElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "SelectOption | undefined"
              },
              "description": "The value of the form field"
            },
            {
              "kind": "field",
              "name": "filled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wether or not the input field is filled"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wether or not the input field is focused"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wether or not the input field is invalid"
            },
            {
              "kind": "field",
              "name": "activeOption",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "description": "Wether or not the input field is invalid"
            },
            {
              "kind": "method",
              "name": "validateValue",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The unique name to identify the form element"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The label describing the form field"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "SelectOption[] | string"
              },
              "description": "The list of options that will populate the select field."
            },
            {
              "kind": "field",
              "name": "parsedOptions",
              "type": {
                "text": "SelectOption[]"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Wether or not the input field is required"
            },
            {
              "kind": "field",
              "name": "requiredMessage",
              "type": {
                "text": "string"
              },
              "description": "The error message to be displayed when the required field remains empty"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "The icon to be displayed on the right hand side of the form field"
            },
            {
              "kind": "field",
              "name": "focus",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focusOut",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOptionfocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "direction",
                  "type": {
                    "text": "KeyboardCodes.ArrowUp | KeyboardCodes.ArrowDown"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleKeyDown",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelectedProp",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "fieldName": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "fieldName": "options",
              "type": {
                "text": "SelectOption[] | string"
              }
            },
            {
              "name": "required",
              "fieldName": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "required-message",
              "fieldName": "requiredMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "IconName"
              }
            }
          ],
          "tagName": "bs-form-select",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFormSelect",
          "declaration": {
            "name": "BsFormSelect",
            "module": "src/components/molecules/form-select/form-select.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-form-select",
          "declaration": {
            "name": "BsFormSelect",
            "module": "src/components/molecules/form-select/form-select.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/logo-bar/logo-bar.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Share banner component.",
          "name": "BsLogoBar",
          "members": [
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "BsImage | string | undefined"
              },
              "description": "The logo to be displayed ."
            },
            {
              "kind": "field",
              "name": "parsedLogo",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "logo",
              "fieldName": "logo",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-logo-bar",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsLogoBar",
          "declaration": {
            "name": "BsLogoBar",
            "module": "src/components/molecules/logo-bar/logo-bar.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-logo-bar",
          "declaration": {
            "name": "BsLogoBar",
            "module": "src/components/molecules/logo-bar/logo-bar.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/newsletter-banner/newsletter-banner.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Newsletter banner component.",
          "name": "BsNewsletterBanner",
          "members": [
            {
              "kind": "field",
              "name": "sectionTitle",
              "type": {
                "text": "string"
              },
              "description": "Section's title"
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string"
              },
              "description": "Subtitle"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "BsButton | string"
              },
              "description": "Description."
            },
            {
              "kind": "field",
              "name": "parsedButton",
              "type": {
                "text": "BsButton"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "section-title",
              "fieldName": "sectionTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "subtitle",
              "fieldName": "subtitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "button",
              "fieldName": "button",
              "type": {
                "text": "BsButton | string"
              }
            }
          ],
          "tagName": "bs-newsletter-banner",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsNewsletterBanner",
          "declaration": {
            "name": "BsNewsletterBanner",
            "module": "src/components/molecules/newsletter-banner/newsletter-banner.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-newsletter-banner",
          "declaration": {
            "name": "BsNewsletterBanner",
            "module": "src/components/molecules/newsletter-banner/newsletter-banner.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/product-card/product-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Product card component.",
          "name": "BsProductCard",
          "members": [
            {
              "kind": "field",
              "name": "cardTitle",
              "type": {
                "text": "string"
              },
              "description": "The product card title."
            },
            {
              "kind": "field",
              "name": "cardText",
              "type": {
                "text": "string"
              },
              "description": "The cta label."
            },
            {
              "kind": "field",
              "name": "cardImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The product card image."
            },
            {
              "kind": "field",
              "name": "parsedCardImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "card-title",
              "fieldName": "cardTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "card-text",
              "fieldName": "cardText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "card-image",
              "fieldName": "cardImage",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-product-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsProductCard",
          "declaration": {
            "name": "BsProductCard",
            "module": "src/components/molecules/product-card/product-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-product-card",
          "declaration": {
            "name": "BsProductCard",
            "module": "src/components/molecules/product-card/product-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/share-banner/share-banner.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Share banner component.",
          "name": "BsShareBanner",
          "members": [
            {
              "kind": "field",
              "name": "currentUrl",
              "type": {
                "text": "string"
              },
              "description": "State"
            },
            {
              "kind": "field",
              "name": "sectionTitle",
              "type": {
                "text": "string"
              },
              "description": "Section's title"
            },
            {
              "kind": "method",
              "name": "handleShareClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "SharingTypes"
                  }
                }
              ],
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "shareByEmail",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "shareToSocials",
              "privacy": "private",
              "parameters": [
                {
                  "name": "socialType",
                  "type": {
                    "text": "SharingTypes"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "section-title",
              "fieldName": "sectionTitle",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-share-banner",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsShareBanner",
          "declaration": {
            "name": "BsShareBanner",
            "module": "src/components/molecules/share-banner/share-banner.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-share-banner",
          "declaration": {
            "name": "BsShareBanner",
            "module": "src/components/molecules/share-banner/share-banner.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/test-badge-card/test-badge-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Test badge card component.",
          "name": "BsTestBadgeCard",
          "members": [
            {
              "kind": "field",
              "name": "cardTitle",
              "type": {
                "text": "string"
              },
              "description": "The test badge title."
            },
            {
              "kind": "field",
              "name": "cardText",
              "type": {
                "text": "string"
              },
              "description": "The test badge description."
            },
            {
              "kind": "field",
              "name": "cardImage",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The test badge image."
            },
            {
              "kind": "field",
              "name": "parsedCardImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "card-title",
              "fieldName": "cardTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "card-text",
              "fieldName": "cardText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "card-image",
              "fieldName": "cardImage",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-test-badge-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsTestBadgeCard",
          "declaration": {
            "name": "BsTestBadgeCard",
            "module": "src/components/molecules/test-badge-card/test-badge-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-test-badge-card",
          "declaration": {
            "name": "BsTestBadgeCard",
            "module": "src/components/molecules/test-badge-card/test-badge-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/test-badge-detail/test-badge-detail.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Test badge detail component.",
          "name": "BsTestBadgeDetail",
          "members": [
            {
              "kind": "field",
              "name": "badgeTitle",
              "type": {
                "text": "string"
              },
              "description": "The badge title."
            },
            {
              "kind": "field",
              "name": "badgeText",
              "type": {
                "text": "string"
              },
              "description": "The badge content."
            },
            {
              "kind": "field",
              "name": "badgeCta",
              "type": {
                "text": "BsButton | string"
              },
              "description": "The badge CTA."
            },
            {
              "kind": "field",
              "name": "parsedBadgeCta",
              "type": {
                "text": "BsButton"
              }
            },
            {
              "kind": "field",
              "name": "badgeImages",
              "type": {
                "text": "BsImage[] | string"
              },
              "description": "The test badge image."
            },
            {
              "kind": "field",
              "name": "parsedbadgeImages",
              "type": {
                "text": "BsImage[]"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "badge-title",
              "fieldName": "badgeTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "badge-text",
              "fieldName": "badgeText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "badge-cta",
              "fieldName": "badgeCta",
              "type": {
                "text": "BsButton | string"
              }
            },
            {
              "name": "badge-images",
              "fieldName": "badgeImages",
              "type": {
                "text": "BsImage[] | string"
              }
            }
          ],
          "tagName": "bs-test-badge-detail",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsTestBadgeDetail",
          "declaration": {
            "name": "BsTestBadgeDetail",
            "module": "src/components/molecules/test-badge-detail/test-badge-detail.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-test-badge-detail",
          "declaration": {
            "name": "BsTestBadgeDetail",
            "module": "src/components/molecules/test-badge-detail/test-badge-detail.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/tooltip/tooltip.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Tooltip component.",
          "name": "BsTooltip",
          "members": [
            {
              "kind": "field",
              "name": "tooltipRef",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "description": "Refs"
            },
            {
              "kind": "field",
              "name": "tooltipWrapperRef",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "tooltipPanelRef",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "tooltipContentRef",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleKeydownFunction",
              "privacy": "private",
              "description": "Properties"
            },
            {
              "kind": "field",
              "name": "handleDocumentClickFunction",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLBsTooltipElement"
              }
            },
            {
              "kind": "field",
              "name": "bottomPosition",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "State"
            },
            {
              "kind": "field",
              "name": "isContentVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isTransitioning",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "description": "Tooltip's title"
            },
            {
              "kind": "field",
              "name": "contentText",
              "type": {
                "text": "string"
              },
              "description": "Tooltip's text content"
            },
            {
              "kind": "method",
              "name": "setTooltipPosition",
              "description": "Events"
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "throttleMethod",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "openTooltip",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "closeTooltip",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDocumentClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleTooltipOpening",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "title-text",
              "fieldName": "titleText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "content-text",
              "fieldName": "contentText",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-tooltip",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsTooltip",
          "declaration": {
            "name": "BsTooltip",
            "module": "src/components/molecules/tooltip/tooltip.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-tooltip",
          "declaration": {
            "name": "BsTooltip",
            "module": "src/components/molecules/tooltip/tooltip.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/video-card/video-card.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Video card component.",
          "name": "BsVideoCard",
          "members": [
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Stages"
            },
            {
              "kind": "field",
              "name": "videoId",
              "type": {
                "text": "string"
              },
              "description": "The youtube video ID."
            },
            {
              "kind": "field",
              "name": "mute",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the video be muted initially?"
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the player be loaded inline?"
            },
            {
              "kind": "field",
              "name": "autoplay",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the player start automatically when the page is loaded?"
            },
            {
              "kind": "field",
              "name": "image",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The image displayed on the card."
            },
            {
              "kind": "field",
              "name": "parsedImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "bsYoutubeControllerClickHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<YoutubeControlClickEvent>"
                  }
                }
              ],
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "bsYoutubeControllerUpdateHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<YoutubeControlUpdateEvent>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handlePlayVideo",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "video-id",
              "fieldName": "videoId",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "mute",
              "fieldName": "mute",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "inline",
              "fieldName": "inline",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "autoplay",
              "fieldName": "autoplay",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "image",
              "fieldName": "image",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-video-card",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsVideoCard",
          "declaration": {
            "name": "BsVideoCard",
            "module": "src/components/molecules/video-card/video-card.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-video-card",
          "declaration": {
            "name": "BsVideoCard",
            "module": "src/components/molecules/video-card/video-card.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/molecules/youtube-control/youtube-control.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Youtube controls component.",
          "name": "BsYoutubeControl",
          "members": [
            {
              "kind": "field",
              "name": "videoActive",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "videoId",
              "type": {
                "text": "string"
              },
              "description": "The video ID the controller belongs to."
            },
            {
              "kind": "field",
              "name": "playerState",
              "type": {
                "text": "PlayerState | undefined"
              },
              "description": "The playing state of the youtube Player."
            },
            {
              "kind": "field",
              "name": "mute",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true",
              "description": "Is the video muted."
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "description": "The video current progress time."
            },
            {
              "kind": "method",
              "name": "bsYoutubeControllerUpdateHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<YoutubeControlUpdateEvent>"
                  }
                }
              ],
              "description": "Listeners"
            },
            {
              "kind": "field",
              "name": "onButtonClick",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "onSliderChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "video-id",
              "fieldName": "videoId",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "player-state",
              "fieldName": "playerState",
              "type": {
                "text": "PlayerState"
              }
            },
            {
              "name": "mute",
              "fieldName": "mute",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "current-time",
              "fieldName": "currentTime",
              "type": {
                "text": "number"
              }
            }
          ],
          "tagName": "bs-youtube-control",
          "events": [
            {
              "name": "bsYoutubeControllerClick",
              "type": {
                "text": "EventEmitter<YoutubeControlClickEvent>"
              },
              "description": "Youtube control event"
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsYoutubeControl",
          "declaration": {
            "name": "BsYoutubeControl",
            "module": "src/components/molecules/youtube-control/youtube-control.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-youtube-control",
          "declaration": {
            "name": "BsYoutubeControl",
            "module": "src/components/molecules/youtube-control/youtube-control.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/accordion/accordion.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The Accordion component.",
          "name": "BsAccordion",
          "members": [
            {
              "kind": "field",
              "name": "mainTitle",
              "type": {
                "text": "BsTitle | string | undefined"
              },
              "description": "Section's title."
            },
            {
              "kind": "field",
              "name": "parsedMainTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "method",
              "name": "bsAccordionStateHandler",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<boolean>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "main-title",
              "fieldName": "mainTitle",
              "type": {
                "text": "BsTitle | string"
              }
            }
          ],
          "tagName": "bs-accordion",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsAccordion",
          "declaration": {
            "name": "BsAccordion",
            "module": "src/components/organisms/accordion/accordion.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-accordion",
          "declaration": {
            "name": "BsAccordion",
            "module": "src/components/organisms/accordion/accordion.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/base-modal/base-modal.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Component containing all the modals \"focus trap\" logic\nThis is a way to get around StencilJS not allowing class inheritance\n\nEach modal that requires focus trap functionality\nneeds to be nested inside this base component",
          "name": "BsBaseModal",
          "members": [
            {
              "kind": "field",
              "name": "previousFocusedElement",
              "type": {
                "text": "Element"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focusableElements",
              "type": {
                "text": "Element[] | []"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "firstFocusableElement",
              "type": {
                "text": "Element"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "lastFocusableElement",
              "type": {
                "text": "Element"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "el",
              "type": {
                "text": "HTMLBsBaseModalElement"
              }
            },
            {
              "kind": "field",
              "name": "modalId",
              "type": {
                "text": "BaseModalId"
              },
              "description": "Props"
            },
            {
              "kind": "field",
              "name": "transitionType",
              "type": {
                "text": "TransitionType | undefined"
              },
              "default": "'fade'"
            },
            {
              "kind": "field",
              "name": "modalCanBeClosed",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "true"
            },
            {
              "kind": "method",
              "name": "close",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "nextSlide"
            },
            {
              "kind": "method",
              "name": "previousSlide"
            },
            {
              "kind": "method",
              "name": "handleFocus"
            },
            {
              "kind": "method",
              "name": "handleKeyPress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocusTrap",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "modal-id",
              "fieldName": "modalId",
              "type": {
                "text": "BaseModalId"
              }
            },
            {
              "name": "transition-type",
              "fieldName": "transitionType",
              "type": {
                "text": "TransitionType"
              }
            },
            {
              "name": "modal-can-be-closed",
              "fieldName": "modalCanBeClosed",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-base-modal",
          "events": [
            {
              "name": "bsModalIsClosing",
              "type": {
                "text": "EventEmitter<{ modalId: BaseModalId }>"
              },
              "description": "Events"
            },
            {
              "name": "bsModalIsClosed",
              "type": {
                "text": "EventEmitter<{ modalId: BaseModalId }>"
              }
            },
            {
              "name": "bsNextSlideAction",
              "type": {
                "text": "EventEmitter"
              }
            },
            {
              "name": "bsPreviousSlideAction",
              "type": {
                "text": "EventEmitter"
              }
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsBaseModal",
          "declaration": {
            "name": "BsBaseModal",
            "module": "src/components/organisms/base-modal/base-modal.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-base-modal",
          "declaration": {
            "name": "BsBaseModal",
            "module": "src/components/organisms/base-modal/base-modal.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/blog-header/blog-header.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Blog header component.",
          "name": "BsBlogHeader",
          "members": [
            {
              "kind": "field",
              "name": "image",
              "type": {
                "text": "BsImage | string"
              },
              "description": "A (json)object string containing the bs-image elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "BsImage | string"
              },
              "description": "A (json)object string containing the bs-image that is used for the logo elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedLogo",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "head",
              "type": {
                "text": "BsTitle | string"
              },
              "description": "A (json)object string containing the bs-title elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "image",
              "fieldName": "image",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "logo",
              "fieldName": "logo",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "head",
              "fieldName": "head",
              "type": {
                "text": "BsTitle | string"
              }
            }
          ],
          "tagName": "bs-blog-header",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsBlogHeader",
          "declaration": {
            "name": "BsBlogHeader",
            "module": "src/components/organisms/blog-header/blog-header.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-blog-header",
          "declaration": {
            "name": "BsBlogHeader",
            "module": "src/components/organisms/blog-header/blog-header.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/dark-theme-overlay/dark-theme-overlay.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Dark-theme overlay component.",
          "name": "BsDarkOverlay",
          "members": [
            {
              "kind": "field",
              "name": "modalRef",
              "type": {
                "text": "HTMLBsBaseModalElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "isMobile",
              "type": {
                "text": "boolean"
              },
              "description": "States"
            },
            {
              "kind": "field",
              "name": "mainTitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "The title of the carousel displayed in the footer."
            },
            {
              "kind": "field",
              "name": "screens",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Does the content contain multiple screens?"
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "BsImage | string"
              },
              "description": "The logo to be displayed in the footer."
            },
            {
              "kind": "field",
              "name": "parsedLogo",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "method",
              "name": "handleScreenResized",
              "description": "Listeners"
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "throttleMethod",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "closeOverlay",
              "description": "This method triggers the close method on the modal."
            },
            {
              "kind": "method",
              "name": "previousSlide",
              "description": "This method triggers the previous slide method on the modal."
            },
            {
              "kind": "method",
              "name": "nextSlide",
              "description": "This method triggers the next slide method on the modal."
            },
            {
              "kind": "method",
              "name": "focusTrap",
              "description": "This method triggers the handle focus method on the modal."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "main-title",
              "fieldName": "mainTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "screens",
              "fieldName": "screens",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "logo",
              "fieldName": "logo",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-dark-overlay",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsDarkOverlay",
          "declaration": {
            "name": "BsDarkOverlay",
            "module": "src/components/organisms/dark-theme-overlay/dark-theme-overlay.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-dark-overlay",
          "declaration": {
            "name": "BsDarkOverlay",
            "module": "src/components/organisms/dark-theme-overlay/dark-theme-overlay.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/form-container/form-container.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The form container component.",
          "name": "BsFormContainer",
          "members": [
            {
              "kind": "field",
              "name": "allFields",
              "type": {
                "text": "HTMLBsFormFieldElement[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "acceptedRequestStatus",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "[200, 201]"
            },
            {
              "kind": "field",
              "name": "hostElement",
              "type": {
                "text": "HTMLBsFormContainerElement"
              }
            },
            {
              "kind": "field",
              "name": "formHasErrors",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "State"
            },
            {
              "kind": "field",
              "name": "isFormSending",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "submitHasFailed",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "string"
              },
              "description": "The endpoint for the submit request."
            },
            {
              "kind": "field",
              "name": "recaptchaSiteKey",
              "type": {
                "text": "string"
              },
              "description": "The recaptcha Public site key"
            },
            {
              "kind": "field",
              "name": "invalidFormMessage",
              "type": {
                "text": "string"
              },
              "description": "Message to inform the user there are issues with the filled in values."
            },
            {
              "kind": "field",
              "name": "submitErrorMessage",
              "type": {
                "text": "string"
              },
              "description": "Message to inform the usere something went wrong while submitting the form."
            },
            {
              "kind": "field",
              "name": "successRedirect",
              "type": {
                "text": "string"
              },
              "description": "The page the user is redirected to in case of a successfull submit."
            },
            {
              "kind": "method",
              "name": "onBsButtonClickHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Events"
            },
            {
              "kind": "method",
              "name": "validateForm",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "isFormValid",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getData",
              "privacy": "private",
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "submitRequest",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "submitRequestWithToken",
              "privacy": "private",
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "description": "Render"
            }
          ],
          "attributes": [
            {
              "name": "action",
              "fieldName": "action",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "recaptcha-site-key",
              "fieldName": "recaptchaSiteKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "invalid-form-message",
              "fieldName": "invalidFormMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "submit-error-message",
              "fieldName": "submitErrorMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "success-redirect",
              "fieldName": "successRedirect",
              "type": {
                "text": "string"
              }
            }
          ],
          "tagName": "bs-form-container",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsFormContainer",
          "declaration": {
            "name": "BsFormContainer",
            "module": "src/components/organisms/form-container/form-container.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-form-container",
          "declaration": {
            "name": "BsFormContainer",
            "module": "src/components/organisms/form-container/form-container.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/header-banner/header-banner.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Header banner component.",
          "name": "BsHeaderBanner",
          "members": [
            {
              "kind": "field",
              "name": "isMobile",
              "type": {
                "text": "boolean"
              },
              "description": "States"
            },
            {
              "kind": "field",
              "name": "image",
              "type": {
                "text": "BsImage | string | undefined"
              },
              "description": "A (json)object string containing the bs-image elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedImage",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "BsImage | string | undefined"
              },
              "description": "A (json)object string containing the bs-image that is used for the logo elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedLogo",
              "type": {
                "text": "BsImage"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "A label to be displayed on the top if there is no logo."
            },
            {
              "kind": "field",
              "name": "headerTitle",
              "type": {
                "text": "BsTitle | string"
              },
              "description": "A (json)object string containing the bs-title elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedHeaderTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "The header banner subtitle."
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "BsButton | string | undefined"
              },
              "description": "A (json)object string containing the bs-button elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedButton",
              "type": {
                "text": "BsButton"
              }
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "Variant"
              },
              "description": "The header banner variant. Either 'image' or 'video'."
            },
            {
              "kind": "field",
              "name": "video",
              "type": {
                "text": "BsVideoCard | string | undefined"
              },
              "description": "A (json)object string containing the bs-video-card elemement properties."
            },
            {
              "kind": "field",
              "name": "parsedvideo",
              "type": {
                "text": "BsVideoCard"
              }
            },
            {
              "kind": "method",
              "name": "handleScreenResized",
              "description": "Listeners"
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "throttleMethod",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "image",
              "fieldName": "image",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "logo",
              "fieldName": "logo",
              "type": {
                "text": "BsImage | string"
              }
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "header-title",
              "fieldName": "headerTitle",
              "type": {
                "text": "BsTitle | string"
              }
            },
            {
              "name": "subtitle",
              "fieldName": "subtitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "button",
              "fieldName": "button",
              "type": {
                "text": "BsButton | string"
              }
            },
            {
              "name": "variant",
              "fieldName": "variant",
              "type": {
                "text": "Variant"
              }
            },
            {
              "name": "video",
              "fieldName": "video",
              "type": {
                "text": "BsVideoCard | string"
              }
            }
          ],
          "tagName": "bs-header-banner",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsHeaderBanner",
          "declaration": {
            "name": "BsHeaderBanner",
            "module": "src/components/organisms/header-banner/header-banner.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-header-banner",
          "declaration": {
            "name": "BsHeaderBanner",
            "module": "src/components/organisms/header-banner/header-banner.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/header-navigation/header-navigation.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Header navigation component.",
          "name": "BsHeaderNavigation",
          "members": [
            {
              "kind": "field",
              "name": "stickyMenuIsVisible",
              "type": {
                "text": "boolean"
              },
              "description": "State"
            },
            {
              "kind": "field",
              "name": "headerNavigation",
              "type": {
                "text": "HeaderNavigation | string"
              },
              "description": "The ."
            },
            {
              "kind": "field",
              "name": "parsedHeaderNavigation",
              "type": {
                "text": "HeaderNavigation"
              }
            },
            {
              "kind": "method",
              "name": "handleBodyScroll",
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "header-navigation",
              "fieldName": "headerNavigation",
              "type": {
                "text": "HeaderNavigation | string"
              }
            }
          ],
          "tagName": "bs-header-navigation",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsHeaderNavigation",
          "declaration": {
            "name": "BsHeaderNavigation",
            "module": "src/components/organisms/header-navigation/header-navigation.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-header-navigation",
          "declaration": {
            "name": "BsHeaderNavigation",
            "module": "src/components/organisms/header-navigation/header-navigation.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/image-carousel/image-carousel.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The image carousel component.",
          "name": "BsImageCarousel",
          "members": [
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "NodeJS.Timeout"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "focusedImageRef",
              "type": {
                "text": "HTMLBsImageElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "thumbnailWrapRef",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "overlayRef",
              "type": {
                "text": "HTMLBsDarkOverlayElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "desktop",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "imageCollection",
              "type": {
                "text": "BsImage[] | string"
              },
              "description": "The list of images to be shown in the carousel."
            },
            {
              "kind": "field",
              "name": "parsedImageCollection",
              "type": {
                "text": "BsImage[]"
              }
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The index of the featured image."
            },
            {
              "kind": "method",
              "name": "handleIndexChange"
            },
            {
              "kind": "field",
              "name": "autoplay",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should autoplay be enabled?"
            },
            {
              "kind": "field",
              "name": "slow",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the autoplay be slow?"
            },
            {
              "kind": "field",
              "name": "carouselTitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "The title of the carousel displayed in the footer."
            },
            {
              "kind": "field",
              "name": "logo",
              "type": {
                "text": "BsImage | string | undefined"
              },
              "description": "The logo to be displayed in the footer."
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "description": "methods"
            },
            {
              "kind": "field",
              "name": "throttleMethod",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "updateIndex",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "setTimer",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "autoscrollThumbnails",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBsSwipeAction",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "handleScreenResized"
            },
            {
              "kind": "method",
              "name": "handleNextMedia"
            },
            {
              "kind": "method",
              "name": "handlePreviousMedia"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "image-collection",
              "fieldName": "imageCollection",
              "type": {
                "text": "BsImage[] | string"
              }
            },
            {
              "name": "index",
              "fieldName": "index",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "autoplay",
              "fieldName": "autoplay",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "slow",
              "fieldName": "slow",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "carousel-title",
              "fieldName": "carouselTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "logo",
              "fieldName": "logo",
              "type": {
                "text": "BsImage | string"
              }
            }
          ],
          "tagName": "bs-image-carousel",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsImageCarousel",
          "declaration": {
            "name": "BsImageCarousel",
            "module": "src/components/organisms/image-carousel/image-carousel.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-image-carousel",
          "declaration": {
            "name": "BsImageCarousel",
            "module": "src/components/organisms/image-carousel/image-carousel.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/light-theme-overlay/light-theme-overlay.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Lark-theme overlay component.",
          "name": "BsLightOverlay",
          "members": [
            {
              "kind": "field",
              "name": "modalRef",
              "type": {
                "text": "HTMLBsBaseModalElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "screens",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Does the content contain multiple screens?"
            },
            {
              "kind": "method",
              "name": "closeOverlay",
              "description": "This method triggers the close method on the modal."
            },
            {
              "kind": "method",
              "name": "previousSlide",
              "description": "This method triggers the previous slide method on the modal."
            },
            {
              "kind": "method",
              "name": "nextSlide",
              "description": "This method triggers the next slide method on the modal."
            },
            {
              "kind": "method",
              "name": "focusTrap",
              "description": "This method triggers the handle focus method on the modal."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "screens",
              "fieldName": "screens",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-light-overlay",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsLightOverlay",
          "declaration": {
            "name": "BsLightOverlay",
            "module": "src/components/organisms/light-theme-overlay/light-theme-overlay.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-light-overlay",
          "declaration": {
            "name": "BsLightOverlay",
            "module": "src/components/organisms/light-theme-overlay/light-theme-overlay.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/overlay-menu/overlay-menu.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Overlay menu component.",
          "name": "BsOverlayMenu",
          "members": [
            {
              "kind": "field",
              "name": "modalRef",
              "type": {
                "text": "HTMLBsBaseModalElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "modalId",
              "type": {
                "text": "BaseModalId"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "isClosing",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "headerNavigation",
              "type": {
                "text": "HeaderNavigation | string"
              },
              "description": "The header navigation data."
            },
            {
              "kind": "field",
              "name": "parsedHeaderNavigation",
              "type": {
                "text": "HeaderNavigation"
              }
            },
            {
              "kind": "method",
              "name": "bsModalIsClosingHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Events"
            },
            {
              "kind": "field",
              "name": "handleCloseButtonClick",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "header-navigation",
              "fieldName": "headerNavigation",
              "type": {
                "text": "HeaderNavigation | string"
              }
            }
          ],
          "tagName": "bs-overlay-menu",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsOverlayMenu",
          "declaration": {
            "name": "BsOverlayMenu",
            "module": "src/components/organisms/overlay-menu/overlay-menu.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-overlay-menu",
          "declaration": {
            "name": "BsOverlayMenu",
            "module": "src/components/organisms/overlay-menu/overlay-menu.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/related-articles/related-articles.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Related articles component.",
          "name": "BsRelatedArticlesCard",
          "members": [
            {
              "kind": "field",
              "name": "articlesData",
              "type": {
                "text": "BsArticleCard[] | string"
              },
              "description": "The article related image."
            },
            {
              "kind": "field",
              "name": "parsedArticlesData",
              "type": {
                "text": "BsArticleCard[]"
              }
            },
            {
              "kind": "field",
              "name": "relatedArticlesTitle",
              "type": {
                "text": "BsTitle | string"
              },
              "description": "Description."
            },
            {
              "kind": "field",
              "name": "parsedRelatedArticlesTitle",
              "type": {
                "text": "BsTitle"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "articles-data",
              "fieldName": "articlesData",
              "type": {
                "text": "BsArticleCard[] | string"
              }
            },
            {
              "name": "related-articles-title",
              "fieldName": "relatedArticlesTitle",
              "type": {
                "text": "BsTitle | string"
              }
            }
          ],
          "tagName": "bs-related-articles",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsRelatedArticlesCard",
          "declaration": {
            "name": "BsRelatedArticlesCard",
            "module": "src/components/organisms/related-articles/related-articles.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-related-articles",
          "declaration": {
            "name": "BsRelatedArticlesCard",
            "module": "src/components/organisms/related-articles/related-articles.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/slider/slider.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The Slider component.",
          "name": "BsSlider",
          "members": [
            {
              "kind": "field",
              "name": "teaserSliderRef",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "navigationRef",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "itemsVisible",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "slides",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "States"
            },
            {
              "kind": "method",
              "name": "handleScreenResized",
              "description": "listeners"
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "description": "Methods"
            },
            {
              "kind": "field",
              "name": "throttleMethod",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onPreviousSlide",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onNextSlide",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleOverlay",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "getCards",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "tagName": "bs-slider",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsSlider",
          "declaration": {
            "name": "BsSlider",
            "module": "src/components/organisms/slider/slider.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-slider",
          "declaration": {
            "name": "BsSlider",
            "module": "src/components/organisms/slider/slider.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/test-badge/test-badge.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "Test Badge component.",
          "name": "BsTestBadge",
          "members": [
            {
              "kind": "field",
              "name": "testBadgeCollection",
              "type": {
                "text": "TestBadge[] | string"
              },
              "description": "The Experience Zone contract."
            },
            {
              "kind": "field",
              "name": "parsedTestBadgeCollection",
              "type": {
                "text": "TestBadge[]"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "test-badge-collection",
              "fieldName": "testBadgeCollection",
              "type": {
                "text": "TestBadge[] | string"
              }
            }
          ],
          "tagName": "bs-test-badge-slider",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsTestBadge",
          "declaration": {
            "name": "BsTestBadge",
            "module": "src/components/organisms/test-badge/test-badge.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-test-badge-slider",
          "declaration": {
            "name": "BsTestBadge",
            "module": "src/components/organisms/test-badge/test-badge.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/test-badge-modal/test-badge-modal.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The test badge modal component.",
          "name": "BsTestBadgeModal",
          "members": [
            {
              "kind": "field",
              "name": "overlayRef",
              "type": {
                "text": "HTMLBsLightOverlayElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The index of the featured image."
            },
            {
              "kind": "field",
              "name": "testBadgeCollection",
              "type": {
                "text": "| (BsTestBadgeDetail & { cardTitle: string; cardText: string })[]\n    | string"
              },
              "description": "The list of images to be shown in the carousel."
            },
            {
              "kind": "field",
              "name": "parsedtestBadgeCollection",
              "type": {
                "text": "(BsTestBadgeDetail & { cardTitle: string; cardText: string })[]"
              }
            },
            {
              "kind": "method",
              "name": "bsNextSlideActionHandler",
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "bsPreviousSlideActionHandler"
            },
            {
              "kind": "field",
              "name": "updateIndex",
              "privacy": "private",
              "description": "methods"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "index",
              "fieldName": "index",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "test-badge-collection",
              "fieldName": "testBadgeCollection",
              "type": {
                "text": "| (BsTestBadgeDetail & { cardTitle: string; cardText: string })[]\n    | string"
              }
            }
          ],
          "tagName": "bs-test-badge-modal",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsTestBadgeModal",
          "declaration": {
            "name": "BsTestBadgeModal",
            "module": "src/components/organisms/test-badge-modal/test-badge-modal.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-test-badge-modal",
          "declaration": {
            "name": "BsTestBadgeModal",
            "module": "src/components/organisms/test-badge-modal/test-badge-modal.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/organisms/youtube-video/youtube-video.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The youtube video component.",
          "name": "BsYoutubeVideo",
          "members": [
            {
              "kind": "field",
              "name": "player",
              "type": {
                "text": "YT.Player"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "progressBarInterval",
              "type": {
                "text": "NodeJS.Timeout"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "videoElementRef",
              "type": {
                "text": "HTMLDivElement | HTMLIFrameElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "overlayRef",
              "type": {
                "text": "HTMLBsDarkOverlayElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "playerState",
              "type": {
                "text": "PlayerState"
              },
              "default": "null",
              "description": "States"
            },
            {
              "kind": "field",
              "name": "currentTime",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the player be loaded inline?"
            },
            {
              "kind": "field",
              "name": "videoId",
              "type": {
                "text": "string"
              },
              "description": "The youtube video ID."
            },
            {
              "kind": "field",
              "name": "mute",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Should the video be muted initially?"
            },
            {
              "kind": "method",
              "name": "handleMute",
              "parameters": [
                {
                  "name": "mute",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "bsYoutubeControllerClickHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<YoutubeControlClickEvent>"
                  }
                }
              ],
              "description": "Listeners"
            },
            {
              "kind": "method",
              "name": "bsYoutubeAPIReadyHandler"
            },
            {
              "kind": "field",
              "name": "onPlayerReady",
              "privacy": "private",
              "description": "methods"
            },
            {
              "kind": "field",
              "name": "onPlayerStateChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "calculateTime",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "updateYoutubeController",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "isIosOrSafari",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "createPlayer",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "inline",
              "fieldName": "inline",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "video-id",
              "fieldName": "videoId",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "mute",
              "fieldName": "mute",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "tagName": "bs-youtube-video",
          "events": [
            {
              "name": "bsYoutubeControllerUpdate",
              "type": {
                "text": "EventEmitter<YoutubeControlUpdateEvent>"
              },
              "description": "Event for all user actions on the controller."
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BsYoutubeVideo",
          "declaration": {
            "name": "BsYoutubeVideo",
            "module": "src/components/organisms/youtube-video/youtube-video.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bs-youtube-video",
          "declaration": {
            "name": "BsYoutubeVideo",
            "module": "src/components/organisms/youtube-video/youtube-video.tsx"
          }
        }
      ]
    }
  ]
}
