{"file":"bs-image.entry.js","mappings":";;;;AAAA,MAAM,QAAQ,GAAG,ogPAAogP;;MCYxgP,OAAO;;;;;;;sBAwBY;kBACd,UAAU,CAAC,EAAE,OAAO,UAAU,CAAC,EAAE;kBACjC,UAAU,CAAC,EAAE,OAAO,UAAU,CAAC,EAAE;kBACjC,UAAU,CAAC,EAAE,OAAO,UAAU,CAAC,EAAE;WACxC;;oBAUmB,YAAY;;;;;gBAyBf,IAAI;;EAE7B,MAAM;IACJ,QACE,EAAC,IAAI,QACH,cAAQ,KAAK,EAAC,QAAQ,IAEpB,WACE,KAAK,EAAE,SAAS,IAAI,CAAC,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAAE,EACzD,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,KAAK,EAAE,IAAI,CAAC,UAAU,EACtB,GAAG,EAAE,IAAI,CAAC,OAAO,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO,iBACxB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAClC;;IAIA,IAAI,CAAC,OAAO,KACV,kBAAY,KAAK,EAAE,WAAW,IAAI,CAAC,YAAY,GAAG,eAAe,GAAG,EAAE,EAAE,IACrE,IAAI,CAAC,OAAO,EACb,aAAM,EACN,YAAM,KAAK,EAAC,QAAQ,IAAE,IAAI,CAAC,MAAM,CAAQ,CAC9B,CACd,CAEI,CACJ,EACP;GACH;;;;;;","names":[],"sources":["./src/components/atoms/image/image.scss?tag=bs-image&encapsulation=shadow","./src/components/atoms/image/image.tsx"],"sourcesContent":["$image--max-width: var(--image--max-width, 100%);\n$image--max-height: var(--image--max-height, auto);\n$image--width: var(--image--width, 100%);\n$image--height: var(--image--height, auto);\n$image--fit: var(--image--fit, cover);\n\n:host {\n  @include reset-host;\n}\n\n:host .figure {\n  font-size: font-size(small);\n  line-height: 0;\n  text-align: left;\n}\n\n:host .image {\n  width: $image--width;\n  max-width: $image--max-width;\n  height: $image--height;\n  max-height: $image--max-height;\n  line-height: normal;\n  object-fit: $image--fit;\n  object-position: center;\n\n  &.is-background-image {\n    @include cover;\n  }\n}\n\n:host .caption {\n  @include font(caption);\n  width: fit-content;\n  padding: rem(24) rem(24) rem(16);\n\n  &.is-caption-on {\n    position: absolute;\n    right: rem(15);\n    bottom: rem(15);\n    left: rem(15);\n    padding: rem(12) rem(16);\n    color: $white;\n    background-color: rgba($black, 0.5);\n\n    .source {\n      color: $white;\n    }\n  }\n}\n\n:host .source {\n  font-size: font-size('x-small');\n  color: $gray-700;\n}\n","import { isEmpty } from '@springbokagency/stencil-base';\nimport { Component, Host, h, Prop } from '@stencil/core';\nimport { Breakpoint } from '../../../utils/breakpoints';\n\n/**\n * Description of the component.\n */\n@Component({\n  tag: 'bs-image',\n  styleUrl: 'image.scss',\n  shadow: true,\n})\nexport class BsImage {\n  /**\n   * Image's src\n   */\n  @Prop() src: string;\n\n  /**\n   * Image's srcset\n   */\n  @Prop() srcset?: string;\n\n  /**\n   * Image's width\n   */\n  @Prop() width: string | number;\n\n  /**\n   * Image's height\n   */\n  @Prop() height: string | number;\n\n  /**\n   * Image's sizes\n   */\n  @Prop() imageSizes?: string = `\n    (max-width: ${Breakpoint.xs}px) ${Breakpoint.xs}px,\n    (max-width: ${Breakpoint.md}px) ${Breakpoint.md}px,\n    (max-width: ${Breakpoint.xl}px) ${Breakpoint.xl}px,\n    1920px`;\n\n  /**\n   * Image's alternative text\n   */\n  @Prop() altText?: string;\n\n  /**\n   * \"itemprop\" attribute\n   */\n  @Prop() itemprop?: string = 'contentUrl';\n\n  /**\n   * Image's caption\n   */\n  @Prop() caption?: string;\n\n  /**\n   * Determine if text under or on image\n   */\n  @Prop() captionCover?: boolean;\n\n  /**\n   * Determine if image is stretching to fill its container's size\n   */\n  @Prop() cover?: boolean;\n\n  /**\n   * Source image\n   */\n  @Prop() source?: string;\n\n  /**\n   * Enable lazy loading?\n   */\n  @Prop() lazy?: boolean = true;\n\n  render() {\n    return (\n      <Host>\n        <figure class=\"figure\">\n          {/* Image */}\n          <img\n            class={`image ${this.cover ? 'is-background-image' : ''}`}\n            src={this.src}\n            srcset={this.srcset}\n            width={this.width}\n            height={this.height}\n            sizes={this.imageSizes}\n            alt={this.altText}\n            itemprop={this.itemprop}\n            loading={this.lazy ? 'lazy' : 'eager'}\n            aria-hidden={isEmpty(this.altText)}\n          />\n\n          {\n            /* Caption */\n            this.caption && (\n              <figcaption class={`caption ${this.captionCover ? 'is-caption-on' : ''}`}>\n                {this.caption}\n                <br />\n                <span class=\"source\">{this.source}</span>\n              </figcaption>\n            )\n          }\n        </figure>\n      </Host>\n    );\n  }\n}\n"],"version":3}