{"file":"bs-newsletter-banner.entry.js","mappings":";;;;;;;;AAAA,MAAM,mBAAmB,GAAG,syNAAsyN;;;;;;;;;;;;MCgBrzN,kBAAkB;;;;;;;EAiB7B,IAAI,YAAY;IACd,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;GACnC;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,mBAAmB,IAC5B,WAAK,KAAK,EAAC,cAAc,IACvB,gBACE,GAAG,EAAE,QAAQ,CAAC,EAAE,EAChB,IAAI,EAAE,IAAI,CAAC,YAAY,EACvB,IAAI,EAAE,SAAS,CAAC,KAAK,EACrB,OAAO,EAAE,YAAY,CAAC,KAAK,GAC3B,EACF,eAAS,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,KAAK,GAAI,CAClD,EAEN,iCACM,IAAI,CAAC,YAAY,IACrB,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EACpD,OAAO,EAAE,aAAa,CAAC,OAAO,IAC9B,CACE,CACD,EACP;GACH;;AA1BD;EADC,OAAO,CAAC,QAAQ,CAAC;sDAGjB;;;;;","names":[],"sources":["./src/components/molecules/newsletter-banner/newsletter-banner.scss?tag=bs-newsletter-banner&encapsulation=shadow","./src/components/molecules/newsletter-banner/newsletter-banner.tsx"],"sourcesContent":[":host .newsletter-banner {\n  display: flex;\n  flex-direction: column;\n  gap: rem(24);\n  justify-content: space-between;\n\n  @include mq('min', 'md') {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n\n:host .text-wrapper {\n  bs-title {\n    display: block;\n    margin-bottom: rem(8);\n  }\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsButton } from '../../atoms/button/button';\nimport { ButtonVariant } from '../../atoms/button/button.types';\nimport { TextSize } from '../../atoms/text/text.types';\nimport { TitleSize, TitleTag, TitleVariant } from '../../atoms/title/title.types';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\n\n/**\n * Newsletter banner component.\n */\n@Component({\n  tag: 'bs-newsletter-banner',\n  styleUrl: 'newsletter-banner.scss',\n  shadow: true,\n})\nexport class BsNewsletterBanner {\n  /**\n   * Section's title\n   */\n  @Prop() sectionTitle: string;\n\n  /**\n   * Subtitle\n   */\n  @Prop() subtitle: string;\n\n  /**\n   * Description.\n   */\n  @Prop() button: BsButton | string;\n\n  @Memoize('button')\n  get parsedButton(): BsButton {\n    return parseIfString(this.button);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"newsletter-banner\">\n          <div class=\"text-wrapper\">\n            <bs-title\n              tag={TitleTag.H2}\n              text={this.sectionTitle}\n              size={TitleSize.Head2}\n              variant={TitleVariant.Slash}\n            />\n            <bs-text text={this.subtitle} size={TextSize.Small} />\n          </div>\n\n          <bs-button\n            {...this.parsedButton}\n            isFullWidth={compareBreakpoint('max', Breakpoint.md)}\n            variant={ButtonVariant.Primary}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}