{"file":"bs-experience-zone.entry.js","mappings":"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","names":[],"sources":["./src/components/molecules/experience-zone/experience-zone.scss?tag=bs-experience-zone&encapsulation=shadow","./src/components/molecules/experience-zone/experience-zone.tsx"],"sourcesContent":["/* stylelint-disable property-no-vendor-prefix */\n:host {\n  @include reset-host;\n  padding: 2rem 0;\n  overflow: hidden;\n}\n\n:host .teaser-head {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n:host .teaser-navigation {\n  display: flex;\n  gap: rem(12);\n\n  @include mq('max', 'md') {\n    display: none;\n  }\n}\n\n:host .teaser-slider {\n  display: flex;\n  gap: rem(12);\n  margin: rem(32) 0;\n  overflow: auto;\n\n  @include mq('min', 'md') {\n    gap: rem(24);\n    padding-bottom: rem(32);\n    overflow: auto;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar {\n    height: 2px;\n    background-color: transparent;\n\n    @include mq('max', 'md') {\n      display: none;\n    }\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: $primary;\n  }\n}\n\n:host .navigation-button {\n  padding: rem(8);\n  font-size: rem(24);\n  border: 1px solid $gray-800;\n  border-radius: 50%;\n\n  &:focus {\n    background-color: $gray-800;\n    outline: 0;\n  }\n}\n\n:host .teaser-card {\n  flex-grow: 1;\n}\n\n:host .progress-bar {\n  width: 100%;\n  height: rem(2);\n}\n\n:host .progress-indicator {\n  width: 0;\n  height: 100%;\n  background-color: $primary;\n}\n\n:host .grow {\n  flex-grow: 1;\n}\n\n:host .click-action {\n  outline: 0;\n}\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsTitle } from '../../atoms/title/title';\nimport { ExperienceZone, ExperienceZoneLayout } from './experience-zone.types';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { throttle } from '../../../utils/throttle';\n\n/**\n * Experience Zone teaser component.\n */\n@Component({\n  tag: 'bs-experience-zone',\n  styleUrl: 'experience-zone.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneTeaser {\n  private teaserSliderRef: HTMLDivElement;\n\n  /** States */\n  @State() slides: boolean = false;\n\n  @State() activeIndex: number = 0;\n\n  /** Props */\n  /**\n   * The Experience Zone contract.\n   */\n  @Prop() experienceZoneData: ExperienceZone | string;\n\n  @Memoize('experienceZoneData')\n  get parsedExperienceZoneData(): ExperienceZone {\n    return parseIfString(this.experienceZoneData);\n  }\n\n  /**\n   * The Experience Zone Teaser title.\n   */\n  @Prop() teaserTitle: BsTitle | string;\n\n  @Memoize('teaserTitle')\n  get parsedTeaserTitle(): BsTitle {\n    return parseIfString(this.teaserTitle);\n  }\n\n  /** listeners */\n  @Listen('resize', { target: 'window', passive: true })\n  handleScreenResized() {\n    this.throttleMethod();\n  }\n\n  /** Methods */\n  private onResize = () => {\n    this.slides =\n      this.teaserSliderRef && this.teaserSliderRef.scrollWidth > this.teaserSliderRef.offsetWidth;\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  private onPreviousSlide = () => {\n    if (this.activeIndex < 1) return;\n    if (this.teaserSliderRef.scrollLeft === 0) return;\n    this.activeIndex -= 1;\n\n    this.scrollSlider();\n  };\n\n  private onNextSlide = () => {\n    if (this.activeIndex > this.parsedExperienceZoneData.stories.length - 2) return;\n    if (\n      this.teaserSliderRef.scrollLeft + this.teaserSliderRef.clientWidth ===\n      this.teaserSliderRef.scrollWidth\n    )\n      return;\n    this.activeIndex += 1;\n\n    this.scrollSlider();\n  };\n\n  private scrollSlider = () => {\n    const scrollDistance =\n      (this.teaserSliderRef.children[this.activeIndex] as HTMLBsClickActionElement).offsetLeft -\n      this.teaserSliderRef.offsetLeft;\n\n    this.teaserSliderRef.scrollTo({\n      top: 0,\n      left: scrollDistance,\n      behavior: 'smooth',\n    });\n  };\n\n  /** lifecycle hooks */\n  componentDidLoad() {\n    this.slides = this.teaserSliderRef.scrollWidth > this.teaserSliderRef.offsetWidth;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"teaser-head\">\n          <bs-title\n            text={this.parsedTeaserTitle.text}\n            tag={this.parsedTeaserTitle.tag}\n            size={this.parsedTeaserTitle.size}\n            variant={this.parsedTeaserTitle.variant}\n            color={this.parsedTeaserTitle.color}\n          />\n          {this.slides && (\n            <div class=\"teaser-navigation\">\n              <bs-click-action\n                name=\"previous\"\n                onBsClickAction={this.onPreviousSlide}\n                tagClass=\"navigation-button\"\n                ariaLabelText=\"backward\"\n              >\n                <bs-icon name={IconName.ArrowBackward} />\n              </bs-click-action>\n              <bs-click-action\n                name=\"next\"\n                onBsClickAction={this.onNextSlide}\n                tagClass=\"navigation-button\"\n                ariaLabelText=\"forward\"\n              >\n                <bs-icon name={IconName.ArrowForward} />\n              </bs-click-action>\n            </div>\n          )}\n        </div>\n        <div\n          class=\"teaser-slider\"\n          ref={(el) => {\n            this.teaserSliderRef = el;\n          }}\n        >\n          {this.parsedExperienceZoneData.stories.map((story, index) => (\n            <bs-click-action\n              name=\"open-experience-zone-modal\"\n              class=\"grow\"\n              tagClass=\"grow click-action\"\n              value={{ activeIndex: index, experienceZoneData: this.experienceZoneData }}\n            >\n              <bs-experience-zone-card\n                class=\"teaser-card\"\n                singular={this.parsedExperienceZoneData.stories.length === 1}\n                cardTitle={story.storyTitle}\n                cardImage={story.storyImage}\n                video={story.screens[0].layout === ExperienceZoneLayout.Video}\n              />\n            </bs-click-action>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}