{"file":"bs-youtube-video.entry.js","mappings":"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","names":[],"sources":["./src/components/organisms/youtube-video/youtube-video.data.ts","./src/components/organisms/youtube-video/youtube-video.scss?tag=bs-youtube-video&encapsulation=shadow","./src/components/organisms/youtube-video/youtube-video.tsx"],"sourcesContent":["export const playerApi = 'https://www.youtube.com/player_api';\n",".media {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  @include z-index('modal');\n}\n\n.youtube-video {\n  position: relative;\n  max-width: 100%;\n  height: 100%;\n  aspect-ratio: 16/9;\n  margin: 0 auto;\n  overflow: hidden;\n  writing-mode: vertical-lr;\n}\n\n.youtube-embed {\n  width: 100%;\n  height: 200%;\n  margin-top: -50%;\n}\n\n.youtube-thumbnail {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.youtube-thumbnail-button {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 1rem;\n  font-size: 2rem;\n  color: $white;\n  pointer-events: all;\n  border: 4px solid $white;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.is-disabled {\n  pointer-events: none;\n}\n\n.is-hidden {\n  display: none;\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { isEmpty } from '@springbokagency/stencil-base';\nimport { playerApi } from './youtube-video.data';\nimport { PlayerState, YoutubeControlUpdateEvent } from './youtube-video.types';\nimport { YoutubeControlClickEvent } from '../../molecules/youtube-control/youtube-control.types';\n\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady: () => void;\n    onYouTubePlayerAPIReady: () => void;\n  }\n}\n\n/**\n * The youtube video component.\n */\n@Component({\n  tag: 'bs-youtube-video',\n  styleUrl: 'youtube-video.scss',\n  shadow: true,\n})\nexport class BsYoutubeVideo {\n  private player: YT.Player;\n\n  private progressBarInterval: NodeJS.Timeout;\n\n  private videoElementRef: HTMLDivElement | HTMLIFrameElement;\n\n  private overlayRef: HTMLBsDarkOverlayElement;\n\n  /** States */\n  @State() playerState: PlayerState = null;\n\n  @State() currentTime: number;\n\n  /** Props */\n\n  /**\n   * Should the player be loaded inline?\n   */\n  @Prop() inline?: boolean = false;\n\n  /**\n   * The youtube video ID.\n   */\n  @Prop() videoId!: string;\n\n  /**\n   * Should the video be muted initially?\n   */\n  @Prop() mute?: boolean = false;\n\n  @Watch('mute')\n  handleMute(mute: boolean) {\n    if (mute) {\n      this.player.mute();\n    } else {\n      this.player.unMute();\n    }\n  }\n\n  /** Events */\n  /** Event for all user actions on the controller. */\n  @Event() bsYoutubeControllerUpdate: EventEmitter<YoutubeControlUpdateEvent>;\n\n  /** Listeners */\n  @Listen('bsYoutubeControllerClick', { target: 'window' })\n  bsYoutubeControllerClickHandler(e: CustomEvent<YoutubeControlClickEvent>) {\n    if (this.videoId === e.detail.id) {\n      switch (e.detail.action) {\n        case 'play':\n          if (e.detail.value === 1) {\n            this.player.playVideo();\n          } else {\n            this.player.pauseVideo();\n          }\n\n          break;\n        case 'mute':\n          this.mute = !this.mute;\n          break;\n\n        case 'fullscreen': {\n          this.player.getIframe().requestFullscreen();\n          break;\n        }\n\n        case 'progress-bar-input':\n          this.player.seekTo((e.detail.value / 100) * this.player.getDuration(), true);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  @Listen('bsYoutubeAPIReady', { target: 'window' })\n  bsYoutubeAPIReadyHandler() {\n    this.createPlayer();\n  }\n\n  /** methods */\n\n  private onPlayerReady = (e: any) => {\n    this.updateYoutubeController();\n    this.onPlayerStateChange(e);\n  };\n\n  private onPlayerStateChange = (e: YT.OnStateChangeEvent) => {\n    this.playerState = e.target.getPlayerState();\n\n    if (this.playerState === PlayerState.PLAYING) {\n      this.progressBarInterval = setInterval(this.calculateTime, 100);\n    } else if (this.playerState === PlayerState.UNSTARTED) {\n      this.player.playVideo();\n    } else if (this.playerState === PlayerState.ENDED) {\n      this.updateYoutubeController();\n      this.overlayRef?.closeOverlay();\n    } else {\n      this.calculateTime();\n      clearInterval(this.progressBarInterval);\n    }\n\n    this.updateYoutubeController();\n  };\n\n  private calculateTime = () => {\n    this.currentTime = (this.player.getCurrentTime() / this.player.getDuration()) * 100;\n    this.updateYoutubeController();\n  };\n\n  private updateYoutubeController = () => {\n    const { mute, playerState, currentTime } = this;\n\n    this.bsYoutubeControllerUpdate.emit({ id: this.videoId, mute, playerState, currentTime });\n  };\n\n  private isIosOrSafari = (): boolean => {\n    const { userAgent } = navigator;\n    const chromeAgent = userAgent.indexOf('Chrome') > -1;\n    let safariAgent = userAgent.indexOf('Safari') > -1;\n\n    if (chromeAgent && safariAgent) safariAgent = false;\n    // chrome on mac has match for both Chrome and Safari.\n\n    const match = !isEmpty(userAgent.match(/(iPad|iPhone|iPod)/g)) || safariAgent;\n\n    this.mute = match ? true : this.mute;\n\n    return match;\n  };\n\n  private createPlayer = () => {\n    this.player = new YT.Player(this.videoElementRef, {\n      width: '640',\n      height: '360',\n      videoId: this.videoId,\n      host: 'https://www.youtube.com',\n      playerVars: {\n        playsinline: 1,\n        controls: 0,\n        rel: 0,\n        mute: this.isIosOrSafari() ? 1 : +this.mute,\n        // mute by default on IOS devices or safari for otherwise the autoplay will not work.\n        autoplay: 1,\n      },\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange,\n      },\n    });\n  };\n\n  /** lifecycle hooks */\n  componentDidLoad() {\n    const tag = document.createElement('script');\n    const scripts = document.getElementsByTagName('script') as HTMLCollectionOf<HTMLScriptElement>;\n\n    tag.src = playerApi;\n\n    for (let i = 0; i < scripts.length; i += 1) {\n      if (scripts[i].src === playerApi) {\n        this.createPlayer();\n\n        return;\n      }\n    }\n\n    scripts[0].parentNode.insertBefore(tag, scripts[0]);\n\n    this.mute = this.isIosOrSafari() ? true : this.mute;\n  }\n\n  disconnectedCallback() {\n    this.player.destroy();\n  }\n\n  render() {\n    if (this.inline) {\n      return (\n        <div slot=\"media\" class=\"youtube-video\">\n          <div\n            ref={(el) => {\n              this.videoElementRef = el;\n            }}\n            class=\"youtube-embed\"\n            tabIndex={-1}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Host>\n        <bs-dark-overlay\n          class=\"media\"\n          ref={(el) => {\n            this.overlayRef = el;\n          }}\n        >\n          <div slot=\"media\" class=\"youtube-video\">\n            <div\n              ref={(el) => {\n                this.videoElementRef = el;\n              }}\n              class=\"youtube-embed\"\n              tabIndex={-1}\n            ></div>\n          </div>\n          <div slot=\"controller\" class=\"media-control\">\n            <bs-youtube-control mute={this.mute} videoId={this.videoId} />\n          </div>\n        </bs-dark-overlay>\n      </Host>\n    );\n  }\n}\n"],"version":3}