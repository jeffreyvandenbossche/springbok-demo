{"file":"bs-story-quote.entry.js","mappings":";;;;AAAA,MAAM,aAAa,GAAG,i8PAAi8P;;;;;;;;;;;;MCY18P,YAAY;;;;;;;;;EA2BvB,IAAI,iBAAiB;IACnB,OAAO,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;GACxC;EAED,MAAM;IACJ,MAAM,MAAM,GAAG;MACb,UAAU,EAAE,qBAAqB;MACjC,OAAO,EAAE,WAAW;MACpB,OAAO,EAAE;QACP,OAAO,EAAE,QAAQ;QACjB,IAAI,EAAE,IAAI,CAAC,UAAU;OACtB;MACD,IAAI,EAAE,IAAI,CAAC,IAAI;KAChB,CAAC;IAEF,QACE,EAAC,IAAI,QACH,kBAAY,KAAK,EAAC,YAAY,EAAC,IAAI,EAAE,IAAI,CAAC,MAAM,IAC9C,SAAG,KAAK,EAAC,YAAY,IACnB,gBAAU,KAAK,EAAC,MAAM,iBAAa,MAAM,EAAC,GAAG,EAAE,YAAY,CAAC,kBAAkB,CAAC,GAAI,CACjF,EACJ,SAAG,KAAK,EAAC,OAAO,UAAQ,IAAI,CAAC,IAAI,OAAW,EAC5C,WAAK,KAAK,EAAC,MAAM,IAEf,WAAK,KAAK,EAAC,cAAc,IACvB,8BAAU,KAAK,EAAC,OAAO,IAAK,IAAI,CAAC,iBAAiB,IAAE,KAAK,UAAG,CACxD,EAEN,UAAI,KAAK,EAAC,aAAa,IACrB,cAAK,IAAI,CAAC,UAAU,CAAM,EAC1B,cAAK,IAAI,CAAC,cAAc,CAAM,CAC3B,CACD,CACK,EAEb,cAAQ,IAAI,EAAC,qBAAqB,IAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAU,CAC/D,EACP;GACH;;AAtCD;EADC,OAAO,CAAC,aAAa,CAAC;qDAGtB;;;;;","names":[],"sources":["./src/components/atoms/story-quote/story-quote.scss?tag=bs-story-quote&encapsulation=shadow","./src/components/atoms/story-quote/story-quote.tsx"],"sourcesContent":[":host .blockquote {\n  margin: 0;\n\n  .quote-mark {\n    margin-bottom: rem(15);\n    text-align: center;\n  }\n\n  .icon {\n    min-width: rem(45);\n    height: rem(30);\n\n    @include mq('max', 'md') {\n      width: rem(25);\n      height: rem(15);\n    }\n  }\n\n  .quote {\n    margin-top: rem(10);\n    margin-bottom: rem(16);\n    font-size: font-size(large);\n    text-align: center;\n\n    @include mq('min', 'md') {\n      font-size: font-size(huge);\n    }\n  }\n}\n\n:host .author-image {\n  position: relative;\n  flex-shrink: 0;\n  width: rem(50);\n  height: rem(50);\n\n  overflow: hidden;\n  border-radius: 50%;\n\n  .image {\n    @include cover;\n  }\n\n  @include mq('max', 'md') {\n    width: rem(32);\n    height: rem(32);\n  }\n}\n\n:host .author-info {\n  dt {\n    font-size: font-size(default);\n    font-weight: font-weight(bold);\n    letter-spacing: font-spacing(loose);\n\n    @include mq('min', 'md') {\n      font-size: font-size(x-large);\n    }\n  }\n\n  dd {\n    margin: 0;\n    font-size: font-size(small);\n    color: $gray-700;\n\n    @include mq('min', 'md') {\n      font-size: font-size(medium);\n    }\n  }\n\n  @include mq('max', 'md') {\n    margin-top: rem(10);\n    text-align: center;\n  }\n}\n\n:host .info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: rem(16);\n\n  @include mq('min', 'md') {\n    flex-direction: row;\n    gap: rem(16);\n    margin-top: rem(25);\n  }\n}\n","import { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { Component, getAssetPath, h, Host, Prop } from '@stencil/core';\nimport { BsImage } from '../image/image';\n\n/**\n * The Quote component is used for indicating that a particular section of text is being taken from another website or other source.\n */\n@Component({\n  tag: 'bs-story-quote',\n  styleUrl: 'story-quote.scss',\n  shadow: true,\n})\nexport class BsStoryQuote {\n  /**\n   * The quote text copied from an external source.\n   */\n  @Prop() text!: string;\n\n  /**\n   * Author's name\n   */\n  @Prop() authorName: string;\n\n  /**\n   * Author's job position\n   */\n  @Prop() authorPosition: string;\n\n  /**\n   * A URL that designates a source document or message for the information quoted. Used for SEO purposes.\n   */\n  @Prop() source?: string;\n\n  /**\n   *  Prop for adding an image\n   */\n  @Prop() authorImage: BsImage | string;\n\n  @Memoize('authorImage')\n  get parsedAuthorImage(): BsImage {\n    return parseIfString(this.authorImage);\n  }\n\n  render() {\n    const schema = {\n      '@context': 'https://schema.org/',\n      '@type': 'Quotation',\n      creator: {\n        '@type': 'Person',\n        name: this.authorName,\n      },\n      text: this.text,\n    };\n\n    return (\n      <Host>\n        <blockquote class=\"blockquote\" cite={this.source}>\n          <p class=\"quote-mark\">\n            <ion-icon class=\"icon\" aria-hidden=\"true\" src={getAssetPath(`assets/quote.svg`)} />\n          </p>\n          <p class=\"quote\">&quot;{this.text}&quot;</p>\n          <div class=\"info\">\n            {/* Image */}\n            <div class=\"author-image\">\n              <bs-image class=\"image\" {...this.parsedAuthorImage} cover />\n            </div>\n            {/* Author info */}\n            <dl class=\"author-info\">\n              <dt>{this.authorName}</dt>\n              <dd>{this.authorPosition}</dd>\n            </dl>\n          </div>\n        </blockquote>\n\n        <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n      </Host>\n    );\n  }\n}\n"],"version":3}