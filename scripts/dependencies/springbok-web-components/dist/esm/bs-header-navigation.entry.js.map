{"file":"bs-header-navigation.entry.js","mappings":";;;;;;;AAAA,MAAM,mBAAmB,GAAG,qqQAAqqQ;;;;;;;;;;;;MCeprQ,kBAAkB;;;;;;EAa7B,IAAI,sBAAsB;IACxB,OAAO,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;GAC7C;;;;EAMD,gBAAgB;IACd,QAAQ,CAAC;MACP,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;KAChD,EAAE,GAAG,CAAC,EAAE,CAAC;GACX;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACH,cAAQ,KAAK,EAAC,mBAAmB,IAE/B,WAAK,KAAK,EAAC,KAAK,IACd,oBAAc,KAAK,EAAC,cAAc,EAAC,SAAS,UAC1C,WAAK,KAAK,EAAC,WAAW,IACpB,SAAG,IAAI,EAAC,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC,IACpD,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,IACtC,8BAAU,KAAK,EAAC,MAAM,IAAK,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAI,KAEzE,8BAAU,KAAK,EAAC,MAAM,IAAK,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAI,CACpE,CACC,CACA,EAEN,oCACa,aAAa,EACxB,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAC5B,IAAI,EAAC,mBAAmB,IAExB,eAAS,IAAI,EAAE,QAAQ,CAAC,IAAI,GAAI,CAChB,CACL,CACX,EAGN,WAAK,KAAK,EAAE,iBAAiB,IAAI,CAAC,mBAAmB,GAAG,YAAY,GAAG,EAAE,EAAE,IACzE,oBAAc,KAAK,EAAC,cAAc,EAAC,SAAS,UAC1C,WAAK,KAAK,EAAC,MAAM,IACf,SAAG,IAAI,EAAC,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,CAAC,IACrD,8BAAU,KAAK,EAAC,MAAM,IAAK,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAI,CACnE,CACA,EAGN,WAAK,KAAK,EAAC,UAAU,IAClB,IAAI,CAAC,sBAAsB,CAAC,YAAY;MACvC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,IAAI;MAC7C,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,KACrC,iCAAe,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAI,CAC5D,EACH,oCACa,aAAa,EACxB,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAC5B,IAAI,EAAC,mBAAmB,IAExB,eAAS,IAAI,EAAE,QAAQ,CAAC,IAAI,GAAI,CAChB,CACd,CACO,CACX,CACC,CACJ,EACP;GACH;;AAtED;EADC,OAAO,CAAC,kBAAkB,CAAC;gEAG3B;;;;;","names":[],"sources":["./src/components/organisms/header-navigation/header-navigation.scss?tag=bs-header-navigation&encapsulation=shadow","./src/components/organisms/header-navigation/header-navigation.tsx"],"sourcesContent":[":host {\n  --navigation--height: 60px;\n  --image--max-height: 40px;\n  --image--max-width: 130px;\n  --image--fit: 'contain';\n\n  @include mq('min', 'md') {\n    --navigation--height: 92px;\n    --image--max-height: 60px;\n    --image--max-width: 200px;\n  }\n}\n\n:host .header-navigation {\n  @include z-index('header');\n\n  position: relative;\n  height: var(--navigation--height);\n}\n\n:host .bar {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: var(--navigation--height);\n  background-color: $white;\n}\n\n:host .sticky-header {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: var(--navigation--height);\n  background-color: $white;\n  border-bottom: 1px solid $light-gray;\n\n  transition: $transition-smooth;\n  transition-property: transform;\n  transform: translateY(-110%);\n}\n\n:host .flex-between {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n:host .flex-end {\n  display: flex;\n  gap: rem(40);\n  align-items: center;\n  justify-content: flex-end;\n}\n\n:host .is-visible {\n  transform: translateY(0);\n}\n\n:host .logo {\n  padding: rem(10);\n  padding-left: 0;\n}\n\n:host .menu-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: rem(10);\n  padding-right: 0;\n\n  font: inherit;\n  line-height: 1;\n  color: $black;\n  text-transform: uppercase;\n\n  pointer-events: visible;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n  border-radius: rem(5);\n\n  @include mq('max', 'md') {\n    right: rem(25);\n  }\n\n  .menu-button-text {\n    @include mq('max', 'md') {\n      @include sr-only;\n    }\n  }\n\n  > bs-icon {\n    margin-left: rem(7);\n    font-size: rem(21);\n\n    @include mq('max', 'md') {\n      font-size: rem(30);\n    }\n  }\n}\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { throttle } from '../../../utils/throttle';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\nimport { HeaderNavigation } from '../overlay-menu/overlay-menu.types';\n\n/**\n * Header navigation component.\n */\n@Component({\n  tag: 'bs-header-navigation',\n  styleUrl: 'header-navigation.scss',\n  shadow: true,\n})\nexport class BsHeaderNavigation {\n  /**\n   * State\n   */\n\n  @State() stickyMenuIsVisible: boolean;\n\n  /**\n   * The .\n   */\n  @Prop() headerNavigation: HeaderNavigation | string;\n\n  @Memoize('headerNavigation')\n  get parsedHeaderNavigation(): HeaderNavigation {\n    return parseIfString(this.headerNavigation);\n  }\n\n  /**\n   * Listeners\n   */\n  @Listen('scroll', { target: 'window' })\n  handleBodyScroll() {\n    throttle(() => {\n      this.stickyMenuIsVisible = window.scrollY > 20;\n    }, 500)();\n  }\n\n  render() {\n    return (\n      <Host>\n        <header class=\"header-navigation\">\n          {/* Main Logo */}\n          <div class=\"bar\">\n            <bs-container class=\"flex-between\" contained>\n              <div class=\"main-logo\">\n                <a href=\"/\" tabIndex={this.stickyMenuIsVisible ? -1 : 0}>\n                  {compareBreakpoint('max', Breakpoint.md) ? (\n                    <bs-image class=\"logo\" {...this.parsedHeaderNavigation.mobileMainLogo} />\n                  ) : (\n                    <bs-image class=\"logo\" {...this.parsedHeaderNavigation.mainLogo} />\n                  )}\n                </a>\n              </div>\n              {/* Menu button */}\n              <bs-click-action\n                tag-class={`menu-button`}\n                value={this.headerNavigation}\n                name=\"open-overlay-menu\"\n              >\n                <bs-icon name={IconName.Menu} />\n              </bs-click-action>\n            </bs-container>\n          </div>\n\n          {/* Sticky header */}\n          <div class={`sticky-header ${this.stickyMenuIsVisible ? 'is-visible' : ''}`}>\n            <bs-container class=\"flex-between\" contained>\n              <div class=\"logo\">\n                <a href=\"/\" tabIndex={this.stickyMenuIsVisible ? 0 : -1}>\n                  <bs-image class=\"logo\" {...this.parsedHeaderNavigation.stickyLogo} />\n                </a>\n              </div>\n\n              {/* Menu button */}\n              <div class=\"flex-end\">\n                {this.parsedHeaderNavigation.stickyButton &&\n                  this.parsedHeaderNavigation.stickyButton.text &&\n                  compareBreakpoint('min', Breakpoint.md) && (\n                    <bs-button {...this.parsedHeaderNavigation.stickyButton} />\n                  )}\n                <bs-click-action\n                  tag-class={`menu-button`}\n                  value={this.headerNavigation}\n                  name=\"open-overlay-menu\"\n                >\n                  <bs-icon name={IconName.Menu} />\n                </bs-click-action>\n              </div>\n            </bs-container>\n          </div>\n        </header>\n      </Host>\n    );\n  }\n}\n"],"version":3}