{"file":"memoize-43914bec.js","mappings":"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","names":[],"sources":["./node_modules/memoize-one/dist/memoize-one.esm.js","./node_modules/@springbokagency/stencil-base/dist/collection/decorators/memoize.js"],"sourcesContent":["var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import memoizeOne from 'memoize-one';\n/**\n * Decorator to memoize (static) methods and getters.\n *\n * @param {string|array} props Optional, single or array of property names to be used for cache\n *   invalidation if the method doesn't have any arguments.\n *\n * @example\n```\nimport { Memoize } from '@springbokagency/stencil-base';\n\nclass ExampleGetter {\n  stringified = '{\"foo\": \"bar\"}';\n\n  @Memoize('stringified')\n  get parsed() {\n    return JSON.parse(this.stringified);\n  }\n\n  constructor() {\n    this.parsed; // cache miss: { foo: 'bar' }\n    this.parsed; // cache hit: { foo: 'bar' }\n    this.stringified = '{\"foo\": \"baz\"}';\n    this.parsed; // cache miss: { foo: 'baz' }\n  }\n}\n\nclass ExampleMethod {\n  numberA = 1;\n  numberB = 2;\n\n  constructor() {\n    this.addition() // cache miss: 3\n    this.addition() // cache hit: 3\n    this.numberA = 2;\n    this.addition() // cache miss: 4\n  }\n\n  @Memoize(['numberA', 'numberB'])\n  addition() {\n    return this.numberA + this.numberB;\n  }\n}\n\nclass ExampleStaticMethod {\n  @Memoize()\n  static addition(numberA, numberB) {\n    return numberA + numberB;\n  }\n\n  constructor() {\n    ExampleStaticMethod.addition(1, 2) // cache miss: 3\n    ExampleStaticMethod.addition(1, 2) // cache hit: 3\n    ExampleStaticMethod.addition(2, 2) // cache miss: 4\n  }\n}\n```\n */\nexport function Memoize(props = []) {\n  return (_, propertyKey, descriptor) => {\n    let descriptorProp;\n    if ('value' in descriptor) {\n      descriptorProp = 'value';\n    }\n    else if ('get' in descriptor) {\n      descriptorProp = 'get';\n    }\n    else {\n      throw new TypeError('The decorated value must be a (static) method or a getter.');\n    }\n    const descriptorFunc = descriptor[descriptorProp];\n    /**\n     * Memoize the wrapper of the method/getter to pass the cache key as first argument.\n     * __ is used here solely for determining the memoize cache key.\n     */\n    const memoizedFunc = memoizeOne((__, thisArg, arguments_) => {\n      const argsArray = arguments_.length > 0 ? arguments_ : null;\n      return descriptorFunc.apply(thisArg, argsArray);\n    }, (newArgs, lastArgs) => newArgs[0] === lastArgs[0]);\n    // replace the method/getter by the memoized method/getter\n    // eslint-disable-next-line no-param-reassign, func-names\n    descriptor[descriptorProp] = function (...arguments_) {\n      let cacheKeyArr;\n      // set the cache key array\n      if (arguments_.length > 0) {\n        cacheKeyArr = arguments_;\n      }\n      else if (Array.isArray(props) && props.length > 0) {\n        cacheKeyArr = props.map((prop) => this[prop]);\n      }\n      else if (typeof props === 'string' && props !== '') {\n        cacheKeyArr = [this[props]];\n      }\n      else {\n        // no cache invalidation\n        cacheKeyArr = [propertyKey];\n      }\n      return memoizedFunc(JSON.stringify(cacheKeyArr), this, arguments_);\n    };\n    return descriptor;\n  };\n}\n//# sourceMappingURL=memoize.js.map\n"],"version":3}