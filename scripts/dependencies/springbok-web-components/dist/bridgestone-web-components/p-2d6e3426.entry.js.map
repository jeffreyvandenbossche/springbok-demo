{"version":3,"names":["countryCardCss","BsCountryCard","parsedFlag","parseIfString","this","flag","parsedTitle","countryTitle","parsedBrands","brands","render","h","Host","class","Object","assign","map","brand","href","label","__decorate","Memoize"],"sources":["./src/components/molecules/country-link/country-card.scss?tag=bs-country-card&encapsulation=shadow","./src/components/molecules/country-link/country-card.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n}\n\n:host .flag {\n  width: 16px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.3);\n}\n\n:host .title {\n  margin-left: rem(20);\n}\n\n:host .brand {\n  @include font(body-small);\n  position: relative;\n  padding-left: rem(30);\n\n  &:first-child {\n    padding-left: 0;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  &:before {\n    position: absolute;\n    top: 0;\n    left: rem(13);\n    content: '/';\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsImage } from '../../atoms/image/image';\nimport { BsTitle } from '../../atoms/title/title';\n\n/**\n * Country link card component.\n */\n@Component({\n  tag: 'bs-country-card',\n  styleUrl: 'country-card.scss',\n  shadow: true,\n})\nexport class BsCountryCard {\n  /** Props */\n  /**\n   * The flag image.\n   */\n  @Prop() flag: BsImage | string;\n\n  @Memoize('flag')\n  get parsedFlag(): BsImage {\n    return parseIfString(this.flag);\n  }\n\n  /**\n   * The country name.\n   */\n  @Prop() countryTitle: BsTitle | string;\n\n  @Memoize('countryTitle')\n  get parsedTitle(): BsTitle {\n    return parseIfString(this.countryTitle);\n  }\n\n  /**\n   * The list of links to be rendered.\n   */\n  @Prop() brands: { label: string; href: string }[] | string;\n\n  @Memoize('brands')\n  get parsedBrands(): { label: string; href: string }[] {\n    return parseIfString(this.brands);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"country-card\">\n          <div class=\"flex align-center\">\n            <div class=\"flag\">\n              <bs-image {...this.parsedFlag} />\n            </div>\n            <div class=\"title\">\n              <bs-title {...this.parsedTitle} />\n            </div>\n          </div>\n          <div class=\"flex\">\n            {this.parsedBrands.map((brand) => (\n              <bs-click-action class=\"brand\" href={brand.href}>\n                {brand.label}\n              </bs-click-action>\n            ))}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"0HAAA,MAAMA,EAAiB,ogO,iXCaVC,EAAa,M,+FAQpBC,iBACF,OAAOC,EAAcC,KAAKC,K,CASxBC,kBACF,OAAOH,EAAcC,KAAKG,a,CASxBC,mBACF,OAAOL,EAAcC,KAAKK,O,CAG5BC,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,QACTF,EAAA,WAAAG,OAAAC,OAAA,GAAcX,KAAKF,cAErBS,EAAA,OAAKE,MAAM,SACTF,EAAA,WAAAG,OAAAC,OAAA,GAAcX,KAAKE,gBAGvBK,EAAA,OAAKE,MAAM,QACRT,KAAKI,aAAaQ,KAAKC,GACtBN,EAAA,mBAAiBE,MAAM,QAAQK,KAAMD,EAAMC,MACxCD,EAAME,W,GAvCrBC,EAAA,CADCC,EAAQ,S,+BAWTD,EAAA,CADCC,EAAQ,iB,gCAWTD,EAAA,CADCC,EAAQ,W"}