{"version":3,"names":["darkThemeOverlayCss","BsDarkOverlay","this","onResize","isMobile","compareBreakpoint","Breakpoint","lg","throttleMethod","throttle","parsedLogo","parseIfString","logo","handleScreenResized","async","modalRef","close","previousSlide","nextSlide","handleFocus","render","h","Host","ref","el","modalId","BaseModalId","Media","transitionType","class","contained","name","IconName","BMark","tagClass","onBsClickAction","closeOverlay","bind","Close","mobileFullWidth","screens","disabled","CaretForward","isEmpty","mainTitle","text","src","altText","__decorate","Memoize","youtubeControlCss","BsYoutubeControl","onButtonClick","e","bsYoutubeControllerClick","emit","id","videoId","action","detail","value","onSliderChange","target","valueAsNumber","PlayerState","UNSTARTED","bsYoutubeControllerUpdateHandler","mute","playerState","currentTime","videoActive","PLAYING","PAUSED","BUFFERING","includes","Pause","Play","onInput","type","min","max","step","Mute","Volume","Resize"],"sources":["./src/components/organisms/dark-theme-overlay/dark-theme-overlay.scss?tag=bs-dark-overlay","./src/components/organisms/dark-theme-overlay/dark-theme-overlay.tsx","./src/components/molecules/youtube-control/youtube-control.scss?tag=bs-youtube-control&encapsulation=shadow","./src/components/molecules/youtube-control/youtube-control.tsx"],"sourcesContent":["// Utilizing the BEM methodology due to the disabling of shadow DOM for this component.\n\n.dark-overlay {\n  width: 100%;\n  height: 100%;\n  color: $white;\n  background-color: $gray-50;\n\n  .dark-overlay__content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    max-width: rem(1296);\n    height: 100%;\n    margin: 0 auto;\n  }\n\n  .dark-overlay__head {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: rem(16) 0;\n    font-size: 1.5rem;\n    color: $white;\n\n    @include mq('max', 'lg') {\n      @media (orientation: landscape) {\n        @include z-index('header');\n        position: absolute;\n        top: 0;\n        left: 0;\n        box-sizing: border-box;\n        max-width: 100% !important;\n        padding: rem(10) rem(20);\n        margin: 0 !important;\n        background-color: rgba($color: $white, $alpha: 0.1);\n      }\n    }\n\n    @include mq('min', 'lg') {\n      position: static;\n      margin: rem(32) 0;\n    }\n  }\n\n  .dark-overlay__brand-icon {\n    font-size: rem(45);\n\n    @include mq('max', 'md') {\n      font-size: 2rem;\n    }\n  }\n\n  .dark-overlay__close-icon {\n    padding: rem(6);\n    font-size: rem(20);\n    color: currentColor;\n    background-color: $gray-200;\n    border: 0;\n    border-radius: 50%;\n    outline: none;\n\n    @include mq('min', 'md') {\n      padding: rem(8);\n      font-size: rem(24);\n    }\n\n    &:focus {\n      background-color: $gray-400;\n    }\n  }\n\n  .dark-overlay__navigation-icon {\n    position: absolute;\n    top: 50%;\n    padding: rem(15);\n    font-size: rem(24);\n    color: currentColor;\n    color: $white;\n    background-color: $gray-200;\n    border: 0;\n    border-radius: 50%;\n    @include z-index('base');\n    outline: none;\n\n    &:focus {\n      background-color: $gray-400;\n    }\n\n    &--previous {\n      left: rem(-12);\n      transform: rotate(180deg) translateY(50%);\n      transform-origin: left center;\n    }\n\n    &--next {\n      right: rem(-12);\n      transform: translateY(-50%) translateX(100%);\n    }\n\n    @include mq('max', 'xl') {\n      display: none;\n    }\n  }\n\n  .dark-overlay__body {\n    position: relative;\n    flex: 1 1 500px;\n    min-height: 1px;\n\n    @include mq('max', 'lg') {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      overflow: scroll;\n    }\n\n    @include mq('min', 'xl') {\n      flex: 0 1 679px;\n    }\n  }\n\n  .dark-overlay__footer {\n    display: flex;\n    gap: rem(20);\n    align-items: flex-end;\n    justify-content: space-between;\n    margin: rem(16) 0;\n    color: $white;\n\n    @include mq('max', 'lg') {\n      @media (orientation: landscape) {\n        @include z-index('header');\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        box-sizing: border-box;\n        max-width: 100% !important;\n        padding: rem(10) rem(20);\n        margin: 0 !important;\n        background-color: rgba($color: $white, $alpha: 0.1);\n      }\n    }\n\n    @include mq('min', 'lg') {\n      box-sizing: border-box;\n      gap: rem(80);\n      align-items: center;\n      margin: rem(66) 0 rem(32);\n    }\n  }\n\n  .dark-overlay__title {\n    @include font('body-default');\n  }\n\n  .dark-overlay__logo {\n    max-width: 120px;\n    max-height: 25px;\n\n    @include mq('min', 'md') {\n      max-width: 200px;\n      max-height: 55px;\n    }\n  }\n}\n\n.media-container {\n  width: 100%;\n  height: 100%;\n}\n\n.footer-main {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  gap: rem(14);\n}\n","import { Component, Host, Listen, Method, Prop, State, h } from '@stencil/core';\nimport { Memoize, isEmpty, parseIfString } from '@springbokagency/stencil-base';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { BaseModalId } from '../base-modal/base-modal.types';\nimport { BsImage } from '../../atoms/image/image';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\nimport { throttle } from '../../../utils/throttle';\n\n/**\n * Dark-theme overlay component.\n */\n@Component({\n  tag: 'bs-dark-overlay',\n  styleUrl: 'dark-theme-overlay.scss',\n  shadow: false, // no shadow DOM to make focus-trap work with slots\n})\nexport class BsDarkOverlay {\n  private modalRef: HTMLBsBaseModalElement;\n\n  /** States */\n  @State() isMobile: boolean = compareBreakpoint('max', Breakpoint.lg);\n\n  /** Props */\n  /**\n   * The title of the carousel displayed in the footer.\n   */\n  @Prop() mainTitle?: string;\n\n  /**\n   * Does the content contain multiple screens?\n   */\n  @Prop() screens?: boolean = false;\n\n  /**\n   * The logo to be displayed in the footer.\n   */\n  @Prop() logo: BsImage | string;\n\n  @Memoize('logo')\n  get parsedLogo(): BsImage {\n    return parseIfString(this.logo);\n  }\n\n  /** Listeners */\n  @Listen('resize', { target: 'window' })\n  handleScreenResized() {\n    this.throttleMethod();\n  }\n\n  /** Methods */\n  private onResize = () => {\n    this.isMobile = compareBreakpoint('max', Breakpoint.lg);\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  /**\n   * This method triggers the close method on the modal.\n   */\n  @Method()\n  async closeOverlay() {\n    this.modalRef.close();\n  }\n\n  /**\n   * This method triggers the previous slide method on the modal.\n   */\n  @Method()\n  async previousSlide() {\n    this.modalRef.previousSlide();\n  }\n\n  /**\n   * This method triggers the next slide method on the modal.\n   */\n  @Method()\n  async nextSlide() {\n    this.modalRef.nextSlide();\n  }\n\n  /**\n   * This method triggers the handle focus method on the modal.\n   */\n  @Method()\n  async focusTrap() {\n    this.modalRef.handleFocus();\n  }\n\n  render() {\n    return (\n      <Host>\n        <bs-base-modal\n          ref={(el) => {\n            this.modalRef = el;\n          }}\n          modalId={BaseModalId.Media}\n          transitionType=\"fade\"\n        >\n          <div class=\"dark-overlay\">\n            <div class=\"dark-overlay__content\">\n              {/* Head */}\n              <bs-container class=\"dark-overlay__head\" contained={true}>\n                <bs-icon class=\"dark-overlay__brand-icon\" name={IconName.BMark} />\n                <bs-click-action\n                  name=\"close-dark-overlay\"\n                  tagClass=\"dark-overlay__close-icon\"\n                  onBsClickAction={this.closeOverlay.bind(this)}\n                >\n                  <bs-icon name={IconName.Close} />\n                </bs-click-action>\n              </bs-container>\n\n              {/* Body */}\n              <bs-container class=\"dark-overlay__body\" mobileFullWidth={true} contained={true}>\n                {this.screens && (\n                  <bs-click-action\n                    name=\"previous-media\"\n                    tagClass=\"dark-overlay__navigation-icon dark-overlay__navigation-icon--previous\"\n                    onBsClickAction={this.previousSlide.bind(this)}\n                    disabled={this.isMobile}\n                  >\n                    <bs-icon name={IconName.CaretForward} />\n                  </bs-click-action>\n                )}\n                <div class=\"media-container\">\n                  <slot name=\"media\"></slot>\n                </div>\n                {this.screens && (\n                  <bs-click-action\n                    name=\"next-media\"\n                    tagClass=\"dark-overlay__navigation-icon dark-overlay__navigation-icon--next\"\n                    onBsClickAction={this.nextSlide.bind(this)}\n                    disabled={this.isMobile}\n                  >\n                    <bs-icon name={IconName.CaretForward} />\n                  </bs-click-action>\n                )}\n              </bs-container>\n\n              {/* Footer */}\n              <bs-container class=\"dark-overlay__footer\" contained={true}>\n                <div class=\"footer-main\">\n                  {!isEmpty(this.mainTitle) && (\n                    <bs-text text={this.mainTitle} class=\"dark-overlay__title\" />\n                  )}\n                  <slot name=\"controller\" />\n                </div>\n                {!isEmpty(this.parsedLogo) && (\n                  <bs-image\n                    class=\"dark-overlay__logo\"\n                    src={this.parsedLogo.src}\n                    alt-text={this.parsedLogo.altText}\n                  />\n                )}\n              </bs-container>\n            </div>\n          </div>\n        </bs-base-modal>\n      </Host>\n    );\n  }\n}\n",":host .youtube-control {\n  background-color: $gray-200;\n  border-radius: 5px;\n\n  @include mq('max', 'md') {\n    width: 100%;\n  }\n}\n\n:host .media-control-bar {\n  display: flex;\n  gap: rem(8);\n  align-items: center;\n  height: 40px;\n  padding: 0 8px;\n\n  color: $white;\n\n  @include mq('max', 'md') {\n    gap: 1rem;\n    height: 54px;\n  }\n}\n\n:host .youtube-control-button {\n  font-size: rem(16);\n  color: $white;\n  background: transparent;\n  border: 0;\n  outline-color: $white;\n\n  @include mq('max', 'md') {\n    font-size: rem(19);\n  }\n}\n\n:host .slider {\n  width: 100%;\n  height: 3px;\n  appearance: none;\n  outline-color: $white;\n\n  &::-webkit-slider-thumb {\n    width: 12px;\n    height: 12px;\n    appearance: none;\n    cursor: grabbing;\n    background: $primary;\n    border: 2px solid $white;\n    border-radius: 50%;\n  }\n\n  &:disabled {\n    background-color: $gray-400;\n\n    &::-webkit-slider-thumb {\n      cursor: default;\n    }\n  }\n}\n\n:host bs-button {\n  font-size: font-size(large);\n  line-height: 0;\n}\n\n:host bs-icon {\n  font-size: rem(24);\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { isEmpty } from '@springbokagency/stencil-base';\nimport {\n  PlayerState,\n  YoutubeControlUpdateEvent,\n} from '../../organisms/youtube-video/youtube-video.types';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { BsClickActionCustomEvent, ClickActionEvent } from '../../../components';\nimport { YoutubeControlClickEvent } from './youtube-control.types';\n\n/**\n * Youtube controls component.\n */\n@Component({\n  tag: 'bs-youtube-control',\n  styleUrl: 'youtube-control.scss',\n  shadow: true,\n})\nexport class BsYoutubeControl {\n  @State() videoActive: boolean = false;\n\n  /** Props */\n  /** The video ID the controller belongs to. */\n  @Prop() videoId!: string;\n\n  /** The playing state of the youtube Player. */\n  @Prop() playerState?: PlayerState = PlayerState.UNSTARTED;\n\n  /** Is the video muted. */\n  @Prop() mute?: boolean = true;\n\n  /** The video current progress time. */\n  @Prop() currentTime?: number = 0;\n\n  /** Events */\n  /**\n   * Youtube control event\n   */\n  @Event() bsYoutubeControllerClick: EventEmitter<YoutubeControlClickEvent>;\n\n  /** Listeners */\n  @Listen('bsYoutubeControllerUpdate', { target: 'window' })\n  bsYoutubeControllerUpdateHandler(e: CustomEvent<YoutubeControlUpdateEvent>) {\n    if (this.videoId === e.detail.id) {\n      this.mute = e.detail.mute;\n      this.playerState = e.detail.playerState;\n      this.currentTime = isEmpty(e.detail.currentTime) ? 0 : e.detail.currentTime;\n      this.videoActive = [PlayerState.PLAYING, PlayerState.PAUSED, PlayerState.BUFFERING].includes(\n        e.detail.playerState\n      );\n    }\n  }\n\n  /** Methods */\n  private onButtonClick = (e: BsClickActionCustomEvent<ClickActionEvent>) => {\n    this.bsYoutubeControllerClick.emit({\n      id: this.videoId,\n      action: e.detail.name,\n      value: e.detail.value,\n    });\n  };\n\n  private onSliderChange = (e: InputEvent) => {\n    const el = e.target as HTMLInputElement;\n\n    this.bsYoutubeControllerClick.emit({\n      id: this.videoId,\n      action: 'progress-bar-input',\n      value: el.valueAsNumber,\n    });\n  };\n\n  render() {\n    return (\n      <Host>\n        <div class=\"youtube-control\">\n          <div class=\"media-control-bar\">\n            <bs-click-action\n              name=\"play\"\n              tagClass=\"youtube-control-button\"\n              onBsClickAction={this.onButtonClick}\n              value={\n                this.playerState === PlayerState.PLAYING ? PlayerState.PAUSED : PlayerState.PLAYING\n              }\n            >\n              <bs-icon\n                name={\n                  [PlayerState.PLAYING, PlayerState.BUFFERING].includes(this.playerState)\n                    ? IconName.Pause\n                    : IconName.Play\n                }\n              />\n            </bs-click-action>\n            <input\n              onInput={this.onSliderChange}\n              value={this.currentTime}\n              type=\"range\"\n              id=\"vol\"\n              name=\"vol\"\n              min=\"0\"\n              max=\"100\"\n              class=\"slider\"\n              step=\"0.1\"\n              disabled={!this.videoActive}\n            ></input>\n            <bs-click-action\n              name=\"mute\"\n              tagClass=\"youtube-control-button\"\n              onBsClickAction={(e) => {\n                this.mute = !this.mute;\n                this.onButtonClick(e);\n              }}\n            >\n              <bs-icon name={this.mute ? IconName.Mute : IconName.Volume} />\n            </bs-click-action>\n\n            <bs-click-action\n              name=\"fullscreen\"\n              tagClass=\"youtube-control-button\"\n              onBsClickAction={this.onButtonClick}\n              disabled={!this.videoActive}\n            >\n              <bs-icon name={IconName.Resize} />\n            </bs-click-action>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}