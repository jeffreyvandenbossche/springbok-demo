{"version":3,"names":["safeIsNaN","Number","isNaN","ponyfill","value","isEqual","first","second","areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","cache","memoized","newArgs","_i","arguments","lastThis","this","lastArgs","lastResult","apply","clear","Memoize","props","_","propertyKey","descriptor","descriptorProp","TypeError","descriptorFunc","memoizedFunc","__","thisArg","arguments_","argsArray","cacheKeyArr","Array","isArray","map","prop","JSON","stringify"],"sources":["./node_modules/memoize-one/dist/memoize-one.esm.js","./node_modules/@springbokagency/stencil-base/dist/collection/decorators/memoize.js"],"sourcesContent":["var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import memoizeOne from 'memoize-one';\n/**\n * Decorator to memoize (static) methods and getters.\n *\n * @param {string|array} props Optional, single or array of property names to be used for cache\n *   invalidation if the method doesn't have any arguments.\n *\n * @example\n```\nimport { Memoize } from '@springbokagency/stencil-base';\n\nclass ExampleGetter {\n  stringified = '{\"foo\": \"bar\"}';\n\n  @Memoize('stringified')\n  get parsed() {\n    return JSON.parse(this.stringified);\n  }\n\n  constructor() {\n    this.parsed; // cache miss: { foo: 'bar' }\n    this.parsed; // cache hit: { foo: 'bar' }\n    this.stringified = '{\"foo\": \"baz\"}';\n    this.parsed; // cache miss: { foo: 'baz' }\n  }\n}\n\nclass ExampleMethod {\n  numberA = 1;\n  numberB = 2;\n\n  constructor() {\n    this.addition() // cache miss: 3\n    this.addition() // cache hit: 3\n    this.numberA = 2;\n    this.addition() // cache miss: 4\n  }\n\n  @Memoize(['numberA', 'numberB'])\n  addition() {\n    return this.numberA + this.numberB;\n  }\n}\n\nclass ExampleStaticMethod {\n  @Memoize()\n  static addition(numberA, numberB) {\n    return numberA + numberB;\n  }\n\n  constructor() {\n    ExampleStaticMethod.addition(1, 2) // cache miss: 3\n    ExampleStaticMethod.addition(1, 2) // cache hit: 3\n    ExampleStaticMethod.addition(2, 2) // cache miss: 4\n  }\n}\n```\n */\nexport function Memoize(props = []) {\n  return (_, propertyKey, descriptor) => {\n    let descriptorProp;\n    if ('value' in descriptor) {\n      descriptorProp = 'value';\n    }\n    else if ('get' in descriptor) {\n      descriptorProp = 'get';\n    }\n    else {\n      throw new TypeError('The decorated value must be a (static) method or a getter.');\n    }\n    const descriptorFunc = descriptor[descriptorProp];\n    /**\n     * Memoize the wrapper of the method/getter to pass the cache key as first argument.\n     * __ is used here solely for determining the memoize cache key.\n     */\n    const memoizedFunc = memoizeOne((__, thisArg, arguments_) => {\n      const argsArray = arguments_.length > 0 ? arguments_ : null;\n      return descriptorFunc.apply(thisArg, argsArray);\n    }, (newArgs, lastArgs) => newArgs[0] === lastArgs[0]);\n    // replace the method/getter by the memoized method/getter\n    // eslint-disable-next-line no-param-reassign, func-names\n    descriptor[descriptorProp] = function (...arguments_) {\n      let cacheKeyArr;\n      // set the cache key array\n      if (arguments_.length > 0) {\n        cacheKeyArr = arguments_;\n      }\n      else if (Array.isArray(props) && props.length > 0) {\n        cacheKeyArr = props.map((prop) => this[prop]);\n      }\n      else if (typeof props === 'string' && props !== '') {\n        cacheKeyArr = [this[props]];\n      }\n      else {\n        // no cache invalidation\n        cacheKeyArr = [propertyKey];\n      }\n      return memoizedFunc(JSON.stringify(cacheKeyArr), this, arguments_);\n    };\n    return descriptor;\n  };\n}\n//# sourceMappingURL=memoize.js.map\n"],"mappings":"AAAA,IAAIA,EAAYC,OAAOC,OACnB,SAASC,EAASC,GACd,cAAcA,IAAU,UAAYA,IAAUA,CACtD,EACA,SAASC,EAAQC,EAAOC,GACpB,GAAID,IAAUC,EAAQ,CAClB,OAAO,IACf,CACI,GAAIP,EAAUM,IAAUN,EAAUO,GAAS,CACvC,OAAO,IACf,CACI,OAAO,KACX,CACA,SAASC,EAAeC,EAAWC,GAC/B,GAAID,EAAUE,SAAWD,EAAWC,OAAQ,CACxC,OAAO,KACf,CACI,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAUE,OAAQC,IAAK,CACvC,IAAKP,EAAQI,EAAUG,GAAIF,EAAWE,IAAK,CACvC,OAAO,KACnB,CACA,CACI,OAAO,IACX,CAEA,SAASC,EAAWC,EAAUT,GAC1B,GAAIA,SAAiB,EAAG,CAAEA,EAAUG,CAAe,CACnD,IAAIO,EAAQ,KACZ,SAASC,IACL,IAAIC,EAAU,GACd,IAAK,IAAIC,EAAK,EAAGA,EAAKC,UAAUR,OAAQO,IAAM,CAC1CD,EAAQC,GAAMC,UAAUD,EACpC,CACQ,GAAIH,GAASA,EAAMK,WAAaC,MAAQhB,EAAQY,EAASF,EAAMO,UAAW,CACtE,OAAOP,EAAMQ,UACzB,CACQ,IAAIA,EAAaT,EAASU,MAAMH,KAAMJ,GACtCF,EAAQ,CACJQ,WAAYA,EACZD,SAAUL,EACVG,SAAUC,MAEd,OAAOE,CACf,CACIP,EAASS,MAAQ,SAASA,IACtBV,EAAQ,IAChB,EACI,OAAOC,CACX,CCUO,SAASU,EAAQC,EAAQ,IAC9B,MAAO,CAACC,EAAGC,EAAaC,KACtB,IAAIC,EACJ,GAAI,UAAWD,EAAY,CACzBC,EAAiB,OACvB,MACS,GAAI,QAASD,EAAY,CAC5BC,EAAiB,KACvB,KACS,CACH,MAAM,IAAIC,UAAU,6DAC1B,CACI,MAAMC,EAAiBH,EAAWC,GAKlC,MAAMG,EAAerB,GAAW,CAACsB,EAAIC,EAASC,KAC5C,MAAMC,EAAYD,EAAW1B,OAAS,EAAI0B,EAAa,KACvD,OAAOJ,EAAeT,MAAMY,EAASE,EAAU,IAC9C,CAACrB,EAASK,IAAaL,EAAQ,KAAOK,EAAS,KAGlDQ,EAAWC,GAAkB,YAAaM,GACxC,IAAIE,EAEJ,GAAIF,EAAW1B,OAAS,EAAG,CACzB4B,EAAcF,CACtB,MACW,GAAIG,MAAMC,QAAQd,IAAUA,EAAMhB,OAAS,EAAG,CACjD4B,EAAcZ,EAAMe,KAAKC,GAAStB,KAAKsB,IAC/C,MACW,UAAWhB,IAAU,UAAYA,IAAU,GAAI,CAClDY,EAAc,CAAClB,KAAKM,GAC5B,KACW,CAEHY,EAAc,CAACV,EACvB,CACM,OAAOK,EAAaU,KAAKC,UAAUN,GAAclB,KAAMgB,EAC7D,EACI,OAAOP,CAAU,CAErB,Q"}