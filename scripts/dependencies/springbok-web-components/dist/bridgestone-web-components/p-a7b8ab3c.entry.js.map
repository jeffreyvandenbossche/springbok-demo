{"version":3,"names":["dateCss","BsDate","checkDateFormat","regex","this","isDateValid","test","date","checkLanguageCodeFormat","isLanguageCodeValid","languageIsoCode","renderDate","Date","locale","options","year","month","day","toLocaleDateString","componentWillRender","render","h","Host","class","isWhite"],"sources":["./src/components/atoms/date/date.scss?tag=bs-date&encapsulation=shadow","./src/components/atoms/date/date.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n}\n\n:host .is-white {\n  color: $white;\n}\n","import { Component, Host, h, Prop, State } from '@stencil/core';\n\n/**\n * Date component.\n */\n@Component({\n  tag: 'bs-date',\n  styleUrl: 'date.scss',\n  shadow: true,\n})\nexport class BsDate {\n  @State() isDateValid: boolean = true;\n\n  @State() isLanguageCodeValid: boolean = true;\n\n  /**\n   * Raw date string in yyyy-mm-dd format\n   */\n  @Prop() date: string;\n\n  /**\n   * Language's iso code\n   */\n  @Prop() languageIsoCode: string;\n\n  /**\n   * Has white text?\n   */\n  @Prop() isWhite?: boolean = false;\n\n  private checkDateFormat() {\n    const regex = /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])$/;\n\n    this.isDateValid = regex.test(this.date);\n  }\n\n  private checkLanguageCodeFormat() {\n    const regex = /^[a-z]{2,3}(?:-[A-Z]{2})?$/;\n\n    this.isLanguageCodeValid = regex.test(this.languageIsoCode);\n  }\n\n  private renderDate() {\n    const date = new Date(this.date);\n    const locale: Intl.LocalesArgument = this.isLanguageCodeValid ? this.languageIsoCode : 'en';\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n\n    return date.toLocaleDateString(locale, options);\n  }\n\n  componentWillRender() {\n    this.checkDateFormat();\n    this.checkLanguageCodeFormat();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`date ${this.isWhite ? 'is-white' : ''}`}>\n          {this.isDateValid && this.renderDate()}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAU,+lN,MCUHC,EAAM,M,0CACe,K,yBAEQ,K,gEAeZ,K,CAEpBC,kBACN,MAAMC,EAAQ,kDAEdC,KAAKC,YAAcF,EAAMG,KAAKF,KAAKG,K,CAG7BC,0BACN,MAAML,EAAQ,6BAEdC,KAAKK,oBAAsBN,EAAMG,KAAKF,KAAKM,gB,CAGrCC,aACN,MAAMJ,EAAO,IAAIK,KAAKR,KAAKG,MAC3B,MAAMM,EAA+BT,KAAKK,oBAAsBL,KAAKM,gBAAkB,KACvF,MAAMI,EAAsC,CAC1CC,KAAM,UACNC,MAAO,OACPC,IAAK,WAGP,OAAOV,EAAKW,mBAAmBL,EAAQC,E,CAGzCK,sBACEf,KAAKF,kBACLE,KAAKI,yB,CAGPY,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,QAAQnB,KAAKoB,QAAU,WAAa,MAC7CpB,KAAKC,aAAeD,KAAKO,c"}