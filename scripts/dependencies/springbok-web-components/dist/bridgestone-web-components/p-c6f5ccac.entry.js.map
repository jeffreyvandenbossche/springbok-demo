{"version":3,"names":["experienceZoneScreenCss","BsExperienceZoneScreen","parsedComponents","this","components","undefined","parseIfString","handleActiveChange","isActive","layout","ExperienceZoneLayout","Video","videoId","tag","data","bsYoutubeControllerClick","emit","id","action","value","render","h","Host","class","isEmpty","Array","from","map","_value","i","name","component","Tag","Object","assign","disclaimer","contained","text","size","TextSize","Small","color","TextColor","Default","__decorate","Memoize","experienceZoneStoryCss","handleNextMedia","updateIndex","activeIndex","newValue","parsedStoryData","screens","length","experienceZoneScreenRef","classList","add","addEventListener","remove","storyData","overlayRef","focusTrap","handleBsSwipeAction","e","active","detail","direction","TouchDirections","Left","nextSlide","Right","previousSlide","componentDidLoad","ref","el","storyTitle","hideNavigation","logo","compareBreakpoint","Breakpoint","md","storyLogo","onClick","slot"],"sources":["./src/components/molecules/experience-zone-screen/experience-zone-screen.scss?tag=bs-experience-zone-screen&encapsulation=shadow","./src/components/molecules/experience-zone-screen/experience-zone-screen.tsx","./src/components/molecules/experience-zone-story/experience-zone-story.scss?tag=bs-experience-zone-story&encapsulation=shadow","./src/components/molecules/experience-zone-story/experience-zone-story.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n  height: 100%;\n  animation: fade-in 0.2s linear forwards;\n}\n\n:host .experience-zone-screen {\n  display: flex;\n  flex-direction: column;\n  gap: rem(16);\n  width: 100%;\n  height: 100%;\n  color: $white;\n\n  @include mq('min', 'md') {\n    gap: rem(32);\n  }\n}\n\n:host .screen-container {\n  flex-grow: 1;\n}\n\n:host .screen {\n  display: grid;\n  flex: 1;\n  gap: rem(20);\n\n  &--one,\n  &--video {\n    grid-template-areas: 'one';\n    grid-template-rows: 100%;\n    grid-template-columns: 100%;\n\n    *:nth-child(1) {\n      display: flex;\n    }\n  }\n\n  &--video .screen-item {\n    background-color: transparent;\n  }\n\n  &--two {\n    grid-template-areas:\n      'one'\n      'two';\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr;\n\n    @include mq('min', 'xl') {\n      grid-template-areas: 'one two';\n      grid-template-rows: auto;\n      grid-template-columns: 1fr 1fr;\n    }\n\n    *:nth-child(1),\n    *:nth-child(2) {\n      display: flex;\n    }\n  }\n\n  &--three {\n    grid-template-areas:\n      'one one'\n      'two three';\n    grid-template-rows: 1fr 50vw;\n    grid-template-columns: 1fr 1fr;\n\n    @include mq('min', 'xl') {\n      grid-template-areas:\n        'one two'\n        'one three';\n      grid-template-rows: 1fr 1fr;\n      grid-template-columns: auto 33%;\n    }\n\n    *:nth-child(1),\n    *:nth-child(2),\n    *:nth-child(3) {\n      display: flex;\n    }\n  }\n\n  *:nth-child(1) {\n    grid-area: one;\n  }\n\n  *:nth-child(2) {\n    grid-area: two;\n  }\n\n  *:nth-child(3) {\n    grid-area: three;\n  }\n}\n\n:host .screen-item {\n  position: relative;\n  display: none;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  text-align: center;\n  background-color: $gray-100;\n  border-radius: rem(8);\n}\n\n:host .bs-title-screen,\n:host .bs-quote-screen {\n  padding: rem(20);\n  overflow-y: auto;\n\n  @include mq('min', 'md') {\n    padding: rem(40);\n  }\n}\n\n@keyframes fade-in {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n","import { Component, Host, h, Prop, Watch, Event, EventEmitter } from '@stencil/core';\nimport { Memoize, isEmpty, parseIfString } from '@springbokagency/stencil-base';\nimport {\n  ExperienceZoneComponent,\n  ExperienceZoneLayout,\n} from '../experience-zone/experience-zone.types';\nimport { TextColor, TextSize } from '../../atoms/text/text.types';\nimport { YoutubeControlClickEvent } from '../youtube-control/youtube-control.types';\n\n/**\n * Experience Zone screen component.\n */\n@Component({\n  tag: 'bs-experience-zone-screen',\n  styleUrl: 'experience-zone-screen.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneScreen {\n  /** Is this screen currently active? */\n  @Prop() active?: boolean = false;\n\n  /**\n   * The Experience Zone screen layout name.\n   */\n  @Prop() layout!: ExperienceZoneLayout;\n\n  /**\n   * The Experience Zone screen disclaimer.\n   */\n  @Prop() disclaimer?: string;\n\n  /**\n   * The Experience Zone card image.\n   */\n  @Prop() components?: ExperienceZoneComponent[] | string;\n\n  @Memoize('components')\n  get parsedComponents(): ExperienceZoneComponent[] {\n    if (this.components !== undefined) {\n      return parseIfString(this.components);\n    }\n\n    return [];\n  }\n\n  /** Events */\n  /** Emits youtube control event action: 'play' */\n  @Event() bsYoutubeControllerClick: EventEmitter<YoutubeControlClickEvent>;\n\n  /** Watchers */\n  @Watch('active')\n  handleActiveChange(isActive: boolean) {\n    if (this.layout === ExperienceZoneLayout.Video) {\n      const videoId =\n        this.parsedComponents[0].tag === 'bs-video-card' && this.parsedComponents[0].data.videoId;\n\n      this.bsYoutubeControllerClick.emit({ id: videoId, action: 'play', value: isActive ? 1 : 0 });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"experience-zone-screen\">\n          <div class={`screen screen--${this.layout}`}>\n            {isEmpty(this.parsedComponents)\n              ? Array.from(Array(3)).map((_value, i) => (\n                  <div class={`screen-item`}>\n                    <slot name={`item-${i}`}></slot>\n                  </div>\n                ))\n              : this.parsedComponents.map((component) => {\n                  const Tag = component.tag as any;\n\n                  return (\n                    <div class={`screen-item ${Tag}-screen`}>\n                      <Tag {...component.data} />\n                    </div>\n                  );\n                })}\n          </div>\n          {this.disclaimer && (\n            <bs-container contained={true}>\n              <bs-text text={this.disclaimer} size={TextSize.Small} color={TextColor.Default} />\n            </bs-container>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  @include reset-host;\n}\n\n:host .experience-zone-story {\n  position: relative;\n  height: 100%;\n}\n\n:host .fade-out {\n  animation: fade-out 0.2s linear forwards;\n}\n\n@keyframes fade-out {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n}\n","import { Component, Host, h, Prop, State, Watch, Listen } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport {\n  ExperienceZoneLayout,\n  ExperienceZoneStory,\n} from '../experience-zone/experience-zone.types';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\nimport { TouchDirections } from '../../layouts/default-layout/default-layout.types';\nimport { BsVideoCard } from '../video-card/video-card';\n\n/**\n * Experience Zone story component.\n */\n@Component({\n  tag: 'bs-experience-zone-story',\n  styleUrl: 'experience-zone-story.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneScreen {\n  private experienceZoneScreenRef: HTMLBsExperienceZoneScreenElement;\n\n  private overlayRef: HTMLBsDarkOverlayElement;\n\n  @State() activeIndex: number = 0;\n\n  /** Is this story currently active? */\n  @Prop() active?: boolean = false;\n\n  /** Should navigation arrows be hidden? */\n  @Prop() hideNavigation?: boolean = false;\n\n  /**\n   * The Experience Zone story data.\n   */\n  @Prop() storyData: ExperienceZoneStory | string;\n\n  @Memoize('storyData')\n  get parsedStoryData(): ExperienceZoneStory {\n    return parseIfString(this.storyData);\n  }\n\n  /** Watchers */\n  @Watch('active')\n  handleActiveChange(isActive: boolean) {\n    if (isActive) {\n      this.overlayRef.focusTrap();\n    }\n  }\n\n  /** Listeners */\n  @Listen('bsSwipeAction', { target: 'window' })\n  handleBsSwipeAction(e: CustomEvent) {\n    if (this.active) {\n      if (e.detail.direction === TouchDirections.Left) {\n        this.overlayRef.nextSlide();\n      }\n\n      if (e.detail.direction === TouchDirections.Right) {\n        this.overlayRef.previousSlide();\n      }\n    }\n  }\n\n  /** Methods */\n  private handleNextMedia = () => {\n    this.updateIndex(this.activeIndex + 1);\n  };\n\n  private updateIndex = (newValue: number) => {\n    if (this.parsedStoryData.screens.length <= 1) {\n      this.activeIndex = 0;\n\n      return;\n    }\n\n    this.experienceZoneScreenRef.classList.add('fade-out');\n\n    this.experienceZoneScreenRef.addEventListener('animationend', () => {\n      this.experienceZoneScreenRef.classList.remove('fade-out');\n\n      if (newValue > this.parsedStoryData.screens.length - 1) {\n        this.activeIndex = 0;\n      } else if (newValue < 0) {\n        this.activeIndex = this.parsedStoryData.screens.length - 1;\n      } else {\n        this.activeIndex = newValue;\n      }\n    });\n  };\n\n  componentDidLoad() {\n    if (this.active) {\n      this.overlayRef.focusTrap();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"experience-zone-story\">\n          <bs-dark-overlay\n            ref={(el) => {\n              this.overlayRef = el;\n            }}\n            main-title={this.parsedStoryData.storyTitle}\n            screens={!this.hideNavigation}\n            logo={\n              (this.parsedStoryData.screens[this.activeIndex].layout !==\n                ExperienceZoneLayout.Video &&\n                compareBreakpoint('max', Breakpoint.md)) ||\n              compareBreakpoint('min', Breakpoint.md)\n                ? this.parsedStoryData.storyLogo\n                : ''\n            }\n          >\n            <bs-experience-zone-screen\n              ref={(el) => {\n                this.experienceZoneScreenRef = el;\n              }}\n              active={this.active}\n              onClick={this.handleNextMedia}\n              slot=\"media\"\n              layout={this.parsedStoryData.screens[this.activeIndex].layout}\n              disclaimer={this.parsedStoryData.screens[this.activeIndex].disclaimer}\n              components={this.parsedStoryData.screens[this.activeIndex].components}\n            ></bs-experience-zone-screen>\n            {this.parsedStoryData.screens[this.activeIndex].layout ===\n              ExperienceZoneLayout.Video && (\n              <bs-container slot=\"controller\" contained={true}>\n                <div class=\"screen-footer\">\n                  <bs-youtube-control\n                    videoId={\n                      (\n                        this.parsedStoryData.screens[this.activeIndex].components[0]\n                          .data as BsVideoCard\n                      ).videoId\n                    }\n                  />\n                </div>\n              </bs-container>\n            )}\n          </bs-dark-overlay>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}