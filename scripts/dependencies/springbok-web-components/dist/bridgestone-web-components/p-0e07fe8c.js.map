{"version":3,"names":["deepQuerySelectorAll","selector","root","selectedItems","allChildren","isEmpty","shadowRoot","querySelectorAll","forEach","child","push","matches"],"sources":["./src/utils/deepQuerySelectorAll.ts"],"sourcesContent":["import { isEmpty } from '@springbokagency/stencil-base';\n\nexport function deepQuerySelectorAll(selector: string, root: Element): Element[] | [] {\n  const selectedItems = [];\n\n  // select all items of this Element or Shadow DOM\n  let allChildren: NodeListOf<Element>;\n\n  if (!isEmpty(root.shadowRoot)) {\n    allChildren = root.shadowRoot.querySelectorAll('*');\n  } else {\n    allChildren = root.querySelectorAll('*');\n  }\n\n  allChildren.forEach((child) => {\n    // if has shadow root, re-execute main function\n    if (!isEmpty(child.shadowRoot)) {\n      // concatenate the results of the recursive calls to avoid always resetting the value of selectedItems\n      selectedItems.push(...deepQuerySelectorAll(selector, child));\n    }\n\n    // if match CSS selector, push to array\n    if (child.matches(selector)) {\n      selectedItems.push(child);\n    }\n  });\n\n  return selectedItems;\n}\n"],"mappings":"wCAEgBA,EAAqBC,EAAkBC,GACrD,MAAMC,EAAgB,GAGtB,IAAIC,EAEJ,IAAKC,EAAQH,EAAKI,YAAa,CAC7BF,EAAcF,EAAKI,WAAWC,iBAAiB,I,KAC1C,CACLH,EAAcF,EAAKK,iBAAiB,I,CAGtCH,EAAYI,SAASC,IAEnB,IAAKJ,EAAQI,EAAMH,YAAa,CAE9BH,EAAcO,QAAQV,EAAqBC,EAAUQ,G,CAIvD,GAAIA,EAAME,QAAQV,GAAW,CAC3BE,EAAcO,KAAKD,E,KAIvB,OAAON,CACT,Q"}