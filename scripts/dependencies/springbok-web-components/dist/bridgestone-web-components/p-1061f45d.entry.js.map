{"version":3,"names":["dotNavigationCss","BsDotNavigation","this","startProgress","time","clearTimeout","timeout","clearInterval","interval","setInterval","progress","slow","setTimeout","handleIndexChange","componentDidLoad","render","dots","Array","from","items","keys","h","Host","class","map","index","max","value"],"sources":["./src/components/atoms/dot-navigation/dot-navigation.scss?tag=bs-dot-navigation&encapsulation=shadow","./src/components/atoms/dot-navigation/dot-navigation.tsx"],"sourcesContent":[":host .dot-nav {\n  display: flex;\n  gap: rem(14);\n  height: rem(8);\n}\n\n:host .dot {\n  position: relative;\n  width: 0;\n  height: rem(8);\n  border: 0;\n  transition: width 1s ease;\n\n  &--active {\n    width: rem(56);\n\n    &::-webkit-progress-value {\n      background-color: $primary;\n      border-color: $primary;\n    }\n  }\n}\n\n:host progress::-webkit-progress-bar {\n  box-sizing: content-box;\n  background-color: $gray-600;\n  border-right: rem(8) solid $gray-600;\n  border-radius: rem(10);\n}\n\n:host progress::-webkit-progress-value {\n  box-sizing: content-box;\n  background-color: $gray-600;\n  border-right: rem(4) solid $gray-600;\n  border-left: rem(4) solid $gray-600;\n  border-radius: rem(10);\n}\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\n\n/**\n * The dot navigation component used to indicate the current index in a list of views.\n */\n@Component({\n  tag: 'bs-dot-navigation',\n  styleUrl: 'dot-navigation.scss',\n  shadow: true,\n})\nexport class BsDotNavigation {\n  private timeout: NodeJS.Timeout;\n\n  private interval: NodeJS.Timeout;\n\n  @State() progress: number = 0;\n\n  /**\n   * The amount of dots in the navigation.\n   */\n  @Prop() items!: number;\n\n  /**\n   * The active dot index.\n   */\n  @Prop() index!: number;\n\n  @Watch('index')\n  handleIndexChange() {\n    this.startProgress();\n  }\n\n  /**\n   * Should the auto navigation be slow?\n   */\n  @Prop() slow?: boolean;\n\n  /** Methods */\n  private startProgress = () => {\n    let time = 0;\n\n    clearTimeout(this.timeout);\n    clearInterval(this.interval);\n\n    this.interval = setInterval(() => {\n      time += 100;\n\n      this.progress = (100 / (this.slow ? 30 : 15)) * (time / 1000);\n    }, 100);\n\n    this.timeout = setTimeout(\n      () => {\n        clearInterval(this.interval);\n      },\n      this.slow ? 30000 : 15000\n    );\n  };\n\n  /** lifecycle hooks */\n  componentDidLoad() {\n    this.startProgress();\n  }\n\n  render() {\n    const dots = Array.from(Array(this.items).keys());\n\n    return (\n      <Host class={this.slow ? 'is-slow' : ''}>\n        <span class=\"dot-nav\">\n          {dots.map((index) =>\n            index === this.index ? (\n              <progress class=\"dot dot--active\" max=\"100\" value={this.progress} />\n            ) : (\n              <progress class=\"dot\" max=\"100\" value=\"0\" />\n            )\n          )}\n        </span>\n      </Host>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAmB,qlO,MCUZC,EAAe,M,yBA4BlBC,KAAAC,cAAgB,KACtB,IAAIC,EAAO,EAEXC,aAAaH,KAAKI,SAClBC,cAAcL,KAAKM,UAEnBN,KAAKM,SAAWC,aAAY,KAC1BL,GAAQ,IAERF,KAAKQ,SAAY,KAAOR,KAAKS,KAAO,GAAK,KAAQP,EAAO,IAAK,GAC5D,KAEHF,KAAKI,QAAUM,YACb,KACEL,cAAcL,KAAKM,SAAS,GAE9BN,KAAKS,KAAO,IAAQ,KACrB,E,cAxCyB,E,8DAa5BE,oBACEX,KAAKC,e,CA8BPW,mBACEZ,KAAKC,e,CAGPY,SACE,MAAMC,EAAOC,MAAMC,KAAKD,MAAMf,KAAKiB,OAAOC,QAE1C,OACEC,EAACC,EAAI,CAACC,MAAOrB,KAAKS,KAAO,UAAY,IACnCU,EAAA,QAAME,MAAM,WACTP,EAAKQ,KAAKC,GACTA,IAAUvB,KAAKuB,MACbJ,EAAA,YAAUE,MAAM,kBAAkBG,IAAI,MAAMC,MAAOzB,KAAKQ,WAExDW,EAAA,YAAUE,MAAM,MAAMG,IAAI,MAAMC,MAAM,S"}