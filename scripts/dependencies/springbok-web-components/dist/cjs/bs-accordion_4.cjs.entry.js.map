{"file":"bs-accordion.bs-accordion-item.bs-product-card.bs-slider.entry.cjs.js","mappings":"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","names":["parseIfString","h","Host","isEmpty","__decorate","Memoize","IconName","TitleTag","TitleSize","TitleColor","throttle"],"sources":["./src/components/organisms/accordion/accordion.scss?tag=bs-accordion&encapsulation=shadow","./src/components/organisms/accordion/accordion.tsx","./src/components/molecules/accordion-item/accordion-item.scss?tag=bs-accordion-item&encapsulation=shadow","./src/components/molecules/accordion-item/accordion-item.tsx","./src/components/molecules/product-card/product-card.scss?tag=bs-product-card&encapsulation=shadow","./src/components/molecules/product-card/product-card.tsx","./src/utils/inViewport.ts","./src/components/organisms/slider/slider.scss?tag=bs-slider&encapsulation=shadow","./src/components/organisms/slider/slider.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n}\n\n:host .accordion {\n  font-size: rem(20);\n  list-style: none;\n}\n","import { Memoize, isEmpty, parseIfString } from '@springbokagency/stencil-base';\nimport { Component, Host, h, Prop, Listen } from '@stencil/core';\nimport { BsTitle } from '../../atoms/title/title';\n\n/**\n * The Accordion component.\n */\n@Component({\n  tag: 'bs-accordion',\n  styleUrl: 'accordion.scss',\n  shadow: true,\n})\nexport class BsAccordion {\n  /**\n   * Section's title.\n   */\n  @Prop() mainTitle?: BsTitle | string;\n\n  @Memoize('mainTitle')\n  get parsedMainTitle(): BsTitle {\n    return parseIfString(this.mainTitle);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  @Listen('bsAccordionStateAction')\n  bsAccordionStateHandler(event: CustomEvent<boolean>) {\n    const target = event.target as HTMLBsAccordionItemElement;\n\n    target.active = !target.active;\n  }\n\n  render() {\n    return (\n      <Host>\n        <section class=\"accordion-wrapper\">\n          {/* Main title */}\n          {!isEmpty(this.parsedMainTitle) && !isEmpty(this.parsedMainTitle.text) && (\n            <bs-title\n              variant={this.parsedMainTitle.variant}\n              color={this.parsedMainTitle.color}\n              tag={this.parsedMainTitle.tag}\n              text={this.parsedMainTitle.text}\n              size={this.parsedMainTitle.size}\n            />\n          )}\n          <ul class=\"accordion\" aria-label=\"Accordion Control Group\">\n            <slot name=\"accordion-item\" />\n          </ul>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  @include reset-host;\n  flex: 1;\n}\n\n:host .accordion-item {\n  margin-bottom: rem(-1);\n  list-style: none;\n  border-bottom: rem(1) solid $gray-800;\n\n  &.is-active .accordion-panel {\n    display: block;\n  }\n\n  &.is-active .accordion-trigger-icon {\n    transform: scaleY(-100%);\n  }\n}\n\n:host .accordion-trigger {\n  display: flex;\n  gap: rem(20);\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: rem(24) 0;\n  font: inherit;\n  line-height: line-height(default);\n  color: inherit;\n\n  text-align: left;\n  cursor: pointer;\n\n  background-color: transparent;\n  border: 0;\n\n  &:disabled {\n    pointer-events: none;\n    cursor: default;\n  }\n}\n\n:host .accordion-trigger-icon {\n  font-size: rem(24);\n}\n\n:host .accordion-panel {\n  display: none;\n}\n","import { Component, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\n\nimport { IconName } from '../../atoms/icon/icon.types';\n\n@Component({\n  tag: 'bs-accordion-item',\n  styleUrl: 'accordion-item.scss',\n  shadow: true,\n})\nexport class BsAccordionItem {\n  /**\n   * Accordion's unique identifier used for accessibility.\n   */\n  @Prop() identifier!: string;\n\n  // eslint-disable-next-line class-methods-use-this\n  @Watch('identifier')\n  validateIdentifier(newValue: string) {\n    // don't allow `thingToDo` to be the empty string\n    const isBlank = typeof newValue !== 'string' || newValue === '';\n\n    if (isBlank) {\n      throw new Error('BsAccordionItem identifier is a required property and cannot be empty');\n    }\n  }\n\n  /**\n   * Accordion's title.\n   */\n  @Prop() accordionItemTitle: string;\n\n  /**\n   * Accordion's active state\n   */\n  @Prop() active?: boolean;\n\n  /**\n   * Is the accordion expandable?\n   */\n  @Prop({ reflect: true }) expandable?: boolean = true;\n\n  /**\n   * Accordion's event emitter\n   */\n  @Event() bsAccordionStateAction: EventEmitter<Boolean>;\n\n  private bsAccordionStateActionHandler(state: Boolean) {\n    this.bsAccordionStateAction.emit(state);\n  }\n\n  render() {\n    const itemIdentifier = this.identifier.replace(/\\s+/g, '-').toLowerCase();\n\n    return (\n      <Host>\n        <li class={`accordion-item ${this.expandable && this.active ? 'is-active' : ''}`}>\n          {/* Button */}\n          <button\n            class=\"accordion-trigger\"\n            type=\"button\"\n            aria-controls={itemIdentifier}\n            aria-expanded={this.expandable && this.active && this.active.toString()}\n            id={`accordion-${itemIdentifier}`}\n            onClick={() => {\n              this.bsAccordionStateActionHandler(this.active);\n            }}\n            tabIndex={this.expandable ? 1 : -1}\n            disabled={!this.expandable}\n          >\n            <span class=\"accordion-trigger-title\">{this.accordionItemTitle}</span>\n\n            {this.expandable && (\n              <bs-icon\n                aria-hidden=\"true\"\n                class=\"accordion-trigger-icon\"\n                name={IconName.CaretDownward}\n              />\n            )}\n          </button>\n          {/* Content */}\n          <div\n            class=\"accordion-panel\"\n            role=\"region\"\n            aria-hidden={(!this.active).toString()}\n            id={itemIdentifier}\n          >\n            <div class=\"accordion-panel-content\">\n              <slot name=\"accordion-content\" />\n            </div>\n          </div>\n        </li>\n      </Host>\n    );\n  }\n}\n",":host {\n  @include reset-host;\n}\n\n:host .card {\n  display: flex;\n  flex-direction: column;\n  gap: rem(16);\n  align-items: center;\n  height: 100%;\n  padding: rem(10);\n  border: 1px solid $gray-800;\n  border-radius: rem(8);\n\n  @include mq('min', 'xs') {\n    width: rem(285);\n  }\n\n  @include mq('min', 'md') {\n    width: rem(330);\n  }\n}\n\n.image {\n  display: flex;\n}\n\n.content {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  max-height: 100%;\n  overflow: hidden;\n\n  .title {\n    margin-bottom: rem(10);\n    line-height: 1.1;\n  }\n\n  .text {\n    font-size: rem(12);\n  }\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport type { BsImage } from '../../atoms/image/image';\nimport { TitleColor, TitleSize, TitleTag } from '../../atoms/title/title.types';\n\n/**\n * Product card component.\n */\n@Component({\n  tag: 'bs-product-card',\n  styleUrl: 'product-card.scss',\n  shadow: true,\n})\nexport class BsProductCard {\n  /** Props */\n  /**\n   * The product card title.\n   */\n  @Prop() cardTitle: string;\n\n  /**\n   * The cta label.\n   */\n  @Prop() cardText: string;\n\n  /**\n   * The product card image.\n   */\n  @Prop() cardImage: BsImage | string;\n\n  @Memoize('cardImage')\n  get parsedCardImage(): BsImage {\n    return parseIfString(this.cardImage);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"card\">\n          <div class=\"image\">\n            <bs-image {...this.parsedCardImage} caption=\"\" />\n          </div>\n          <div class=\"content\">\n            <bs-title\n              class=\"title\"\n              tag={TitleTag.Span}\n              size={TitleSize.Head4}\n              text={this.cardTitle}\n              color={TitleColor.Black}\n            />\n            <bs-text class=\"text\" text={this.cardText} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","import { isEmpty } from '@springbokagency/stencil-base';\n\nexport function isInViewport(el: HTMLElement, container?: HTMLElement) {\n  if (!isEmpty(el)) {\n    const rect = el.getBoundingClientRect();\n\n    if (container && !isEmpty(container.getBoundingClientRect())) {\n      const containerRect = container.getBoundingClientRect();\n\n      return (\n        rect.top >= containerRect.top &&\n        rect.left >= containerRect.left &&\n        rect.bottom <= containerRect.bottom &&\n        rect.right <= containerRect.right\n      );\n    }\n\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n\n  return false;\n}\n","/* stylelint-disable property-no-vendor-prefix */\n:host {\n  @include reset-host;\n  position: relative;\n}\n\n:host .overlay {\n  @include z-index('base');\n  @include cover;\n  display: flex;\n  height: calc(100% - rem(20));\n  pointer-events: none;\n\n  @include mq('max', 'md') {\n    display: none;\n  }\n}\n\n:host .navigation {\n  position: relative;\n  width: 100%;\n  transition: max-width 0.2s ease;\n\n  @include mq('max', 'md') {\n    display: none;\n  }\n}\n\n:host .fade {\n  flex: 1;\n  width: 100%;\n  background: linear-gradient(90deg, rgba($white, 0.5) 20%, $white);\n}\n\n:host .navigation-back {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(-50%, -50%);\n}\n\n:host .navigation-forward {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translate(50%, -50%);\n}\n\n:host .teaser-slider {\n  display: flex;\n  gap: rem(12);\n  overflow: auto;\n\n  @include mq('min', 'md') {\n    gap: rem(24);\n    padding-bottom: rem(20);\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: $gray-900;\n  }\n\n  &::-webkit-scrollbar {\n    height: 2px;\n    background-color: transparent;\n\n    @include mq('max', 'md') {\n      display: none;\n    }\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: $primary;\n  }\n}\n\n:host .navigation-button {\n  padding: rem(8);\n  font-size: rem(24);\n  pointer-events: all;\n  background-color: $white;\n  border: 1px solid $gray-800;\n  border-radius: 50%;\n\n  &:focus {\n    background-color: $gray-800;\n    outline: 0;\n  }\n}\n","import { Component, Host, h, State, Listen } from '@stencil/core';\nimport { isEmpty } from '@springbokagency/stencil-base';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { isInViewport } from '../../../utils/inViewport';\nimport { throttle } from '../../../utils/throttle';\n\n/**\n * The Slider component.\n */\n@Component({\n  tag: 'bs-slider',\n  styleUrl: 'slider.scss',\n  shadow: true,\n})\nexport class BsSlider {\n  private teaserSliderRef: HTMLDivElement;\n\n  private navigationRef: HTMLDivElement;\n\n  private itemsVisible: number;\n\n  /** States */\n  @State() slides: boolean = true;\n\n  /** listeners */\n  @Listen('resize', { target: 'window' })\n  handleScreenResized() {\n    this.throttleMethod();\n  }\n\n  /** Methods */\n  private onResize = () => {\n    this.slides = this.teaserSliderRef.scrollWidth > this.teaserSliderRef.offsetWidth;\n\n    if (this.slides) {\n      this.handleOverlay();\n\n      if (\n        this.teaserSliderRef.scrollLeft + this.teaserSliderRef.offsetWidth >=\n        this.teaserSliderRef.scrollWidth\n      ) {\n        this.navigationRef.style.maxWidth = '100%';\n      }\n    }\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  private onPreviousSlide = () => {\n    const cards = this.getCards();\n\n    for (let i = 0; i < cards.length; i += 1) {\n      if (isInViewport(cards[i], this.teaserSliderRef)) {\n        this.teaserSliderRef.scrollTo({\n          behavior: 'smooth',\n          left: cards[i - 1] && cards[i - 1].offsetLeft,\n        });\n        break;\n      }\n    }\n\n    this.handleOverlay();\n  };\n\n  private onNextSlide = () => {\n    const cards = this.getCards();\n\n    for (let i = 0; i < cards.length; i += 1) {\n      if (isInViewport(cards[i], this.teaserSliderRef)) {\n        const offset =\n          cards[i].offsetLeft === this.teaserSliderRef.scrollLeft\n            ? cards[i + 1].offsetLeft\n            : cards[i].offsetLeft;\n\n        this.teaserSliderRef.scrollTo({\n          behavior: 'smooth',\n          left: offset,\n        });\n        break;\n      }\n    }\n  };\n\n  private handleOverlay = () => {\n    const cards = this.getCards();\n    const containerWidth = this.teaserSliderRef.clientWidth;\n\n    for (let i = 0; i < cards.length; i += 1) {\n      if (cards[i].offsetLeft + cards[i].offsetWidth > containerWidth) {\n        this.itemsVisible = i;\n        break;\n      }\n    }\n\n    this.navigationRef.style.maxWidth = `${\n      cards[this.itemsVisible - 1].getBoundingClientRect().right -\n      cards[0].getBoundingClientRect().left\n    }px`;\n  };\n\n  private getCards = (): HTMLElement[] => {\n    const slotElement = this.teaserSliderRef.querySelector(\n      'slot[name=\"slider-item\"]'\n    ) as HTMLSlotElement;\n\n    if (isEmpty(slotElement)) return [];\n\n    const assignedNodes = slotElement.assignedNodes();\n\n    return assignedNodes as HTMLElement[];\n  };\n\n  /** lifecycle hooks */\n  componentDidLoad() {\n    this.slides = this.teaserSliderRef.scrollWidth > this.teaserSliderRef.offsetWidth;\n\n    if (this.slides) {\n      this.handleOverlay();\n      this.teaserSliderRef.addEventListener(\n        'scroll',\n        throttle(() => {\n          if (\n            this.teaserSliderRef.scrollLeft + this.teaserSliderRef.offsetWidth >=\n            this.teaserSliderRef.scrollWidth\n          ) {\n            this.navigationRef.style.maxWidth = '100%';\n          } else {\n            this.handleOverlay();\n          }\n        }, 200)\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.slides && (\n          <div class=\"overlay\">\n            <div\n              class=\"navigation\"\n              ref={(el) => {\n                this.navigationRef = el;\n              }}\n            >\n              <div class=\"navigation-back\">\n                <bs-click-action\n                  name=\"previous\"\n                  onBsClickAction={this.onPreviousSlide}\n                  tagClass=\"navigation-button\"\n                  ariaLabelText=\"backward\"\n                >\n                  <bs-icon name={IconName.ArrowBackward} />\n                </bs-click-action>\n              </div>\n              <div class=\"navigation-forward\">\n                <bs-click-action\n                  name=\"next\"\n                  onBsClickAction={this.onNextSlide}\n                  tagClass=\"navigation-button\"\n                  ariaLabelText=\"forward\"\n                >\n                  <bs-icon name={IconName.ArrowForward} />\n                </bs-click-action>\n              </div>\n            </div>\n            <div class=\"fade\" />\n          </div>\n        )}\n        <div\n          class=\"teaser-slider\"\n          ref={(el) => {\n            this.teaserSliderRef = el;\n          }}\n        >\n          <slot name=\"slider-item\" />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}