{"file":"bs-experience-zone-screen.bs-experience-zone-story.entry.cjs.js","mappings":"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","names":["BsExperienceZoneScreen","parseIfString","ExperienceZoneLayout","h","Host","isEmpty","TextSize","TextColor","__decorate","Memoize","TouchDirections","compareBreakpoint","Breakpoint"],"sources":["./src/components/molecules/experience-zone-screen/experience-zone-screen.scss?tag=bs-experience-zone-screen&encapsulation=shadow","./src/components/molecules/experience-zone-screen/experience-zone-screen.tsx","./src/components/molecules/experience-zone-story/experience-zone-story.scss?tag=bs-experience-zone-story&encapsulation=shadow","./src/components/molecules/experience-zone-story/experience-zone-story.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n  height: 100%;\n  animation: fade-in 0.2s linear forwards;\n}\n\n:host .experience-zone-screen {\n  display: flex;\n  flex-direction: column;\n  gap: rem(16);\n  width: 100%;\n  height: 100%;\n  color: $white;\n\n  @include mq('min', 'md') {\n    gap: rem(32);\n  }\n}\n\n:host .screen-container {\n  flex-grow: 1;\n}\n\n:host .screen {\n  display: grid;\n  flex: 1;\n  gap: rem(20);\n\n  &--one,\n  &--video {\n    grid-template-areas: 'one';\n    grid-template-rows: 100%;\n    grid-template-columns: 100%;\n\n    *:nth-child(1) {\n      display: flex;\n    }\n  }\n\n  &--video .screen-item {\n    background-color: transparent;\n  }\n\n  &--two {\n    grid-template-areas:\n      'one'\n      'two';\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr;\n\n    @include mq('min', 'xl') {\n      grid-template-areas: 'one two';\n      grid-template-rows: auto;\n      grid-template-columns: 1fr 1fr;\n    }\n\n    *:nth-child(1),\n    *:nth-child(2) {\n      display: flex;\n    }\n  }\n\n  &--three {\n    grid-template-areas:\n      'one one'\n      'two three';\n    grid-template-rows: 1fr 50vw;\n    grid-template-columns: 1fr 1fr;\n\n    @include mq('min', 'xl') {\n      grid-template-areas:\n        'one two'\n        'one three';\n      grid-template-rows: 1fr 1fr;\n      grid-template-columns: auto 33%;\n    }\n\n    *:nth-child(1),\n    *:nth-child(2),\n    *:nth-child(3) {\n      display: flex;\n    }\n  }\n\n  *:nth-child(1) {\n    grid-area: one;\n  }\n\n  *:nth-child(2) {\n    grid-area: two;\n  }\n\n  *:nth-child(3) {\n    grid-area: three;\n  }\n}\n\n:host .screen-item {\n  position: relative;\n  display: none;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  text-align: center;\n  background-color: $gray-100;\n  border-radius: rem(8);\n}\n\n:host .bs-title-screen,\n:host .bs-quote-screen {\n  padding: rem(20);\n  overflow-y: auto;\n\n  @include mq('min', 'md') {\n    padding: rem(40);\n  }\n}\n\n@keyframes fade-in {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n","import { Component, Host, h, Prop, Watch, Event, EventEmitter } from '@stencil/core';\nimport { Memoize, isEmpty, parseIfString } from '@springbokagency/stencil-base';\nimport {\n  ExperienceZoneComponent,\n  ExperienceZoneLayout,\n} from '../experience-zone/experience-zone.types';\nimport { TextColor, TextSize } from '../../atoms/text/text.types';\nimport { YoutubeControlClickEvent } from '../youtube-control/youtube-control.types';\n\n/**\n * Experience Zone screen component.\n */\n@Component({\n  tag: 'bs-experience-zone-screen',\n  styleUrl: 'experience-zone-screen.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneScreen {\n  /** Is this screen currently active? */\n  @Prop() active?: boolean = false;\n\n  /**\n   * The Experience Zone screen layout name.\n   */\n  @Prop() layout!: ExperienceZoneLayout;\n\n  /**\n   * The Experience Zone screen disclaimer.\n   */\n  @Prop() disclaimer?: string;\n\n  /**\n   * The Experience Zone card image.\n   */\n  @Prop() components?: ExperienceZoneComponent[] | string;\n\n  @Memoize('components')\n  get parsedComponents(): ExperienceZoneComponent[] {\n    if (this.components !== undefined) {\n      return parseIfString(this.components);\n    }\n\n    return [];\n  }\n\n  /** Events */\n  /** Emits youtube control event action: 'play' */\n  @Event() bsYoutubeControllerClick: EventEmitter<YoutubeControlClickEvent>;\n\n  /** Watchers */\n  @Watch('active')\n  handleActiveChange(isActive: boolean) {\n    if (this.layout === ExperienceZoneLayout.Video) {\n      const videoId =\n        this.parsedComponents[0].tag === 'bs-video-card' && this.parsedComponents[0].data.videoId;\n\n      this.bsYoutubeControllerClick.emit({ id: videoId, action: 'play', value: isActive ? 1 : 0 });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"experience-zone-screen\">\n          <div class={`screen screen--${this.layout}`}>\n            {isEmpty(this.parsedComponents)\n              ? Array.from(Array(3)).map((_value, i) => (\n                  <div class={`screen-item`}>\n                    <slot name={`item-${i}`}></slot>\n                  </div>\n                ))\n              : this.parsedComponents.map((component) => {\n                  const Tag = component.tag as any;\n\n                  return (\n                    <div class={`screen-item ${Tag}-screen`}>\n                      <Tag {...component.data} />\n                    </div>\n                  );\n                })}\n          </div>\n          {this.disclaimer && (\n            <bs-container contained={true}>\n              <bs-text text={this.disclaimer} size={TextSize.Small} color={TextColor.Default} />\n            </bs-container>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  @include reset-host;\n}\n\n:host .experience-zone-story {\n  position: relative;\n  height: 100%;\n}\n\n:host .fade-out {\n  animation: fade-out 0.2s linear forwards;\n}\n\n@keyframes fade-out {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n}\n","import { Component, Host, h, Prop, State, Watch, Listen } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport {\n  ExperienceZoneLayout,\n  ExperienceZoneStory,\n} from '../experience-zone/experience-zone.types';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\nimport { TouchDirections } from '../../layouts/default-layout/default-layout.types';\nimport { BsVideoCard } from '../video-card/video-card';\n\n/**\n * Experience Zone story component.\n */\n@Component({\n  tag: 'bs-experience-zone-story',\n  styleUrl: 'experience-zone-story.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneScreen {\n  private experienceZoneScreenRef: HTMLBsExperienceZoneScreenElement;\n\n  private overlayRef: HTMLBsDarkOverlayElement;\n\n  @State() activeIndex: number = 0;\n\n  /** Is this story currently active? */\n  @Prop() active?: boolean = false;\n\n  /** Should navigation arrows be hidden? */\n  @Prop() hideNavigation?: boolean = false;\n\n  /**\n   * The Experience Zone story data.\n   */\n  @Prop() storyData: ExperienceZoneStory | string;\n\n  @Memoize('storyData')\n  get parsedStoryData(): ExperienceZoneStory {\n    return parseIfString(this.storyData);\n  }\n\n  /** Watchers */\n  @Watch('active')\n  handleActiveChange(isActive: boolean) {\n    if (isActive) {\n      this.overlayRef.focusTrap();\n    }\n  }\n\n  /** Listeners */\n  @Listen('bsSwipeAction', { target: 'window' })\n  handleBsSwipeAction(e: CustomEvent) {\n    if (this.active) {\n      if (e.detail.direction === TouchDirections.Left) {\n        this.overlayRef.nextSlide();\n      }\n\n      if (e.detail.direction === TouchDirections.Right) {\n        this.overlayRef.previousSlide();\n      }\n    }\n  }\n\n  /** Methods */\n  private handleNextMedia = () => {\n    this.updateIndex(this.activeIndex + 1);\n  };\n\n  private updateIndex = (newValue: number) => {\n    if (this.parsedStoryData.screens.length <= 1) {\n      this.activeIndex = 0;\n\n      return;\n    }\n\n    this.experienceZoneScreenRef.classList.add('fade-out');\n\n    this.experienceZoneScreenRef.addEventListener('animationend', () => {\n      this.experienceZoneScreenRef.classList.remove('fade-out');\n\n      if (newValue > this.parsedStoryData.screens.length - 1) {\n        this.activeIndex = 0;\n      } else if (newValue < 0) {\n        this.activeIndex = this.parsedStoryData.screens.length - 1;\n      } else {\n        this.activeIndex = newValue;\n      }\n    });\n  };\n\n  componentDidLoad() {\n    if (this.active) {\n      this.overlayRef.focusTrap();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"experience-zone-story\">\n          <bs-dark-overlay\n            ref={(el) => {\n              this.overlayRef = el;\n            }}\n            main-title={this.parsedStoryData.storyTitle}\n            screens={!this.hideNavigation}\n            logo={\n              (this.parsedStoryData.screens[this.activeIndex].layout !==\n                ExperienceZoneLayout.Video &&\n                compareBreakpoint('max', Breakpoint.md)) ||\n              compareBreakpoint('min', Breakpoint.md)\n                ? this.parsedStoryData.storyLogo\n                : ''\n            }\n          >\n            <bs-experience-zone-screen\n              ref={(el) => {\n                this.experienceZoneScreenRef = el;\n              }}\n              active={this.active}\n              onClick={this.handleNextMedia}\n              slot=\"media\"\n              layout={this.parsedStoryData.screens[this.activeIndex].layout}\n              disclaimer={this.parsedStoryData.screens[this.activeIndex].disclaimer}\n              components={this.parsedStoryData.screens[this.activeIndex].components}\n            ></bs-experience-zone-screen>\n            {this.parsedStoryData.screens[this.activeIndex].layout ===\n              ExperienceZoneLayout.Video && (\n              <bs-container slot=\"controller\" contained={true}>\n                <div class=\"screen-footer\">\n                  <bs-youtube-control\n                    videoId={\n                      (\n                        this.parsedStoryData.screens[this.activeIndex].components[0]\n                          .data as BsVideoCard\n                      ).videoId\n                    }\n                  />\n                </div>\n              </bs-container>\n            )}\n          </bs-dark-overlay>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}