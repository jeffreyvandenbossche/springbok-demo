{"file":"bs-breadcrumb.entry.cjs.js","mappings":";;;;;;;;;AAAA,MAAM,aAAa,GAAG,mjOAAmjO;;;;;;;;;;;;MCgB5jO,YAAY;;;IACf,WAAM,GAAG,QAAQ,CAAC;IAElB,YAAO,GAAG,SAAS,CAAC;;IAmBpB,oBAAe,GAAG,CAAC,CAA0C;MACnE,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE;QACjC,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;OAC5C;KACF,CAAC;mBApB0B,IAAI;0BAE0B,EAAE;;;EAS5D,IAAI,UAAU;IACZ,OAAOA,2BAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACjC;EASD,iBAAiB;IACf,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAE3C,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;MAC9B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACzE;GACF;EAED,MAAM;IACJ,MAAM,MAAM,GAAG;MACb,UAAU,EAAE,oBAAoB;MAChC,OAAO,EAAE,gBAAgB;MACzB,eAAe,EAAE;QACf,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK;UAC9B,MAAM,UAAU,GAAG;YACjB,OAAO,EAAE,UAAU;YACnB,QAAQ,EAAE,KAAK,GAAG,CAAC;YACnB,IAAI,EAAE;cACJ,KAAK,EAAE,IAAI,CAAC,GAAG;cACf,IAAI,EAAE,IAAI,CAAC,SAAS;aACrB;WACF,CAAC;UAEF,OAAO,UAAU,CAAC;SACnB,CAAC;OACH;KACF,CAAC;IAEF,QACEC,QAACC,UAAI,QACHD,+BAAgB,YAAY,IAC1BA,gBAAI,KAAK,EAAC,YAAY,IACnB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,cAAc,EAAEE,OAAK;MAC7C,MAAM,WAAW,GAAGA,OAAK,KAAK,CAAC,CAAC;MAChC,MAAM,UAAU,GAAGA,OAAK,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;MAE5D,OAAO,OAAO,cAAc,KAAK,QAAQ,IACvCF,oBACEA,6BACE,QAAQ,EAAE,mBAAmB,UAAU,GAAG,WAAW,GAAG,EAAE,IACxD,WAAW,GAAG,WAAW,GAAG,EAC9B,EAAE,EACF,IAAI,EAAE,cAAc,CAAC,GAAG,kBACV,UAAU,GAAG,MAAM,GAAG,EAAE,IAEtCA,qBAAS,IAAI,EAAE,WAAW,GAAGG,mBAAQ,CAAC,KAAK,GAAGA,mBAAQ,CAAC,YAAY,GAAI,EACtE,CAAC,WAAW,IAAIH,sBAAO,cAAc,CAAC,SAAS,CAAQ,CACxC,CACf,KAELA,oBACEA,6BACE,QAAQ,EAAE,iBAAiB,EAC3B,IAAI,EAAE,IAAI,CAAC,MAAM,EACjB,eAAe,EAAE,IAAI,CAAC,eAAe,IAErCA,qBAAS,IAAI,EAAEG,mBAAQ,CAAC,YAAY,GAAI,EACxCH,4BAAgB,CACA,CACf,CACN,CAAC;KACH,CAAC,CACC,EACLA,oBAAQ,IAAI,EAAC,qBAAqB,IAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAU,CAChE,CACD,EACP;GACH;;AA9ED;EADCI,eAAO,CAAC,MAAM,CAAC;8CAGf;;;;;","names":["parseIfString","h","Host","index","IconName","Memoize"],"sources":["./src/components/molecules/breadcrumb/breadcrumb.scss?tag=bs-breadcrumb&encapsulation=shadow","./src/components/molecules/breadcrumb/breadcrumb.tsx"],"sourcesContent":[":host .breadcrumb {\n  display: flex;\n  flex-flow: wrap;\n  gap: rem(12);\n  width: fit-content;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n\n:host .breadcrumb-item {\n  @include font(cta-label-secondary);\n  display: flex;\n  gap: rem(12);\n  align-items: center;\n  padding: 0;\n  overflow: hidden;\n  line-height: 1;\n  white-space: nowrap;\n\n  bs-icon {\n    font-size: rem(24);\n  }\n}\n\n.is-active {\n  --button--font-weight: #{font-weight('bold')};\n}\n\n:host .breadcrumb-item.is-b-mark {\n  bs-icon {\n    padding: rem(3);\n    font-size: rem(18);\n  }\n}\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BreadcrumbData } from './breadcrumb.types';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { BsClickActionCustomEvent } from '../../../components';\nimport { BsClickAction } from '../../atoms/click-action/click-action';\n\n/**\n * The breadcrumb component.\n */\n\n@Component({\n  tag: 'bs-breadcrumb',\n  styleUrl: 'breadcrumb.scss',\n  shadow: true,\n})\nexport class BsBreadcrumb {\n  private action = 'unwrap';\n\n  private wrapper = 'wrapper';\n\n  /** States */\n  @State() wrapped: boolean = true;\n\n  @State() displayedItems: Array<BreadcrumbData | string> = [];\n\n  /** Props */\n  /**\n   * Breadcrumb items data.\n   */\n  @Prop() data: BreadcrumbData[] | string;\n\n  @Memoize('data')\n  get parsedData(): BreadcrumbData[] {\n    return parseIfString(this.data);\n  }\n\n  /** Methods */\n  private onBsButtonClick = (e: BsClickActionCustomEvent<BsClickAction>) => {\n    if (e.detail.name === this.action) {\n      this.displayedItems = [...this.parsedData];\n    }\n  };\n\n  componentWillLoad() {\n    this.displayedItems = [...this.parsedData];\n\n    if (this.parsedData.length > 4) {\n      this.displayedItems.splice(2, this.parsedData.length - 4, this.wrapper);\n    }\n  }\n\n  render() {\n    const schema = {\n      '@context': 'https://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        this.parsedData.map((item, index) => {\n          const breadcrumb = {\n            '@type': 'ListItem',\n            position: index + 1,\n            item: {\n              '@id': item.url,\n              name: item.pageTitle,\n            },\n          };\n\n          return breadcrumb;\n        }),\n      ],\n    };\n\n    return (\n      <Host>\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            {this.displayedItems.map((breadcrumbItem, index) => {\n              const isFirstItem = index === 0;\n              const isLastItem = index === this.displayedItems.length - 1;\n\n              return typeof breadcrumbItem !== 'string' ? (\n                <li>\n                  <bs-click-action\n                    tagClass={`breadcrumb-item ${isLastItem ? 'is-active' : ''} ${\n                      isFirstItem ? 'is-b-mark' : ''\n                    }`}\n                    href={breadcrumbItem.url}\n                    aria-current={isLastItem ? 'page' : ''}\n                  >\n                    <bs-icon name={isFirstItem ? IconName.BMark : IconName.CaretForward} />\n                    {!isFirstItem && <span>{breadcrumbItem.pageTitle}</span>}\n                  </bs-click-action>\n                </li>\n              ) : (\n                <li>\n                  <bs-click-action\n                    tagClass={'breadcrumb-item'}\n                    name={this.action}\n                    onBsClickAction={this.onBsButtonClick}\n                  >\n                    <bs-icon name={IconName.CaretForward} />\n                    <span>...</span>\n                  </bs-click-action>\n                </li>\n              );\n            })}\n          </ol>\n          <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n        </nav>\n      </Host>\n    );\n  }\n}\n"],"version":3}