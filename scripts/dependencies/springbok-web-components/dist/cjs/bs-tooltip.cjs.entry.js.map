{"file":"bs-tooltip.entry.cjs.js","mappings":"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","names":["throttle","h","Host","IconName"],"sources":["./src/components/molecules/tooltip/tooltip.scss?tag=bs-tooltip&encapsulation=shadow","./src/components/molecules/tooltip/tooltip.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n  display: inline;\n}\n\n:host .tooltip-button {\n  @include reset-text;\n\n  display: inline-flex;\n  align-items: center;\n  padding: 0.2em 0.5em;\n\n  font: inherit;\n\n  cursor: help;\n  background: $gray-900;\n  border: 0;\n  border-radius: rem(4);\n}\n\n:host .highlighted-term {\n  margin-right: 0.25em;\n  font-weight: font-weight('bold');\n}\n\n:host .tooltip {\n  position: relative;\n  display: inline-flex;\n}\n\n:host .icon-wrapper {\n  font-size: 1.2em;\n  line-height: 0;\n  color: inherit;\n  cursor: help;\n\n  background: transparent;\n  border: 0;\n\n  &.is-disabled {\n    pointer-events: none;\n  }\n}\n\n:host .content-wrapper {\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n\n  transition: $transition-smooth;\n  transition-property: visibility, opacity, transform;\n\n  transform: translateY(5px);\n\n  &.is-visible {\n    visibility: visible;\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n:host .content-panel {\n  $dropdown-triangle-height: rem(9);\n\n  @include z-index('tooltip');\n\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n\n  padding-bottom: $dropdown-triangle-height;\n  margin-bottom: 0.35em;\n\n  transform: translateX(-50%);\n\n  &:before {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n\n    width: rem(19);\n    height: calc(#{$dropdown-triangle-height} + 1px);\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n\n    content: '';\n\n    background: $gray-900;\n    border-radius: 0.25em 0 0;\n    transform: translateX(-50%) rotate(180deg);\n  }\n\n  &.is-below-icon {\n    top: 100%;\n    bottom: unset;\n\n    padding-top: $dropdown-triangle-height;\n    padding-bottom: unset;\n    margin-top: 0.35em;\n    margin-bottom: unset;\n\n    &:before {\n      top: 0;\n      bottom: unset;\n\n      transform: translateX(-50%);\n    }\n  }\n}\n\n:host .content {\n  position: relative;\n\n  width: max-content;\n  max-width: rem(360);\n  max-height: rem(200);\n  padding: 20px 24px;\n  overflow-y: auto;\n\n  font-size: font-size('small');\n  text-align: left;\n\n  pointer-events: visible;\n  background: $gray-900;\n\n  border-radius: rem(16);\n\n  @include mq('max', 'md') {\n    max-width: rem(300);\n  }\n}\n\n:host .title {\n  display: block;\n  margin-bottom: rem(5);\n  font-size: font-size('x-large');\n  font-weight: font-weight('bold');\n}\n","import { Component, Host, h, Prop, State, Element, Listen } from '@stencil/core';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { throttle } from '../../../utils/throttle';\n\n/**\n * Tooltip component.\n */\n@Component({\n  tag: 'bs-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true,\n})\nexport class BsTooltip {\n  /**\n   * Refs\n   */\n\n  private tooltipRef: HTMLElement;\n\n  private tooltipWrapperRef: HTMLElement;\n\n  private tooltipPanelRef: HTMLElement;\n\n  private tooltipContentRef: HTMLElement;\n\n  /**\n   * Properties\n   */\n\n  private handleKeydownFunction = this.handleKeydown.bind(this); // to be able to remove event with \".bind()\" function\n\n  private handleDocumentClickFunction = this.handleDocumentClick.bind(this); // to be able to remove event with \".bind()\" function\n\n  @Element() host: HTMLBsTooltipElement;\n\n  /**\n   * State\n   */\n\n  @State() bottomPosition: boolean = false;\n\n  @State() isContentVisible: boolean = false;\n\n  @State() isTransitioning: boolean = false;\n\n  /**\n   * Tooltip's title\n   */\n  @Prop() titleText: string;\n\n  /**\n   * Tooltip's text content\n   */\n  @Prop() contentText: string;\n\n  /**\n   * Events\n   */\n\n  // check tooltip position to avoid it overflowing the page\n  @Listen('resize', { target: 'window' })\n  setTooltipPosition() {\n    this.throttleMethod();\n  }\n\n  /**\n   * Methods\n   */\n\n  private onResize = () => {\n    const windowWidth = window.innerWidth;\n    const windowVerticalPadding = 10;\n    const windowHorizontalPadding = 10;\n\n    const windowContentWrapperTopBorder = windowVerticalPadding;\n    const windowContentWrapperLeftBorder = windowHorizontalPadding;\n    const windowContentWrapperRightBorder = windowWidth - windowHorizontalPadding;\n\n    const tooltipTopBorder = this.tooltipPanelRef.getBoundingClientRect().top;\n    const tooltipLeftBorder = this.tooltipPanelRef.getBoundingClientRect().left;\n    const tooltipRightBorder = this.tooltipPanelRef.getBoundingClientRect().right;\n\n    // if tooltip is not open\n    if (!this.isContentVisible) return;\n\n    // if tooltip overflows on top of window\n    if (!this.bottomPosition && tooltipTopBorder < windowContentWrapperTopBorder)\n      this.bottomPosition = true;\n\n    // if tooltip don't overflow on left and right of content width\n    if (\n      tooltipLeftBorder >= windowContentWrapperLeftBorder &&\n      tooltipRightBorder <= windowContentWrapperRightBorder\n    ) {\n      this.tooltipContentRef.style.transform = 'translateX(0px)';\n\n      return;\n    }\n\n    // if tooltip's right border overflows\n    if (tooltipRightBorder > windowContentWrapperRightBorder) {\n      const overflowAmount = windowContentWrapperRightBorder - tooltipRightBorder;\n\n      this.tooltipContentRef.style.transform = `translateX(${overflowAmount}px)`;\n\n      return;\n    }\n\n    // if tooltip's right border overflows\n    if (tooltipLeftBorder < windowContentWrapperLeftBorder) {\n      const overflowAmount =\n        tooltipLeftBorder >= 0\n          ? windowContentWrapperLeftBorder - tooltipLeftBorder\n          : windowContentWrapperLeftBorder + Math.abs(tooltipLeftBorder);\n\n      this.tooltipContentRef.style.transform = `translateX(${overflowAmount}px)`;\n    }\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  private openTooltip() {\n    this.isTransitioning = true;\n    this.isContentVisible = true;\n\n    this.setTooltipPosition();\n\n    window.addEventListener('keydown', this.handleKeydownFunction);\n    document.addEventListener('click', this.handleDocumentClickFunction);\n\n    // prevent click on tooltip trigger button when tooltip is transitioning\n    this.tooltipWrapperRef.addEventListener(\n      'transitionend',\n      () => {\n        this.isTransitioning = false;\n      },\n      { once: true }\n    );\n  }\n\n  private closeTooltip() {\n    this.isTransitioning = true;\n    this.isContentVisible = false;\n\n    window.removeEventListener('keydown', this.handleKeydownFunction);\n    document.removeEventListener('click', this.handleDocumentClickFunction);\n\n    // reset tooltip vertical position when closed\n    // because we only check \"top\" overflowing in setTooltipPosition()\n    this.tooltipWrapperRef.addEventListener(\n      'transitionend',\n      () => {\n        if (this.isContentVisible) return;\n\n        this.bottomPosition = false;\n        this.isTransitioning = false;\n      },\n      { once: true }\n    );\n  }\n\n  private handleKeydown(e: KeyboardEvent) {\n    if (e.key === 'Escape') this.closeTooltip();\n  }\n\n  private handleDocumentClick(e: MouseEvent) {\n    // need to use composedPath, because by default \"e.target\" will always be the Shadow DOM host\n    const clickTarget = e.composedPath()[0] as Node;\n\n    if (!this.isContentVisible) return;\n\n    // if click outside of tooltip\n    if (!this.tooltipRef.contains(clickTarget)) {\n      // close tooltip\n      this.closeTooltip();\n    }\n  }\n\n  private toggleTooltipOpening(e: MouseEvent) {\n    e.stopPropagation(); // to avoid issues with \"handleDocumentClick\" function\n\n    if (this.isTransitioning) return;\n\n    if (this.isContentVisible) {\n      this.closeTooltip();\n    } else {\n      this.openTooltip();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class=\"tooltip-button\"\n          onClick={this.toggleTooltipOpening.bind(this)}\n          onMouseEnter={this.openTooltip.bind(this)}\n          onMouseLeave={this.closeTooltip.bind(this)}\n        >\n          {/* Text slot */}\n          <span class=\"highlighted-term\">\n            <slot />\n          </span>\n\n          {/* Icon */}\n          <div\n            ref={(el) => {\n              this.tooltipRef = el;\n            }}\n            class=\"tooltip\"\n          >\n            {/* Icon */}\n            <div class={`icon-wrapper ${this.isTransitioning ? 'is-disabled' : ''}`}>\n              <bs-icon name={IconName.Help} />\n            </div>\n\n            {/* Content */}\n            <div\n              ref={(el) => {\n                this.tooltipWrapperRef = el;\n              }}\n              class={`content-wrapper ${this.isContentVisible ? 'is-visible' : ''}`}\n            >\n              <div\n                ref={(el) => {\n                  this.tooltipPanelRef = el;\n                }}\n                class={`content-panel ${this.bottomPosition ? 'is-below-icon' : ''}`}\n              >\n                <div\n                  ref={(el) => {\n                    this.tooltipContentRef = el;\n                  }}\n                  class=\"content\"\n                >\n                  <span class=\"title\" innerHTML={this.titleText}></span>\n                  <p innerHTML={this.contentText}></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </button>\n      </Host>\n    );\n  }\n}\n"],"version":3}