{"file":"bs-date.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,OAAO,GAAG,wqNAAwqN;;MCU3qN,MAAM;;;uBACe,IAAI;+BAEI,IAAI;;;mBAehB,KAAK;;EAEzB,eAAe;IACrB,MAAM,KAAK,GAAG,iDAAiD,CAAC;IAEhE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC1C;EAEO,uBAAuB;IAC7B,MAAM,KAAK,GAAG,4BAA4B,CAAC;IAE3C,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;GAC7D;EAEO,UAAU;IAChB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,MAAM,MAAM,GAAyB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC5F,MAAM,OAAO,GAA+B;MAC1C,IAAI,EAAE,SAAS;MACf,KAAK,EAAE,MAAM;MACb,GAAG,EAAE,SAAS;KACf,CAAC;IAEF,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;GACjD;EAED,mBAAmB;IACjB,IAAI,CAAC,eAAe,EAAE,CAAC;IACvB,IAAI,CAAC,uBAAuB,EAAE,CAAC;GAChC;EAED,MAAM;IACJ,QACEA,QAACC,UAAI,QACHD,iBAAK,KAAK,EAAE,QAAQ,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,EAAE,IACjD,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE,CAClC,CACD,EACP;GACH;;;;;;","names":["h","Host"],"sources":["./src/components/atoms/date/date.scss?tag=bs-date&encapsulation=shadow","./src/components/atoms/date/date.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n}\n\n:host .is-white {\n  color: $white;\n}\n","import { Component, Host, h, Prop, State } from '@stencil/core';\n\n/**\n * Date component.\n */\n@Component({\n  tag: 'bs-date',\n  styleUrl: 'date.scss',\n  shadow: true,\n})\nexport class BsDate {\n  @State() isDateValid: boolean = true;\n\n  @State() isLanguageCodeValid: boolean = true;\n\n  /**\n   * Raw date string in yyyy-mm-dd format\n   */\n  @Prop() date: string;\n\n  /**\n   * Language's iso code\n   */\n  @Prop() languageIsoCode: string;\n\n  /**\n   * Has white text?\n   */\n  @Prop() isWhite?: boolean = false;\n\n  private checkDateFormat() {\n    const regex = /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1])$/;\n\n    this.isDateValid = regex.test(this.date);\n  }\n\n  private checkLanguageCodeFormat() {\n    const regex = /^[a-z]{2,3}(?:-[A-Z]{2})?$/;\n\n    this.isLanguageCodeValid = regex.test(this.languageIsoCode);\n  }\n\n  private renderDate() {\n    const date = new Date(this.date);\n    const locale: Intl.LocalesArgument = this.isLanguageCodeValid ? this.languageIsoCode : 'en';\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n\n    return date.toLocaleDateString(locale, options);\n  }\n\n  componentWillRender() {\n    this.checkDateFormat();\n    this.checkLanguageCodeFormat();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`date ${this.isWhite ? 'is-white' : ''}`}>\n          {this.isDateValid && this.renderDate()}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}