{"version":3,"file":"default-layout.js","sourceRoot":"","sources":["../../../../src/components/layouts/default-layout/default-layout.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Listen,\n  Event,\n  EventEmitter,\n  Method,\n} from '@stencil/core';\nimport { parseIfString } from '@springbokagency/stencil-base';\nimport { BaseModalId } from '../../organisms/base-modal/base-modal.types';\nimport { ColorTheme, TouchDirections } from './default-layout.types';\nimport { BsImageCarousel } from '../../organisms/image-carousel/image-carousel';\nimport { BsExperienceZoneModal } from '../../molecules/experience-zone-modal/experience-zone-modal';\nimport { BsTestBadgeModal } from '../../organisms/test-badge-modal/test-badge-modal';\nimport { HeaderNavigation } from '../../organisms/overlay-menu/overlay-menu.types';\n\n/**\n * Default layout component.\n */\n@Component({\n  tag: 'bs-default-layout',\n  styleUrl: 'default-layout.scss',\n  shadow: true,\n})\nexport class BsDefaultLayout {\n  private touchStartX = 0;\n\n  private touchEndX = 0;\n\n  private touchThreshold = 150;\n\n  /** States */\n  @State() overlayMenuIsOpen: boolean;\n\n  @State() overlayMenuData: HeaderNavigation;\n\n  @State() youtubeModalIsOpen: boolean;\n\n  @State() youtubeModalData: { videoId: string; mute: boolean };\n\n  @State() carouselModalIsOpen: boolean;\n\n  @State() carouselModalData: BsImageCarousel;\n\n  @State() experienceZoneModalIsOpen: boolean;\n\n  @State() experienceZoneModalData: BsExperienceZoneModal;\n\n  @State() testBadgeModalIsOpen: boolean;\n\n  @State() testBadgeModalData: BsTestBadgeModal;\n\n  /** Props */\n  /**\n   * Color theme\n   */\n  @Prop() theme: ColorTheme = ColorTheme.Default;\n\n  /** Listeners */\n\n  @Listen('bsClickAction')\n  @Listen('bsButtonClick')\n  bsClickActionHandler(e: CustomEvent) {\n    e.stopPropagation();\n\n    const name = e.detail.name || e.detail.action;\n\n    switch (name) {\n      case 'open-overlay-menu':\n        this.overlayMenuData = e.detail.value;\n        this.overlayMenuIsOpen = true;\n        break;\n\n      case 'open-youtube-modal':\n        this.youtubeModalData = parseIfString(e.detail.value);\n        this.youtubeModalIsOpen = true;\n        break;\n\n      case 'open-carousel-modal':\n        this.carouselModalData = e.detail.value;\n        this.carouselModalIsOpen = true;\n        break;\n\n      case 'open-experience-zone-modal':\n        this.experienceZoneModalData = e.detail.value;\n        this.experienceZoneModalIsOpen = true;\n        break;\n\n      case 'open-test-badge-modal':\n        this.testBadgeModalData = parseIfString(e.detail.value);\n        this.testBadgeModalIsOpen = true;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  @Listen('bsModalIsClosed')\n  bsModalIsClosedHandler(e: CustomEvent) {\n    switch (e.detail.modalId) {\n      case BaseModalId.OverlayMenu:\n        this.overlayMenuIsOpen = false;\n        break;\n\n      case BaseModalId.Media:\n        this.youtubeModalIsOpen = false;\n        this.carouselModalIsOpen = false;\n        this.experienceZoneModalIsOpen = false;\n        this.testBadgeModalIsOpen = false;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  @Listen('touchstart')\n  handleTouchStart(e: TouchEvent) {\n    this.touchStartX = e.touches[0].clientX;\n  }\n\n  @Listen('touchend')\n  handleTouchEnd(e: TouchEvent) {\n    this.touchEndX = e.changedTouches[0].clientX;\n    this.handleTouch();\n  }\n\n  /** Events */\n  /**\n   * Emitted when a swipe action is detected.\n   */\n  @Event() bsSwipeAction: EventEmitter<{ direction: TouchDirections }>;\n\n  /**\n   * Emitted when the youtube API script triggers the window.onYouTubeIframeAPIReady method.\n   */\n  @Event() bsYoutubeAPIReady: EventEmitter;\n\n  /** Methods */\n  @Method()\n  async handleTouch() {\n    if (this.touchEndX - this.touchStartX < -this.touchThreshold) {\n      this.bsSwipeAction.emit({ direction: TouchDirections.Left });\n    }\n\n    if (this.touchEndX - this.touchStartX > this.touchThreshold) {\n      this.bsSwipeAction.emit({ direction: TouchDirections.Right });\n    }\n  }\n\n  /** lifecycle hooks */\n  componentDidLoad() {\n    window.onYouTubePlayerAPIReady = () => {\n      this.bsYoutubeAPIReady.emit();\n    };\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`default-layout`}>\n          {/* Overlay Menu */}\n          {this.overlayMenuIsOpen && (\n            <bs-overlay-menu header-navigation={this.overlayMenuData}></bs-overlay-menu>\n          )}\n\n          <main>\n            <slot />\n          </main>\n\n          {/* Youtube modal */}\n          {this.youtubeModalIsOpen && <bs-youtube-video {...this.youtubeModalData} />}\n\n          {/* Carousel modal */}\n          {this.carouselModalIsOpen && <bs-image-carousel {...this.carouselModalData} />}\n\n          {/* Experience Zone modal */}\n          {this.experienceZoneModalIsOpen && (\n            <bs-experience-zone-modal {...this.experienceZoneModalData} />\n          )}\n\n          {/* Test Badge modal */}\n          {this.testBadgeModalIsOpen && <bs-test-badge-modal {...this.testBadgeModalData} />}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}