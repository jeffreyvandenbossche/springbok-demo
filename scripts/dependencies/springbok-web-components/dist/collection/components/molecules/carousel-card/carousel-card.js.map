{"version":3,"file":"carousel-card.js","sourceRoot":"","sources":["../../../../src/components/molecules/carousel-card/carousel-card.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAEvE,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD;;GAEG;AAMH,MAAM,OAAO,cAAc;;;oBAkBI,KAAK;gBAKT,KAAK;;;;gBAoBL,KAAK;;EAnC9B,IAAI,qBAAqB;IACvB,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,eAAe,CAAc,CAAC;IAChE,MAAM,MAAM,GAAG,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE7E,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EACjC,CAAC;EAgCD,MAAM;IACJ,MAAM,YAAY,GAAG;MACnB,IAAI,EAAE,IAAI,CAAC,IAAI;MACf,aAAa,EAAE,IAAI,CAAC,aAAa;MACjC,QAAQ,EAAE,IAAI,CAAC,QAAQ;MACvB,IAAI,EAAE,IAAI,CAAC,IAAI;MACf,eAAe,EAAE,IAAI,CAAC,eAAe;KACtC,CAAC;IAEF,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;MACrC,WAAK,KAAK,EAAC,eAAe;QACvB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAChD,uBACE,IAAI,EAAC,qBAAqB,EAC1B,KAAK,kBAAI,KAAK,IAAK,YAAY,GAC/B,KAAK,EAAC,WAAW;UAEjB,gBACE,KAAK,EAAC,YAAY,EAClB,GAAG,EAAE,KAAK,CAAC,GAAG,EACd,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,UAAU,EAAC,cAAc,EACzB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,KAAK,EAAE,IAAI,GACX,CACc,CACnB,CAAC;QAEF,uBACE,IAAI,EAAC,qBAAqB,EAC1B,KAAK,EAAC,WAAW,EACjB,KAAK,kBAAI,KAAK,EAAE,CAAC,IAAK,YAAY,GAClC,QAAQ,EAAC,eAAe;UAExB,YAAM,KAAK,EAAC,MAAM;YAChB,eAAS,IAAI,EAAE,QAAQ,CAAC,OAAO,GAAI,CAC9B;UACP,eAAS,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,GAAI,CACnC,CACd,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AApFC;EADC,OAAO,CAAC,iBAAiB,CAAC;2DAM1B","sourcesContent":["import { Component, Host, Prop, h } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsImage } from '../../atoms/image/image';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { TextSize } from '../../atoms/text/text.types';\n\n/**\n * Carousel card component.\n */\n@Component({\n  tag: 'bs-carousel-card',\n  styleUrl: 'carousel-card.scss',\n  shadow: true,\n})\nexport class BsCarouselCard {\n  /** Props */\n  /**\n   * The list of images to be shown in the carousel.\n   */\n  @Prop() imageCollection: BsImage[] | string;\n\n  @Memoize('imageCollection')\n  get parsedImageCollection(): BsImage[] {\n    const parsed = parseIfString(this.imageCollection) as BsImage[];\n    const length = compareBreakpoint('min', Breakpoint.md) && !this.slim ? 4 : 3;\n\n    return parsed.slice(0, length);\n  }\n\n  /**\n   * Should autoplay be enabled?\n   */\n  @Prop() autoplay?: boolean = false;\n\n  /**\n   * Should the autoplay be slow?\n   */\n  @Prop() slow?: boolean = false;\n\n  /**\n   * The title of the carousel displayed in the footer.\n   */\n  @Prop() carouselTitle?: string;\n\n  /**\n   * The logo to be displayed in the footer.\n   */\n  @Prop() logo?: BsImage | string;\n\n  /**\n   * The cta label.\n   */\n  @Prop() cta: string;\n\n  /**\n   * Should the carousel be displayed in slim variation.\n   */\n  @Prop() slim?: boolean = false;\n\n  render() {\n    const carouselData = {\n      logo: this.logo,\n      carouselTitle: this.carouselTitle,\n      autoplay: this.autoplay,\n      slow: this.slow,\n      imageCollection: this.imageCollection,\n    };\n\n    return (\n      <Host class={this.slim ? 'is-slim' : ''}>\n        <div class=\"carousel-card\">\n          {this.parsedImageCollection.map((image, index) => (\n            <bs-click-action\n              name=\"open-carousel-modal\"\n              value={{ index, ...carouselData }}\n              class=\"card-item\"\n            >\n              <bs-image\n                class=\"card-image\"\n                src={image.src}\n                srcset={image.srcset}\n                width={image.width}\n                height={image.height}\n                imageSizes=\"200px, 400px\"\n                altText={image.altText}\n                itemprop={image.itemprop}\n                cover={true}\n              />\n            </bs-click-action>\n          ))}\n\n          <bs-click-action\n            name=\"open-carousel-modal\"\n            class=\"card-item\"\n            value={{ index: 0, ...carouselData }}\n            tagClass=\"button-square\"\n          >\n            <span class=\"icon\">\n              <bs-icon name={IconName.Gallery} />\n            </span>\n            <bs-text text={this.cta} size={TextSize.Default} />\n          </bs-click-action>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}