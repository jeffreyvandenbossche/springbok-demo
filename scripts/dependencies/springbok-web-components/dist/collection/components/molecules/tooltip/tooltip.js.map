{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../../src/components/molecules/tooltip/tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, State, Element, Listen } from '@stencil/core';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { throttle } from '../../../utils/throttle';\n\n/**\n * Tooltip component.\n */\n@Component({\n  tag: 'bs-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true,\n})\nexport class BsTooltip {\n  /**\n   * Refs\n   */\n\n  private tooltipRef: HTMLElement;\n\n  private tooltipWrapperRef: HTMLElement;\n\n  private tooltipPanelRef: HTMLElement;\n\n  private tooltipContentRef: HTMLElement;\n\n  /**\n   * Properties\n   */\n\n  private handleKeydownFunction = this.handleKeydown.bind(this); // to be able to remove event with \".bind()\" function\n\n  private handleDocumentClickFunction = this.handleDocumentClick.bind(this); // to be able to remove event with \".bind()\" function\n\n  @Element() host: HTMLBsTooltipElement;\n\n  /**\n   * State\n   */\n\n  @State() bottomPosition: boolean = false;\n\n  @State() isContentVisible: boolean = false;\n\n  @State() isTransitioning: boolean = false;\n\n  /**\n   * Tooltip's title\n   */\n  @Prop() titleText: string;\n\n  /**\n   * Tooltip's text content\n   */\n  @Prop() contentText: string;\n\n  /**\n   * Events\n   */\n\n  // check tooltip position to avoid it overflowing the page\n  @Listen('resize', { target: 'window' })\n  setTooltipPosition() {\n    this.throttleMethod();\n  }\n\n  /**\n   * Methods\n   */\n\n  private onResize = () => {\n    const windowWidth = window.innerWidth;\n    const windowVerticalPadding = 10;\n    const windowHorizontalPadding = 10;\n\n    const windowContentWrapperTopBorder = windowVerticalPadding;\n    const windowContentWrapperLeftBorder = windowHorizontalPadding;\n    const windowContentWrapperRightBorder = windowWidth - windowHorizontalPadding;\n\n    const tooltipTopBorder = this.tooltipPanelRef.getBoundingClientRect().top;\n    const tooltipLeftBorder = this.tooltipPanelRef.getBoundingClientRect().left;\n    const tooltipRightBorder = this.tooltipPanelRef.getBoundingClientRect().right;\n\n    // if tooltip is not open\n    if (!this.isContentVisible) return;\n\n    // if tooltip overflows on top of window\n    if (!this.bottomPosition && tooltipTopBorder < windowContentWrapperTopBorder)\n      this.bottomPosition = true;\n\n    // if tooltip don't overflow on left and right of content width\n    if (\n      tooltipLeftBorder >= windowContentWrapperLeftBorder &&\n      tooltipRightBorder <= windowContentWrapperRightBorder\n    ) {\n      this.tooltipContentRef.style.transform = 'translateX(0px)';\n\n      return;\n    }\n\n    // if tooltip's right border overflows\n    if (tooltipRightBorder > windowContentWrapperRightBorder) {\n      const overflowAmount = windowContentWrapperRightBorder - tooltipRightBorder;\n\n      this.tooltipContentRef.style.transform = `translateX(${overflowAmount}px)`;\n\n      return;\n    }\n\n    // if tooltip's right border overflows\n    if (tooltipLeftBorder < windowContentWrapperLeftBorder) {\n      const overflowAmount =\n        tooltipLeftBorder >= 0\n          ? windowContentWrapperLeftBorder - tooltipLeftBorder\n          : windowContentWrapperLeftBorder + Math.abs(tooltipLeftBorder);\n\n      this.tooltipContentRef.style.transform = `translateX(${overflowAmount}px)`;\n    }\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  private openTooltip() {\n    this.isTransitioning = true;\n    this.isContentVisible = true;\n\n    this.setTooltipPosition();\n\n    window.addEventListener('keydown', this.handleKeydownFunction);\n    document.addEventListener('click', this.handleDocumentClickFunction);\n\n    // prevent click on tooltip trigger button when tooltip is transitioning\n    this.tooltipWrapperRef.addEventListener(\n      'transitionend',\n      () => {\n        this.isTransitioning = false;\n      },\n      { once: true }\n    );\n  }\n\n  private closeTooltip() {\n    this.isTransitioning = true;\n    this.isContentVisible = false;\n\n    window.removeEventListener('keydown', this.handleKeydownFunction);\n    document.removeEventListener('click', this.handleDocumentClickFunction);\n\n    // reset tooltip vertical position when closed\n    // because we only check \"top\" overflowing in setTooltipPosition()\n    this.tooltipWrapperRef.addEventListener(\n      'transitionend',\n      () => {\n        if (this.isContentVisible) return;\n\n        this.bottomPosition = false;\n        this.isTransitioning = false;\n      },\n      { once: true }\n    );\n  }\n\n  private handleKeydown(e: KeyboardEvent) {\n    if (e.key === 'Escape') this.closeTooltip();\n  }\n\n  private handleDocumentClick(e: MouseEvent) {\n    // need to use composedPath, because by default \"e.target\" will always be the Shadow DOM host\n    const clickTarget = e.composedPath()[0] as Node;\n\n    if (!this.isContentVisible) return;\n\n    // if click outside of tooltip\n    if (!this.tooltipRef.contains(clickTarget)) {\n      // close tooltip\n      this.closeTooltip();\n    }\n  }\n\n  private toggleTooltipOpening(e: MouseEvent) {\n    e.stopPropagation(); // to avoid issues with \"handleDocumentClick\" function\n\n    if (this.isTransitioning) return;\n\n    if (this.isContentVisible) {\n      this.closeTooltip();\n    } else {\n      this.openTooltip();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class=\"tooltip-button\"\n          onClick={this.toggleTooltipOpening.bind(this)}\n          onMouseEnter={this.openTooltip.bind(this)}\n          onMouseLeave={this.closeTooltip.bind(this)}\n        >\n          {/* Text slot */}\n          <span class=\"highlighted-term\">\n            <slot />\n          </span>\n\n          {/* Icon */}\n          <div\n            ref={(el) => {\n              this.tooltipRef = el;\n            }}\n            class=\"tooltip\"\n          >\n            {/* Icon */}\n            <div class={`icon-wrapper ${this.isTransitioning ? 'is-disabled' : ''}`}>\n              <bs-icon name={IconName.Help} />\n            </div>\n\n            {/* Content */}\n            <div\n              ref={(el) => {\n                this.tooltipWrapperRef = el;\n              }}\n              class={`content-wrapper ${this.isContentVisible ? 'is-visible' : ''}`}\n            >\n              <div\n                ref={(el) => {\n                  this.tooltipPanelRef = el;\n                }}\n                class={`content-panel ${this.bottomPosition ? 'is-below-icon' : ''}`}\n              >\n                <div\n                  ref={(el) => {\n                    this.tooltipContentRef = el;\n                  }}\n                  class=\"content\"\n                >\n                  <span class=\"title\" innerHTML={this.titleText}></span>\n                  <p innerHTML={this.contentText}></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </button>\n      </Host>\n    );\n  }\n}\n"]}