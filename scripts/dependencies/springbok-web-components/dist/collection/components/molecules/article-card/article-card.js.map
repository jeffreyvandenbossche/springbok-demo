{"version":3,"file":"article-card.js","sourceRoot":"","sources":["../../../../src/components/molecules/article-card/article-card.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAEvE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AAChF,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD;;GAEG;AAMH,MAAM,OAAO,aAAa;;;;;;;EAOxB,IAAI,kBAAkB;IACpB,OAAO,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EAC1C,CAAC;EAiBD,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,uBAAiB,KAAK,EAAC,cAAc,EAAC,IAAI,EAAE,IAAI,CAAC,WAAW;QAC1D,WAAK,KAAK,EAAC,cAAc;UACvB,gBACE,KAAK,EAAC,eAAe,EACrB,GAAG,EAAE,QAAQ,CAAC,IAAI,EAClB,IAAI,EAAE,SAAS,CAAC,KAAK,EACrB,IAAI,EAAE,IAAI,CAAC,YAAY,EACvB,KAAK,EAAE,UAAU,CAAC,KAAK,GACvB;UACF,iBACE,KAAK,EAAC,gBAAgB,EACtB,IAAI,EAAE,IAAI,CAAC,UAAU,EACrB,SAAS,EAAE,QAAQ,CAAC,YAAY,EAChC,IAAI,EAAE,IAAI,CAAC,WAAW,EACtB,OAAO,EAAE,aAAa,CAAC,IAAI,GAC3B;UACF,gBACE,KAAK,EAAC,eAAe,EACrB,KAAK,EAAE,IAAI,EACX,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAChC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,EACtC,UAAU,EAAC,cAAc,EACzB,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,GACxC,CACE,CACU,CACb,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AAnDC;EADC,OAAO,CAAC,cAAc,CAAC;uDAGvB","sourcesContent":["import { Component, Host, h, Prop } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport type { BsImage } from '../../atoms/image/image';\nimport { TitleColor, TitleSize, TitleTag } from '../../atoms/title/title.types';\nimport { ButtonVariant } from '../../atoms/button/button.types';\nimport { IconName } from '../../atoms/icon/icon.types';\n\n/**\n * Article teaser card component.\n */\n@Component({\n  tag: 'bs-article-card',\n  styleUrl: 'article-card.scss',\n  shadow: true,\n})\nexport class BsArticleCard {\n  /**\n   * The article related image.\n   */\n  @Prop() articleImage: BsImage | string;\n\n  @Memoize('articleImage')\n  get parsedArticleImage(): BsImage {\n    return parseIfString(this.articleImage);\n  }\n\n  /**\n   * The article title.\n   */\n  @Prop() articleTitle: string;\n\n  /**\n   * The cta label.\n   */\n  @Prop() articleCta: string;\n\n  /**\n   * The article href.\n   */\n  @Prop() articleHref: string;\n\n  render() {\n    return (\n      <Host>\n        <bs-click-action class=\"click-action\" href={this.articleHref}>\n          <div class=\"article-card\">\n            <bs-title\n              class=\"article-title\"\n              tag={TitleTag.Span}\n              size={TitleSize.Head5}\n              text={this.articleTitle}\n              color={TitleColor.White}\n            />\n            <bs-button\n              class=\"article-button\"\n              text={this.articleCta}\n              iconRight={IconName.CaretForward}\n              href={this.articleHref}\n              variant={ButtonVariant.Text}\n            />\n            <bs-image\n              class=\"article-image\"\n              cover={true}\n              src={this.parsedArticleImage.src}\n              srcset={this.parsedArticleImage.srcset}\n              imageSizes=\"200px, 400px\"\n              altText={this.parsedArticleImage.altText}\n            />\n          </div>\n        </bs-click-action>\n      </Host>\n    );\n  }\n}\n"]}