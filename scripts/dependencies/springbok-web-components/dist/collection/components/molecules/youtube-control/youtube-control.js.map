{"version":3,"file":"youtube-control.js","sourceRoot":"","sources":["../../../../src/components/molecules/youtube-control/youtube-control.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { isEmpty } from '@springbokagency/stencil-base';\nimport {\n  PlayerState,\n  YoutubeControlUpdateEvent,\n} from '../../organisms/youtube-video/youtube-video.types';\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { BsClickActionCustomEvent, ClickActionEvent } from '../../../components';\nimport { YoutubeControlClickEvent } from './youtube-control.types';\n\n/**\n * Youtube controls component.\n */\n@Component({\n  tag: 'bs-youtube-control',\n  styleUrl: 'youtube-control.scss',\n  shadow: true,\n})\nexport class BsYoutubeControl {\n  @State() videoActive: boolean = false;\n\n  /** Props */\n  /** The video ID the controller belongs to. */\n  @Prop() videoId!: string;\n\n  /** The playing state of the youtube Player. */\n  @Prop() playerState?: PlayerState = PlayerState.UNSTARTED;\n\n  /** Is the video muted. */\n  @Prop() mute?: boolean = true;\n\n  /** The video current progress time. */\n  @Prop() currentTime?: number = 0;\n\n  /** Events */\n  /**\n   * Youtube control event\n   */\n  @Event() bsYoutubeControllerClick: EventEmitter<YoutubeControlClickEvent>;\n\n  /** Listeners */\n  @Listen('bsYoutubeControllerUpdate', { target: 'window' })\n  bsYoutubeControllerUpdateHandler(e: CustomEvent<YoutubeControlUpdateEvent>) {\n    if (this.videoId === e.detail.id) {\n      this.mute = e.detail.mute;\n      this.playerState = e.detail.playerState;\n      this.currentTime = isEmpty(e.detail.currentTime) ? 0 : e.detail.currentTime;\n      this.videoActive = [PlayerState.PLAYING, PlayerState.PAUSED, PlayerState.BUFFERING].includes(\n        e.detail.playerState\n      );\n    }\n  }\n\n  /** Methods */\n  private onButtonClick = (e: BsClickActionCustomEvent<ClickActionEvent>) => {\n    this.bsYoutubeControllerClick.emit({\n      id: this.videoId,\n      action: e.detail.name,\n      value: e.detail.value,\n    });\n  };\n\n  private onSliderChange = (e: InputEvent) => {\n    const el = e.target as HTMLInputElement;\n\n    this.bsYoutubeControllerClick.emit({\n      id: this.videoId,\n      action: 'progress-bar-input',\n      value: el.valueAsNumber,\n    });\n  };\n\n  render() {\n    return (\n      <Host>\n        <div class=\"youtube-control\">\n          <div class=\"media-control-bar\">\n            <bs-click-action\n              name=\"play\"\n              tagClass=\"youtube-control-button\"\n              onBsClickAction={this.onButtonClick}\n              value={\n                this.playerState === PlayerState.PLAYING ? PlayerState.PAUSED : PlayerState.PLAYING\n              }\n            >\n              <bs-icon\n                name={\n                  [PlayerState.PLAYING, PlayerState.BUFFERING].includes(this.playerState)\n                    ? IconName.Pause\n                    : IconName.Play\n                }\n              />\n            </bs-click-action>\n            <input\n              onInput={this.onSliderChange}\n              value={this.currentTime}\n              type=\"range\"\n              id=\"vol\"\n              name=\"vol\"\n              min=\"0\"\n              max=\"100\"\n              class=\"slider\"\n              step=\"0.1\"\n              disabled={!this.videoActive}\n            ></input>\n            <bs-click-action\n              name=\"mute\"\n              tagClass=\"youtube-control-button\"\n              onBsClickAction={(e) => {\n                this.mute = !this.mute;\n                this.onButtonClick(e);\n              }}\n            >\n              <bs-icon name={this.mute ? IconName.Mute : IconName.Volume} />\n            </bs-click-action>\n\n            <bs-click-action\n              name=\"fullscreen\"\n              tagClass=\"youtube-control-button\"\n              onBsClickAction={this.onButtonClick}\n              disabled={!this.videoActive}\n            >\n              <bs-icon name={IconName.Resize} />\n            </bs-click-action>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}