{"version":3,"file":"newsletter-banner.js","sourceRoot":"","sources":["../../../../src/components/molecules/newsletter-banner/newsletter-banner.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAEvE,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAClF,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAE3E;;GAEG;AAMH,MAAM,OAAO,kBAAkB;;;;;;EAiB7B,IAAI,YAAY;IACd,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACpC,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAC,mBAAmB;QAC5B,WAAK,KAAK,EAAC,cAAc;UACvB,gBACE,GAAG,EAAE,QAAQ,CAAC,EAAE,EAChB,IAAI,EAAE,IAAI,CAAC,YAAY,EACvB,IAAI,EAAE,SAAS,CAAC,KAAK,EACrB,OAAO,EAAE,YAAY,CAAC,KAAK,GAC3B;UACF,eAAS,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,KAAK,GAAI,CAClD;QAEN,iCACM,IAAI,CAAC,YAAY,IACrB,WAAW,EAAE,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EACpD,OAAO,EAAE,aAAa,CAAC,OAAO,IAC9B,CACE,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AA3BC;EADC,OAAO,CAAC,QAAQ,CAAC;sDAGjB","sourcesContent":["import { Component, Host, h, Prop } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsButton } from '../../atoms/button/button';\nimport { ButtonVariant } from '../../atoms/button/button.types';\nimport { TextSize } from '../../atoms/text/text.types';\nimport { TitleSize, TitleTag, TitleVariant } from '../../atoms/title/title.types';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\n\n/**\n * Newsletter banner component.\n */\n@Component({\n  tag: 'bs-newsletter-banner',\n  styleUrl: 'newsletter-banner.scss',\n  shadow: true,\n})\nexport class BsNewsletterBanner {\n  /**\n   * Section's title\n   */\n  @Prop() sectionTitle: string;\n\n  /**\n   * Subtitle\n   */\n  @Prop() subtitle: string;\n\n  /**\n   * Description.\n   */\n  @Prop() button: BsButton | string;\n\n  @Memoize('button')\n  get parsedButton(): BsButton {\n    return parseIfString(this.button);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"newsletter-banner\">\n          <div class=\"text-wrapper\">\n            <bs-title\n              tag={TitleTag.H2}\n              text={this.sectionTitle}\n              size={TitleSize.Head2}\n              variant={TitleVariant.Slash}\n            />\n            <bs-text text={this.subtitle} size={TextSize.Small} />\n          </div>\n\n          <bs-button\n            {...this.parsedButton}\n            isFullWidth={compareBreakpoint('max', Breakpoint.md)}\n            variant={ButtonVariant.Primary}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"]}