{"version":3,"file":"image-carousel.js","sourceRoot":"","sources":["../../../../src/components/organisms/image-carousel/image-carousel.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport type { BsImage } from '../../atoms/image/image';\nimport { Breakpoint, compareBreakpoint } from '../../../utils/breakpoints';\nimport { throttle } from '../../../utils/throttle';\nimport { TouchDirections } from '../../layouts/default-layout/default-layout.types';\n\n/**\n * The image carousel component.\n */\n@Component({\n  tag: 'bs-image-carousel',\n  styleUrl: 'image-carousel.scss',\n  shadow: true,\n})\nexport class BsImageCarousel {\n  private timeout: NodeJS.Timeout;\n\n  private focusedImageRef: HTMLBsImageElement;\n\n  private thumbnailWrapRef: HTMLDivElement;\n\n  private overlayRef: HTMLBsDarkOverlayElement;\n\n  @State() desktop: boolean = compareBreakpoint('min', Breakpoint.md);\n\n  /** Props */\n  /**\n   * The list of images to be shown in the carousel.\n   */\n  @Prop() imageCollection: BsImage[] | string;\n\n  @Memoize('imageCollection')\n  get parsedImageCollection(): BsImage[] {\n    return parseIfString(this.imageCollection);\n  }\n\n  /**\n   * The index of the featured image.\n   */\n  @Prop() index: number = 0;\n\n  @Watch('index')\n  handleIndexChange() {\n    clearTimeout(this.timeout);\n    this.setTimer();\n    this.autoscrollThumbnails();\n  }\n\n  /**\n   * Should autoplay be enabled?\n   */\n  @Prop() autoplay?: boolean = false;\n\n  /**\n   * Should the autoplay be slow?\n   */\n  @Prop() slow?: boolean = false;\n\n  /**\n   * The title of the carousel displayed in the footer.\n   */\n  @Prop() carouselTitle?: string;\n\n  /**\n   * The logo to be displayed in the footer.\n   */\n  @Prop() logo?: BsImage | string;\n\n  /** methods */\n\n  private onResize = () => {\n    this.desktop = compareBreakpoint('min', Breakpoint.md);\n  };\n\n  private throttleMethod = throttle(this.onResize, 1000);\n\n  private updateIndex = (newValue) => {\n    this.focusedImageRef.classList.add('fade-out');\n\n    this.focusedImageRef.addEventListener('animationend', () => {\n      if (newValue > this.parsedImageCollection.length - 1) {\n        this.index = 0;\n      } else if (newValue < 0) {\n        this.index = this.parsedImageCollection.length - 1;\n      } else {\n        this.index = newValue;\n      }\n\n      this.focusedImageRef.classList.remove('fade-out');\n    });\n  };\n\n  private setTimer = () => {\n    if (this.autoplay) {\n      this.timeout = setTimeout(\n        () => {\n          this.updateIndex(this.index + 1);\n        },\n        this.slow ? 30000 : 15000\n      );\n    }\n  };\n\n  private autoscrollThumbnails() {\n    this.thumbnailWrapRef\n      .getElementsByClassName('thumbnail--active')[0]\n      .scrollIntoView({ behavior: 'smooth', inline: 'center' });\n  }\n\n  /** Listeners */\n  @Listen('bsSwipeAction', { target: 'window' })\n  handleBsSwipeAction(e: CustomEvent) {\n    if (e.detail.direction === TouchDirections.Left) {\n      this.overlayRef.nextSlide();\n    }\n\n    if (e.detail.direction === TouchDirections.Right) {\n      this.overlayRef.previousSlide();\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  handleScreenResized() {\n    this.throttleMethod();\n  }\n\n  @Listen('bsNextSlideAction')\n  handleNextMedia() {\n    this.updateIndex(this.index + 1);\n  }\n\n  @Listen('bsPreviousSlideAction')\n  handlePreviousMedia() {\n    this.updateIndex(this.index - 1);\n  }\n\n  render() {\n    return (\n      <Host>\n        <bs-dark-overlay\n          ref={(el) => {\n            this.overlayRef = el;\n          }}\n          mainTitle={this.carouselTitle}\n          screens={this.parsedImageCollection.length > 1}\n          logo={this.logo}\n        >\n          <div slot=\"media\" class=\"image-carousel\">\n            <div class=\"carousel-body\">\n              <bs-image\n                ref={(el) => {\n                  this.focusedImageRef = el;\n                }}\n                class=\"focused-image\"\n                src={this.parsedImageCollection[this.index].src}\n                srcset={this.parsedImageCollection[this.index].srcset}\n                width={this.parsedImageCollection[this.index].width}\n                height={this.parsedImageCollection[this.index].height}\n                altText={this.parsedImageCollection[this.index].altText}\n                itemprop={this.parsedImageCollection[this.index].itemprop}\n                caption={this.parsedImageCollection[this.index].caption}\n                captionCover={this.desktop}\n                cover={this.desktop}\n              />\n              <div class=\"counter\">\n                {this.index + 1}/{this.parsedImageCollection.length}\n              </div>\n            </div>\n            <div\n              class=\"carousel-footer\"\n              ref={(el) => {\n                this.thumbnailWrapRef = el;\n              }}\n            >\n              <div class=\"thumbnail-wrap\">\n                {this.parsedImageCollection.map((thumbnail, index) => (\n                  <bs-image\n                    class={`thumbnail ${index === this.index && 'thumbnail--active'}`}\n                    src={thumbnail.src}\n                    srcset={thumbnail.srcset}\n                    width={thumbnail.width}\n                    height={thumbnail.height}\n                    image-sizes=\"200px, 400px\"\n                    alt-text={thumbnail.altText}\n                    itemprop={this.parsedImageCollection[this.index].itemprop}\n                    cover={true}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </bs-dark-overlay>\n      </Host>\n    );\n  }\n}\n"]}