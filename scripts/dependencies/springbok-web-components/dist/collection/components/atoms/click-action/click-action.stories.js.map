{"version":3,"file":"click-action.stories.js","sourceRoot":"","sources":["../../../../src/components/atoms/click-action/click-action.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAElD,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAE1E,MAAM,IAAI,GAAmC;EAC3C,KAAK,EAAE,kCAAkC;EACzC,SAAS,EAAE,iBAAiB;EAC5B,QAAQ,EAAE;IACR,IAAI,EAAE;MACJ,OAAO,EAAE,MAAM;KAChB;IACD,KAAK,EAAE;MACL,OAAO,EAAE,MAAM;KAChB;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC;KACxC;IACD,IAAI,EAAE;MACJ,OAAO,EAAE,MAAM;MACf,YAAY,EAAE,SAAS;KACxB;IACD,MAAM,EAAE;MACN,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;KAC1D;IACD,QAAQ,EAAE;MACR,OAAO,EAAE,SAAS;KACnB;GACF;EACD,IAAI,EAAE;IACJ,IAAI,EAAE,sBAAsB;IAC5B,KAAK,EAAE,uBAAuB;IAC9B,IAAI,EAAE,eAAe,CAAC,MAAM;IAC5B,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,SAAS;IACjB,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE,SAAS;GACrB;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAEpB,MAAM,CAAC,MAAM,OAAO,GAAuC;EACzD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CACf,IAAI,CAAA;aACK,IAAI,CAAC,IAAI;cACR,IAAI,CAAC,KAAK;aACX,IAAI,CAAC,IAAI;aACT,IAAI,CAAC,IAAI;eACP,IAAI,CAAC,MAAM;iBACT,IAAI,CAAC,QAAQ;wBACN,IAAI,CAAC,aAAa;uBACnB,MAAM,CAAC,eAAe,CAAC;;;uBAGvB;CACtB,CAAC","sourcesContent":["import { html } from 'lit-html';\nimport { action } from '@storybook/addon-actions';\nimport type { Meta, StoryObj } from '@storybook/web-components';\nimport { ClickActionTarget, ClickActionType } from './click-action.types';\n\nconst meta: Meta<HTMLBsClickActionElement> = {\n  title: 'components/atoms/bs-click-action',\n  component: 'bs-click-action',\n  argTypes: {\n    name: {\n      control: 'text',\n    },\n    value: {\n      control: 'text',\n    },\n    type: {\n      control: 'select',\n      options: Object.values(ClickActionType),\n    },\n    href: {\n      control: 'text',\n      defaultValue: undefined,\n    },\n    target: {\n      control: 'select',\n      options: [undefined, ...Object.values(ClickActionTarget)],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n  },\n  args: {\n    name: 'bs-click-action name',\n    value: 'bs-click-action value',\n    type: ClickActionType.Button,\n    href: undefined,\n    target: undefined,\n    disabled: false,\n    ariaLabel: undefined,\n  },\n};\n\nexport default meta;\n\nexport const Default: StoryObj<HTMLBsClickActionElement> = {\n  render: (args) =>\n    html`<bs-click-action\n      name=${args.name}\n      value=${args.value}\n      type=${args.type}\n      href=${args.href}\n      target=${args.target}\n      disabled=${args.disabled}\n      aria-label-text=${args.ariaLabelText}\n      @bsClickAction=${action('bsClickAction')}\n    >\n      Put the component on which you want an click event in this component\n    </bs-click-action>`,\n};\n"]}