{"version":3,"file":"getActiveElement.js","sourceRoot":"","sources":["../../src/utils/getActiveElement.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AAExD,MAAM,UAAU,gBAAgB,CAAC,OAA8B,QAAQ;EACrE,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;EAEpC,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;IACrB,OAAO,IAAI,CAAC;GACb;EAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;IACjC,OAAO,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;GAC9C;EAED,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["/**\n * https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\n *\n * You can get the focused element with document.activeElement but,\n * if it's inside a shadow root, this will be the host element.\n *\n * Here's a recursive function that will return the internal element that has focus,\n * even if it's inside a shadow root.\n *\n */\n\nimport { isEmpty } from '@springbokagency/stencil-base';\n\nexport function getActiveElement(root: Document | ShadowRoot = document): Element | null {\n  const activeEl = root.activeElement;\n\n  if (isEmpty(activeEl)) {\n    return null;\n  }\n\n  if (!isEmpty(activeEl.shadowRoot)) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n\n  return activeEl;\n}\n"]}